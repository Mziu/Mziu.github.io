{"version":3,"sources":["webpack:///./src/views/home/index.vue?16ef","webpack:///./src/components/teamItem.vue?26df","webpack:///src/components/teamItem.vue","webpack:///./src/components/teamItem.vue?73d1","webpack:///./src/components/teamItem.vue","webpack:///./src/components/workShowItem.vue?eaa1","webpack:///./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/_dom7@2.1.2@dom7/dist/dom7.modular.js","webpack:///./node_modules/_swiper@4.4.2@swiper/dist/js/swiper.esm.bundle.js","webpack:///src/components/workShowItem.vue","webpack:///./src/components/workShowItem.vue?f3ad","webpack:///./src/components/workShowItem.vue","webpack:///src/views/home/index.vue","webpack:///./src/views/home/index.vue?fcbb","webpack:///./src/views/home/index.vue","webpack:///./src/components/teamItem.vue?d32e","webpack:///./src/views/home/index.vue?b402","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack:///./src/components/workShowItem.vue?38d6"],"names":["homevue_type_template_id_2dafd192_render","_vm","this","_h","$createElement","_c","_self","staticClass","_l","item","index","key","style","backgroundImage","attrs","data-swiper-autoplay","id","_m","_v","_s","msg","class","ind","icon","staticRenderFns","teamItemvue_type_template_id_657988a1_scoped_true_render","n","staticStyle","height","width","background-size","name","job","teamItemvue_type_template_id_657988a1_scoped_true_staticRenderFns","teamItemvue_type_script_lang_js_","data","computed","Object","objectSpread","vuex_esm","components_teamItemvue_type_script_lang_js_","component","componentNormalizer","options","__file","teamItem","workShowItemvue_type_template_id_f317ad2e_render","max-width","overflow","margin","interval","type","label","title","img","on","click","$event","gopath","path","workShowItemvue_type_template_id_f317ad2e_staticRenderFns","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","proto","static","install","m","installModule","updateSize","swiper","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","transition$1","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","swiper_esm_bundle_Browser","isSafari","isIE","isEdge","isUiWebView","test","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","swiper_esm_bundle","workShowItemvue_type_script_lang_js_","mounted","methods","$router","components_workShowItemvue_type_script_lang_js_","workShowItem_component","workShowItem","homevue_type_script_lang_js_","hands","beforeMount","_this","info","pt","setInterval","clearInterval","t","_this2","int","substr","views_homevue_type_script_lang_js_","home_component","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_teamItem_vue_vue_type_style_index_0_id_657988a1_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_teamItem_vue_vue_type_style_index_0_id_657988a1_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_stylus___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_stylus___WEBPACK_IMPORTED_MODULE_0___default","_defineProperty","configurable","writable","_objectSpread","source","ownKeys","getOwnPropertySymbols","concat","sym","d","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_workShowItem_vue_vue_type_style_index_0_lang_stylus___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_workShowItem_vue_vue_type_style_index_0_lang_stylus___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"kJAAA,IAAIA,EAAM,WAAgB,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,OAA2BE,YAAA,oBAA+B,CAAAF,EAAA,OAAYE,YAAA,kBAA6BN,EAAAO,GAAA,WAAAC,EAAAC,GAAiC,OAAAL,EAAA,OAAiBM,IAAAF,EAAAE,IAAAJ,YAAA,eAAAK,MAAA,CAAgDC,gBAAA,iCAAAH,EAAA,YAAmEI,MAAA,CAASC,uBAAA,aAAiCV,EAAA,OAAaE,YAAA,wBAAgCF,EAAA,OAAcS,MAAA,CAAOE,GAAA,WAAe,CAAAf,EAAAgB,GAAA,GAAAZ,EAAA,OAAsBE,YAAA,YAAuB,CAAAN,EAAAiB,GAAA,aAAAjB,EAAAkB,GAAAlB,EAAAmB,KAAA,cAAAf,EAAA,QAA+DE,YAAA,WAAAc,OAAA,IAAApB,EAAAqB,IAAA,oBAAmE,CAAArB,EAAAiB,GAAAjB,EAAAkB,GAAAlB,EAAAsB,MAAA,WAAAlB,EAAA,aAAAA,EAAA,uBAC3oBmB,EAAA,YAAoC,IAAAvB,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,UAAqB,CAAAF,EAAA,QAAAJ,EAAAiB,GAAA,SAAAb,EAAA,QAAAJ,EAAAiB,GAAA,OAAAb,EAAA,QAAAJ,EAAAiB,GAAA,SAAAb,EAAA,OAA2FE,YAAA,8BAAwCF,EAAA,OAAYE,YAAA,kCCDpRkB,iCAAM,WAAgB,IAAAxB,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,QAAmB,CAAAF,EAAA,OAAYE,YAAA,iBAA4B,CAAAN,EAAAgB,GAAA,GAAAZ,EAAA,OAAsBE,YAAA,sBAAiCN,EAAAO,GAAAP,EAAA,qBAAAyB,GAAsC,OAAArB,EAAA,OAAiBM,IAAAe,EAAAf,IAAAJ,YAAA,6BAAkD,CAAAF,EAAA,OAAYE,YAAA,kCAA6C,CAAAF,EAAA,OAAYE,YAAA,uCAAkD,CAAAF,EAAA,OAAYsB,YAAA,CAAaC,OAAA,WAAAC,MAAA,QAAAC,kBAAA,aAAkElB,MAAAc,EAAA,KAAcrB,EAAA,OAAYE,YAAA,6CAAwD,CAAAF,EAAA,OAAAJ,EAAAiB,GAAAjB,EAAAkB,GAAAO,EAAAK,SAAA1B,EAAA,OAA+CE,YAAA,kDAA6D,CAAAN,EAAAiB,GAAAjB,EAAAkB,GAAAO,EAAAM,mBAAkC/B,EAAAgB,GAAA,SACnvBgB,EAAe,YAAiB,IAAAhC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,sBAAiC,CAAAF,EAAA,OAAYE,YAAA,6BAAwC,CAAAN,EAAAiB,GAAA,iBAAAb,EAAA,OAAsCE,YAAA,+BAA0C,CAAAN,EAAAiB,GAAA,yBAAmC,WAAc,IAAAjB,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,cAAyB,CAAAF,EAAA,OAAYE,YAAA,kBAA6B,CAAAN,EAAAiB,GAAA,eAAAb,EAAA,OAAkCE,YAAA,mBAA8B,CAAAF,EAAA,OAAYE,YAAA,kBAA6B,CAAAN,EAAAiB,GAAA,cAAAb,EAAA,OAAiCE,YAAA,iDCqCtmB2B,EAAA,CACAC,KADA,WAEA,UAGAC,SAAAC,OAAAC,EAAA,KAAAD,CAAA,GACAA,OAAAE,EAAA,KAAAF,CAAA,mBC5CkVG,EAAA,0BCQlVC,EAAgBJ,OAAAK,EAAA,KAAAL,CACdG,EACAf,EACAQ,GACF,EACA,KACA,WACA,MAIAQ,EAAAE,QAAAC,OAAA,eACe,IAAAC,EAAAJ,UCpBXK,EAAM,WAAgB,IAAA7C,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBsB,YAAA,CAAaoB,YAAA,SAAAC,SAAA,SAAAC,OAAA,WAA4D,CAAA5C,EAAA,OAAYE,YAAA,aAAwB,CAAAF,EAAA,eAAoBS,MAAA,CAAOoC,SAAA,IAAAC,KAAA,OAAAvB,OAAA,UAAgD3B,EAAAO,GAAAP,EAAA,yBAAAyB,GAA0C,OAAArB,EAAA,oBAA8BM,IAAAe,EAAAf,IAAAG,MAAA,CAAiBsC,MAAA1B,EAAA2B,QAAiB,CAAAhD,EAAA,OAAYE,YAAA,eAAAK,MAAA,CAAmCC,gBAAA,OAAAa,EAAA4B,IAAA,KAAkCC,GAAA,CAAMC,MAAA,SAAAC,GAAyBxD,EAAAyD,OAAAhC,EAAAiC,UAAqBtD,EAAA,OAAYE,YAAA,WAAsB,CAAAN,EAAAiB,GAAAjB,EAAAkB,GAAAO,EAAA2B,gBAA8B,MAC7kBO,EAAe,GCUnBC,EAAA,qBAAAC,SAAA,CACAC,KAAA,GACAC,iBAAA,aACAC,oBAAA,aACAC,cAAA,CACAC,KAAA,aACAC,SAAA,IAEAC,cAAA,WACA,aAEAC,iBAAA,WACA,UAEAC,eAAA,WACA,aAEAC,YAAA,WACA,OACAC,UAAA,eAGAC,cAAA,WACA,OACAC,SAAA,GACAC,WAAA,GACAhE,MAAA,GACAiE,aAAA,aACAC,qBAAA,WACA,YAIAC,SAAA,CAAaC,KAAA,KACZlB,SAEDmB,EAAA,qBAAAC,OAAA,CACApB,SAAAD,EACAsB,UAAA,CACAC,UAAA,IAEAL,SAAA,GACAM,QAAA,GACAC,YAAA,WACA,OAAApF,MAEA8D,iBAAA,aACAC,oBAAA,aACAsB,iBAAA,WACA,OACAC,iBAAA,WACA,YAIAC,MAAA,aACAC,KAAA,aACAC,OAAA,GACAC,WAAA,aACAC,aAAA,cACCX,OCxDD,MAAAY,EACAC,YAAAC,GACA,MAAAC,EAAA/F,KAEA,QAAAgG,EAAA,EAAmBA,EAAAF,EAAAG,OAAgBD,GAAA,EACnCD,EAAAC,GAAAF,EAAAE,GAIA,OAFAD,EAAAE,OAAAH,EAAAG,OAEAjG,MAIA,SAAAkG,EAAAC,EAAAC,GACA,MAAAN,EAAA,GACA,IAAAE,EAAA,EACA,GAAAG,IAAAC,GACAD,aAAAP,EACA,OAAAO,EAGA,GAAAA,EAEA,qBAAAA,EAAA,CACA,IAAAE,EACAC,EACA,MAAAC,EAAAJ,EAAAK,OACA,GAAAD,EAAAE,QAAA,SAAAF,EAAAE,QAAA,SACA,IAAAC,EAAA,MAQA,IAPA,IAAAH,EAAAE,QAAA,SAAAC,EAAA,MACA,IAAAH,EAAAE,QAAA,SAAAC,EAAA,SACA,IAAAH,EAAAE,QAAA,YAAAF,EAAAE,QAAA,SAAAC,EAAA,MACA,IAAAH,EAAAE,QAAA,YAAAC,EAAA,SACA,IAAAH,EAAAE,QAAA,aAAAC,EAAA,UACAJ,EAAqB3C,EAAQa,cAAAkC,GAC7BJ,EAAAK,UAAAJ,EACAP,EAAA,EAAmBA,EAAAM,EAAA5B,WAAAuB,OAAkCD,GAAA,EACrDF,EAAAc,KAAAN,EAAA5B,WAAAsB,SAUA,IAFAK,EALAD,GAAA,MAAAD,EAAA,IAAAA,EAAAU,MAAA,aAKAT,GAA4BzC,GAAQS,iBAAA+B,EAAAK,QAHpC,CAAiB7C,EAAQU,eAAA8B,EAAAK,OAAAM,MAAA,UAKzBd,EAAA,EAAmBA,EAAAK,EAAAJ,OAAgBD,GAAA,EACnCK,EAAAL,IAAAF,EAAAc,KAAAP,EAAAL,SAGK,GAAAG,EAAAY,UAAAZ,IAA4CpB,GAAMoB,IAAiBxC,EAExEmC,EAAAc,KAAAT,QACK,GAAAA,EAAAF,OAAA,GAAAE,EAAA,GAAAY,SAEL,IAAAf,EAAA,EAAiBA,EAAAG,EAAAF,OAAqBD,GAAA,EACtCF,EAAAc,KAAAT,EAAAH,IAIA,WAAAJ,EAAAE,GAOA,SAAAkB,EAAAlB,GACA,MAAAmB,EAAA,GACA,QAAAjB,EAAA,EAAiBA,EAAAF,EAAAG,OAAgBD,GAAA,GACjC,IAAAiB,EAAAR,QAAAX,EAAAE,KAAAiB,EAAAL,KAAAd,EAAAE,IAEA,OAAAiB,EAkBA,SAAAC,EAAAC,GACA,wBAAAA,EACA,OAAAnH,KAEA,MAAAoH,EAAAD,EAAAL,MAAA,KACA,QAAAd,EAAA,EAAiBA,EAAAoB,EAAAnB,OAAoBD,GAAA,EACrC,QAAAqB,EAAA,EAAmBA,EAAArH,KAAAiG,OAAiBoB,GAAA,EACpC,qBAAArH,KAAAqH,IAAA,qBAAArH,KAAAqH,GAAAC,WAAAtH,KAAAqH,GAAAC,UAAAC,IAAAH,EAAApB,IAGA,OAAAhG,KAEA,SAAAwH,EAAAL,GACA,MAAAC,EAAAD,EAAAL,MAAA,KACA,QAAAd,EAAA,EAAiBA,EAAAoB,EAAAnB,OAAoBD,GAAA,EACrC,QAAAqB,EAAA,EAAmBA,EAAArH,KAAAiG,OAAiBoB,GAAA,EACpC,qBAAArH,KAAAqH,IAAA,qBAAArH,KAAAqH,GAAAC,WAAAtH,KAAAqH,GAAAC,UAAAG,OAAAL,EAAApB,IAGA,OAAAhG,KAEA,SAAA0H,EAAAP,GACA,QAAAnH,KAAA,IACAA,KAAA,GAAAsH,UAAAK,SAAAR,GAEA,SAAAS,EAAAT,GACA,MAAAC,EAAAD,EAAAL,MAAA,KACA,QAAAd,EAAA,EAAiBA,EAAAoB,EAAAnB,OAAoBD,GAAA,EACrC,QAAAqB,EAAA,EAAmBA,EAAArH,KAAAiG,OAAiBoB,GAAA,EACpC,qBAAArH,KAAAqH,IAAA,qBAAArH,KAAAqH,GAAAC,WAAAtH,KAAAqH,GAAAC,UAAAO,OAAAT,EAAApB,IAGA,OAAAhG,KAEA,SAAA8H,EAAAlH,EAAAmH,GACA,OAAAC,UAAA/B,QAAA,kBAAArF,EAEA,OAAAZ,KAAA,GAAAA,KAAA,GAAAiI,aAAArH,QACA,EAIA,QAAAoF,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAClC,OAAAgC,UAAA/B,OAEAjG,KAAAgG,GAAArB,aAAA/D,EAAAmH,QAIA,UAAAG,KAAAtH,EACAZ,KAAAgG,GAAAkC,GAAAtH,EAAAsH,GACAlI,KAAAgG,GAAArB,aAAAuD,EAAAtH,EAAAsH,IAIA,OAAAlI,KAGA,SAAAmI,EAAAL,GACA,QAAA9B,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAClChG,KAAAgG,GAAAoC,gBAAAN,GAEA,OAAA9H,KAwBA,SAAAiC,EAAAxB,EAAAsH,GACA,IAAAM,EACA,wBAAAN,EAAA,CAkBA,QAAA/B,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAClCqC,EAAArI,KAAAgG,GACAqC,EAAAC,yBAAAD,EAAAC,uBAAA,IACAD,EAAAC,uBAAA7H,GAAAsH,EAEA,OAAA/H,KApBA,GAFAqI,EAAArI,KAAA,GAEAqI,EAAA,CACA,GAAAA,EAAAC,wBAAA7H,KAAA4H,EAAAC,uBACA,OAAAD,EAAAC,uBAAA7H,GAGA,MAAA8H,EAAAF,EAAAJ,qBAA8CxH,KAC9C,OAAA8H,QAGA,GA8EA,SAAAC,KACA,QAAAxC,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,GAClC,MAAAyC,EAAAzI,KAAAgG,GAAAtF,MACA+H,EAAAC,gBAAAF,EACAC,EAAAD,YAEA,OAAAxI,KAEA,SAAA2I,EAAAC,GACA,kBAAAA,IACAA,KAAkBA,OAElB,QAAA5C,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,GAClC,MAAAyC,EAAAzI,KAAAgG,GAAAtF,MACA+H,EAAAI,yBAAAD,EACAH,EAAAK,mBAAAF,EAEA,OAAA5I,KAGA,SAAAqD,KAAA0F,GACA,IAAAC,EAAAC,EAAAC,EAAAC,GAAAJ,EAOA,SAAAK,EAAAC,GACA,MAAAC,EAAAD,EAAAC,OACA,IAAAA,EAAA,OACA,MAAAC,EAAAF,EAAAC,OAAAE,eAAA,GAIA,GAHAD,EAAA9C,QAAA4C,GAAA,GACAE,EAAAE,QAAAJ,GAEAnD,EAAAoD,GAAAI,GAAAT,GAAAC,EAAAS,MAAAL,EAAAC,OACA,CACA,MAAAK,EAAA1D,EAAAoD,GAAAM,UACA,QAAAC,EAAA,EAAqBA,EAAAD,EAAA3D,OAAoB4D,GAAA,EACzC3D,EAAA0D,EAAAC,IAAAH,GAAAT,IAAAC,EAAAS,MAAAC,EAAAC,GAAAN,IAIA,SAAAO,EAAAT,GACA,MAAAE,EAAAF,KAAAC,QAAAD,EAAAC,OAAAE,eAAA,GACAD,EAAA9C,QAAA4C,GAAA,GACAE,EAAAE,QAAAJ,GAEAH,EAAAS,MAAA3J,KAAAuJ,GA1BA,oBAAAR,EAAA,MACAC,EAAAE,EAAAC,GAAAJ,EACAE,OAAAc,GAEAZ,OAAA,GAwBA,MAAAa,EAAAhB,EAAAlC,MAAA,KACA,IAAAO,EACA,QAAArB,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,GAClC,MAAAqC,EAAArI,KAAAgG,GACA,GAAAiD,EAaA,IAAA5B,EAAA,EAAiBA,EAAA2C,EAAA/D,OAAmBoB,GAAA,GACpC,MAAA4C,EAAAD,EAAA3C,GACAgB,EAAA6B,oBAAA7B,EAAA6B,kBAAA,IACA7B,EAAA6B,kBAAAD,KAAA5B,EAAA6B,kBAAAD,GAAA,IACA5B,EAAA6B,kBAAAD,GAAArD,KAAA,CACAsC,WACAiB,cAAAf,IAEAf,EAAAvE,iBAAAmG,EAAAb,EAAAD,QApBA,IAAA9B,EAAA,EAAiBA,EAAA2C,EAAA/D,OAAmBoB,GAAA,GACpC,MAAA4C,EAAAD,EAAA3C,GACAgB,EAAA+B,gBAAA/B,EAAA+B,cAAA,IACA/B,EAAA+B,cAAAH,KAAA5B,EAAA+B,cAAAH,GAAA,IACA5B,EAAA+B,cAAAH,GAAArD,KAAA,CACAsC,WACAiB,cAAAL,IAEAzB,EAAAvE,iBAAAmG,EAAAH,EAAAX,IAgBA,OAAAnJ,KAEA,SAAAqK,KAAAtB,GACA,IAAAC,EAAAC,EAAAC,EAAAC,GAAAJ,EACA,oBAAAA,EAAA,MACAC,EAAAE,EAAAC,GAAAJ,EACAE,OAAAc,GAEAZ,OAAA,GAEA,MAAAa,EAAAhB,EAAAlC,MAAA,KACA,QAAAd,EAAA,EAAiBA,EAAAgE,EAAA/D,OAAmBD,GAAA,GACpC,MAAAiE,EAAAD,EAAAhE,GACA,QAAAqB,EAAA,EAAmBA,EAAArH,KAAAiG,OAAiBoB,GAAA,GACpC,MAAAgB,EAAArI,KAAAqH,GACA,IAAAiD,EAMA,IALArB,GAAAZ,EAAA+B,cACAE,EAAAjC,EAAA+B,cAAAH,GACOhB,GAAAZ,EAAA6B,oBACPI,EAAAjC,EAAA6B,kBAAAD,IAEAK,KAAArE,OACA,QAAA4D,EAAAS,EAAArE,OAAA,EAAyC4D,GAAA,EAAQA,GAAA,GACjD,MAAAU,EAAAD,EAAAT,GACAX,GAAAqB,EAAArB,cACAb,EAAAtE,oBAAAkG,EAAAM,EAAAJ,cAAAhB,GACAmB,EAAAE,OAAAX,EAAA,IACWX,IACXb,EAAAtE,oBAAAkG,EAAAM,EAAAJ,cAAAhB,GACAmB,EAAAE,OAAAX,EAAA,MAMA,OAAA7J,KAeA,SAAAyK,KAAA1B,GACA,MAAAiB,EAAAjB,EAAA,GAAAjC,MAAA,KACAyC,EAAAR,EAAA,GACA,QAAA/C,EAAA,EAAiBA,EAAAgE,EAAA/D,OAAmBD,GAAA,GACpC,MAAAiE,EAAAD,EAAAhE,GACA,QAAAqB,EAAA,EAAmBA,EAAArH,KAAAiG,OAAiBoB,GAAA,GACpC,MAAAgB,EAAArI,KAAAqH,GACA,IAAAqD,EACA,IACAA,EAAA,IAAkB3F,EAAMK,YAAA6E,EAAA,CACxBU,OAAApB,EACAqB,SAAA,EACAC,YAAA,IAEO,MAAAxB,GACPqB,EAAc/G,EAAQW,YAAA,SACtBoG,EAAAnG,UAAA0F,GAAA,MACAS,EAAAC,OAAApB,EAGAlB,EAAAmB,cAAAT,EAAA+B,OAAA,CAAA7I,EAAA8I,MAAA,GACA1C,EAAA2C,cAAAN,GACArC,EAAAmB,cAAA,UACAnB,EAAAmB,eAGA,OAAAxJ,KAEA,SAAAiL,EAAAC,GACA,MAAAlB,EAAA,wCACAmB,EAAAnL,KACA,IAAAgG,EACA,SAAAoF,EAAA/B,GAEA,GAAAA,EAAAC,SAAAtJ,KAEA,IADAkL,EAAAG,KAAArL,KAAAqJ,GACArD,EAAA,EAAeA,EAAAgE,EAAA/D,OAAmBD,GAAA,EAClCmF,EAAAd,IAAAL,EAAAhE,GAAAoF,GAGA,GAAAF,EACA,IAAAlF,EAAA,EAAeA,EAAAgE,EAAA/D,OAAmBD,GAAA,EAClCmF,EAAA9H,GAAA2G,EAAAhE,GAAAoF,GAGA,OAAApL,KAgCA,SAASsL,EAAUC,GACnB,GAAAvL,KAAAiG,OAAA,GACA,GAAAsF,EAAA,CAEA,MAAAC,EAAAxL,KAAAwL,SACA,OAAAxL,KAAA,GAAAyL,YAAAC,WAAAF,EAAAlG,iBAAA,iBAAAoG,WAAAF,EAAAlG,iBAAA,gBAEA,OAAAtF,KAAA,GAAAyL,YAEA,YAaA,SAASE,EAAWJ,GACpB,GAAAvL,KAAAiG,OAAA,GACA,GAAAsF,EAAA,CAEA,MAAAC,EAAAxL,KAAAwL,SACA,OAAAxL,KAAA,GAAA4L,aAAAF,WAAAF,EAAAlG,iBAAA,eAAAoG,WAAAF,EAAAlG,iBAAA,kBAEA,OAAAtF,KAAA,GAAA4L,aAEA,YAEA,SAAAC,IACA,GAAA7L,KAAAiG,OAAA,GACA,MAAAoC,EAAArI,KAAA,GACA8L,EAAAzD,EAAA0D,wBACAlI,EAAiBF,EAAQE,KACzBmI,EAAA3D,EAAA2D,WAAAnI,EAAAmI,WAAA,EACAC,EAAA5D,EAAA4D,YAAApI,EAAAoI,YAAA,EACAC,EAAA7D,IAA6BtD,EAASA,EAAMoH,QAAA9D,EAAA6D,UAC5CE,EAAA/D,IAA8BtD,EAASA,EAAMsH,QAAAhE,EAAA+D,WAC7C,OACAE,IAAAR,EAAAQ,IAAAJ,EAAAF,EACAO,KAAAT,EAAAS,KAAAH,EAAAH,GAIA,YAqBA,SAAAT,IACA,OAAAxL,KAAA,GAAsB+E,EAAMM,iBAAArF,KAAA,SAC5B,GAEA,SAAAwM,EAAAC,EAAA1E,GACA,IAAA/B,EACA,OAAAgC,UAAA/B,OAAA,CACA,qBAAAwG,EAEK,CACL,IAAAzG,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAElC,QAAA0G,KAAAD,EACAzM,KAAAgG,GAAAtF,MAAAgM,GAAAD,EAAAC,GAGA,OAAA1M,KARA,GAAAA,KAAA,UAA0B+E,EAAMM,iBAAArF,KAAA,SAAAsF,iBAAAmH,GAWhC,OAAAzE,UAAA/B,QAAA,kBAAAwG,EAAA,CACA,IAAAzG,EAAA,EAAeA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAChChG,KAAAgG,GAAAtF,MAAA+L,GAAA1E,EAEA,OAAA/H,KAEA,OAAAA,KAYA,SAAA2M,EAAAzB,GAEA,IAAAA,EAAA,OAAAlL,KAEA,QAAAgG,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAElC,QAAAkF,EAAAG,KAAArL,KAAAgG,KAAAhG,KAAAgG,IAEA,OAAAhG,KAIA,OAAAA,KAiCA,SAAS4M,EAAIrG,GACb,wBAAAA,EACA,OAAAvG,KAAA,GAAAA,KAAA,GAAA2G,eAAAoD,EAGA,QAAA/D,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAClChG,KAAAgG,GAAAW,UAAAJ,EAEA,OAAAvG,KAGA,SAAS6M,EAAIC,GACb,wBAAAA,EACA,OAAA9M,KAAA,GACAA,KAAA,GAAA+M,YAAAvG,OAEA,KAGA,QAAAR,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAClChG,KAAAgG,GAAA+G,YAAAD,EAEA,OAAA9M,KAEA,SAAA0J,EAAAvD,GACA,MAAAkC,EAAArI,KAAA,GACA,IAAAgN,EACAhH,EACA,IAAAqC,GAAA,qBAAAlC,EAAA,SACA,qBAAAA,EAAA,CACA,GAAAkC,EAAA4E,QAAA,OAAA5E,EAAA4E,QAAA9G,GACA,GAAAkC,EAAA6E,sBAAA,OAAA7E,EAAA6E,sBAAA/G,GACA,GAAAkC,EAAA8E,kBAAA,OAAA9E,EAAA8E,kBAAAhH,GAGA,IADA6G,EAAA9G,EAAAC,GACAH,EAAA,EAAeA,EAAAgH,EAAA/G,OAAwBD,GAAA,EACvC,GAAAgH,EAAAhH,KAAAqC,EAAA,SAEA,SACG,GAAAlC,IAAuBxC,EAAQ,OAAA0E,IAAgB1E,EAClD,GAAAwC,IAAwBpB,EAAM,OAAAsD,IAAgBtD,EAE9C,GAAAoB,EAAAY,UAAAZ,aAAAP,EAAA,CAEA,IADAoH,EAAA7G,EAAAY,SAAA,CAAAZ,KACAH,EAAA,EAAeA,EAAAgH,EAAA/G,OAAwBD,GAAA,EACvC,GAAAgH,EAAAhH,KAAAqC,EAAA,SAEA,SAEA,SAQA,SAAS+E,IACT,IACApH,EADAqH,EAAArN,KAAA,GAEA,GAAAqN,EAAA,CACArH,EAAA,EAEA,cAAAqH,IAAAC,iBACA,IAAAD,EAAAtG,WAAAf,GAAA,GAEA,OAAAA,GAKA,SAAAuH,EAAA/M,GACA,wBAAAA,EAAA,OAAAR,KACA,MAAAiG,EAAAjG,KAAAiG,OACA,IAAAuH,EACA,OAAAhN,EAAAyF,EAAA,EACA,IAAAL,EAAA,IAEApF,EAAA,GACAgN,EAAAvH,EAAAzF,EACA,IAAAoF,EAAA4H,EAAA,KACA,CAAAxN,KAAAwN,MAEA,IAAA5H,EAAA,CAAA5F,KAAAQ,KAEA,SAAAiN,KAAA1E,GACA,IAAA2E,EAEA,QAAA7D,EAAA,EAAiBA,EAAAd,EAAA9C,OAAiB4D,GAAA,GAClC6D,EAAA3E,EAAAc,GACA,QAAA7D,EAAA,EAAmBA,EAAAhG,KAAAiG,OAAiBD,GAAA,EACpC,qBAAA0H,EAAA,CACA,MAAAC,EAAwBhK,EAAQa,cAAA,OAChCmJ,EAAAhH,UAAA+G,EACA,MAAAC,EAAAC,WACA5N,KAAAgG,GAAA6H,YAAAF,EAAAC,iBAEO,GAAAF,aAAA9H,EACP,QAAAyB,EAAA,EAAuBA,EAAAqG,EAAAzH,OAAqBoB,GAAA,EAC5CrH,KAAAgG,GAAA6H,YAAAH,EAAArG,SAGArH,KAAAgG,GAAA6H,YAAAH,GAKA,OAAA1N,KAOA,SAAA8N,EAAAJ,GACA,IAAA1H,EACAqB,EACA,IAAArB,EAAA,EAAaA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAC9B,qBAAA0H,EAAA,CACA,MAAAC,EAAsBhK,EAAQa,cAAA,OAE9B,IADAmJ,EAAAhH,UAAA+G,EACArG,EAAAsG,EAAAjJ,WAAAuB,OAAA,EAA6CoB,GAAA,EAAQA,GAAA,EACrDrH,KAAAgG,GAAA+H,aAAAJ,EAAAjJ,WAAA2C,GAAArH,KAAAgG,GAAAtB,WAAA,SAEK,GAAAgJ,aAAA9H,EACL,IAAAyB,EAAA,EAAiBA,EAAAqG,EAAAzH,OAAqBoB,GAAA,EACtCrH,KAAAgG,GAAA+H,aAAAL,EAAArG,GAAArH,KAAAgG,GAAAtB,WAAA,SAGA1E,KAAAgG,GAAA+H,aAAAL,EAAA1N,KAAAgG,GAAAtB,WAAA,IAGA,OAAA1E,KA+BA,SAAAgO,EAAA7H,GACA,OAAAnG,KAAAiG,OAAA,EACAE,EACAnG,KAAA,GAAAiO,oBAAA/H,EAAAlG,KAAA,GAAAiO,oBAAAvE,GAAAvD,GACA,IAAAP,EAAA,CAAA5F,KAAA,GAAAiO,qBAEA,IAAArI,EAAA,IAGA5F,KAAA,GAAAiO,mBAAA,IAAArI,EAAA,CAAA5F,KAAA,GAAAiO,qBACA,IAAArI,EAAA,IAEA,IAAAA,EAAA,IAEA,SAAAsI,EAAA/H,GACA,MAAAgI,EAAA,GACA,IAAA9F,EAAArI,KAAA,GACA,IAAAqI,EAAA,WAAAzC,EAAA,IACA,MAAAyC,EAAA4F,mBAAA,CACA,MAAAD,EAAA3F,EAAA4F,mBACA9H,EACAD,EAAA8H,GAAAtE,GAAAvD,IAAAgI,EAAAvH,KAAAoH,GACKG,EAAAvH,KAAAoH,GACL3F,EAAA2F,EAEA,WAAApI,EAAAuI,GAEA,SAAAC,EAAAjI,GACA,GAAAnG,KAAAiG,OAAA,GACA,MAAAoC,EAAArI,KAAA,GACA,OAAAmG,EACAkC,EAAAgG,wBAAAnI,EAAAmC,EAAAgG,wBAAA3E,GAAAvD,GACA,IAAAP,EAAA,CAAAyC,EAAAgG,yBAEA,IAAAzI,EAAA,IAGAyC,EAAAgG,uBAAA,IAAAzI,EAAA,CAAAyC,EAAAgG,yBACA,IAAAzI,EAAA,IAEA,WAAAA,EAAA,IAEA,SAAA0I,EAAAnI,GACA,MAAAoI,EAAA,GACA,IAAAlG,EAAArI,KAAA,GACA,IAAAqI,EAAA,WAAAzC,EAAA,IACA,MAAAyC,EAAAgG,uBAAA,CACA,MAAAD,EAAA/F,EAAAgG,uBACAlI,EACAD,EAAAkI,GAAA1E,GAAAvD,IAAAoI,EAAA3H,KAAAwH,GACKG,EAAA3H,KAAAwH,GACL/F,EAAA+F,EAEA,WAAAxI,EAAA2I,GAKA,SAASC,EAAMrI,GACf,MAAAyD,EAAA,GACA,QAAA5D,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAClC,OAAAhG,KAAAgG,GAAAyI,aACAtI,EACAD,EAAAlG,KAAAgG,GAAAyI,YAAA/E,GAAAvD,IAAAyD,EAAAhD,KAAA5G,KAAAgG,GAAAyI,YAEA7E,EAAAhD,KAAA5G,KAAAgG,GAAAyI,aAIA,OAAAvI,EAAAc,EAAA4C,IAEA,SAAAA,EAAAzD,GACA,MAAAyD,EAAA,GACA,QAAA5D,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,GAClC,IAAA0I,EAAA1O,KAAAgG,GAAAyI,WACA,MAAAC,EACAvI,EACAD,EAAAwI,GAAAhF,GAAAvD,IAAAyD,EAAAhD,KAAA8H,GAEA9E,EAAAhD,KAAA8H,GAEAA,IAAAD,WAGA,OAAAvI,EAAAc,EAAA4C,IAEA,SAAA+E,EAAAxI,GACA,IAAAwI,EAAA3O,KACA,2BAAAmG,EACA,IAAAP,EAAA,KAEA+I,EAAAjF,GAAAvD,KACAwI,IAAA/E,QAAAzD,GAAAoH,GAAA,IAEAoB,GAEA,SAAAC,GAAAzI,GACA,MAAA0I,EAAA,GACA,QAAA7I,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,GAClC,MAAA8I,EAAA9O,KAAAgG,GAAA5B,iBAAA+B,GACA,QAAAkB,EAAA,EAAmBA,EAAAyH,EAAA7I,OAAkBoB,GAAA,EACrCwH,EAAAjI,KAAAkI,EAAAzH,IAGA,WAAAzB,EAAAiJ,GAEA,SAAApK,GAAA0B,GACA,MAAA1B,EAAA,GACA,QAAAuB,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,GAClC,MAAAtB,EAAA1E,KAAAgG,GAAAtB,WAEA,QAAA2C,EAAA,EAAmBA,EAAA3C,EAAAuB,OAAuBoB,GAAA,EAC1ClB,EAEO,IAAAzB,EAAA2C,GAAAN,UAAAb,EAAAxB,EAAA2C,IAAAqC,GAAAvD,IACP1B,EAAAmC,KAAAlC,EAAA2C,IAFA,IAAA3C,EAAA2C,GAAAN,UAAAtC,EAAAmC,KAAAlC,EAAA2C,IAMA,WAAAzB,EAAAoB,EAAAvC,IAEA,SAAAgD,KACA,QAAAzB,EAAA,EAAiBA,EAAAhG,KAAAiG,OAAiBD,GAAA,EAClChG,KAAAgG,GAAAyI,YAAAzO,KAAAgG,GAAAyI,WAAAM,YAAA/O,KAAAgG,IAEA,OAAAhG,KAKA,SAAAuH,MAAAwB,GACA,MAAAoC,EAAAnL,KACA,IAAAgG,EACAqB,EACA,IAAArB,EAAA,EAAaA,EAAA+C,EAAA9C,OAAiBD,GAAA,GAC9B,MAAAgJ,EAAA9I,EAAA6C,EAAA/C,IACA,IAAAqB,EAAA,EAAeA,EAAA2H,EAAA/I,OAAkBoB,GAAA,EACjC8D,IAAAlF,QAAA+I,EAAA3H,GACA8D,EAAAlF,QAAA,EAGA,OAAAkF,EAl2BAjF,EAAA+I,GAAArJ,EAAAsJ,UACAhJ,EAAAiJ,MAAAvJ,EACAM,EAAAN,OAwpCA,gBAAAkB,MAAA,KC1tCA,MAAAsI,GAAA,CACElI,WACAM,cACAE,WACAE,cACAE,OACAK,aACAlG,OACAuG,YACAG,aACAtF,KACAgH,MACAI,UACAQ,gBACAoE,WAAA/D,EACAgE,YAAA3D,EACAE,SACAW,MACAG,OACApG,KAAAqG,EACAE,KAAAD,EACAnD,KACAlJ,MAAA4M,EACAG,KACAE,SACAK,UACAE,OACAE,UACAE,OACAE,UACAI,OAAAF,EACA5E,UACA+E,UACAC,QACAnK,YACAgD,UACAF,OACAiE,UAGFrJ,OAAAoN,KAAAH,IAAAI,QAAAC,IACEvJ,EAAC+I,GAAAQ,GAAAL,GAAAK,KAGH,MAAAC,GAAA,CACA7J,YAAA8J,GACA,MAAAC,EAAAD,EACAxN,OAAAoN,KAAAK,GAAAJ,QAAA/O,IACA,IACAmP,EAAAnP,GAAA,KACO,MAAA4I,IAGP,WACAuG,EAAAnP,GACO,MAAA4I,QAKPxD,SAAAqF,EAAA2E,EAAA,GACA,OAAAnK,WAAAwF,EAAA2E,IAEAhK,MACA,OAAAL,KAAAsK,OAEAjK,aAAAwC,EAAA0H,EAAA,KACA,IAAAC,EACAC,EACAC,EAEA,MAAAC,EAAqBpL,EAAMM,iBAAAgD,EAAA,MA+B3B,OA7BQtD,EAAMqL,iBACdH,EAAAE,EAAA3H,WAAA2H,EAAAzH,gBACAuH,EAAAnJ,MAAA,KAAAb,OAAA,IACAgK,IAAAnJ,MAAA,MAAAuJ,IAAAC,KAAAC,QAAA,UAAAC,KAAA,OAIAN,EAAA,IAA4BnL,EAAMqL,gBAAA,SAAAH,EAAA,GAAAA,KAElCC,EAAAC,EAAAM,cAAAN,EAAAO,YAAAP,EAAAQ,aAAAR,EAAAS,aAAAT,EAAA3H,WAAA2H,EAAA7K,iBAAA,aAAAiL,QAAA,mCACAP,EAAAE,EAAAW,WAAA/J,MAAA,MAGA,MAAAiJ,IAEgBE,EAANlL,EAAMqL,gBAAAF,EAAAY,IAEhB,KAAAd,EAAA/J,OAAAyF,WAAAsE,EAAA,KAEAtE,WAAAsE,EAAA,KAEA,MAAAD,IAEgBE,EAANlL,EAAMqL,gBAAAF,EAAAa,IAEhB,KAAAf,EAAA/J,OAAAyF,WAAAsE,EAAA,KAEAtE,WAAAsE,EAAA,KAEAC,GAAA,GAEApK,cAAAmL,GACA,MAAAC,EAAA,GACA,IACAjL,EACAkL,EACAC,EACAlL,EAJAmL,EAAAJ,GAA4BjM,EAAMF,SAAAwM,KAKlC,qBAAAD,KAAAnL,OAKA,IAJAmL,IAAA3K,QAAA,QAAA2K,EAAAb,QAAA,eACAW,EAAAE,EAAAtK,MAAA,KAAAgE,OAAAwG,GAAA,KAAAA,GACArL,EAAAiL,EAAAjL,OAEAD,EAAA,EAAiBA,EAAAC,EAAYD,GAAA,EAC7BmL,EAAAD,EAAAlL,GAAAuK,QAAA,YAAAzJ,MAAA,KACAmK,EAAAM,mBAAAJ,EAAA,0BAAAA,EAAA,QAAApH,EAAAwH,mBAAAJ,EAAA,QAGA,OAAAF,GAEApL,SAAA2L,GACA,wBAAAA,GAAA,OAAAA,KAAAC,aAAAD,EAAAC,cAAAtP,QAEA0D,UAAAkD,GACA,MAAA2I,EAAAvP,OAAA4G,EAAA,IACA,QAAA/C,EAAA,EAAmBA,EAAA+C,EAAA9C,OAAiBD,GAAA,GACpC,MAAA2L,EAAA5I,EAAA/C,GACA,QAAA+D,IAAA4H,GAAA,OAAAA,EAAA,CACA,MAAAC,EAAAzP,OAAAoN,KAAApN,OAAAwP,IACA,QAAAE,EAAA,EAAAC,EAAAF,EAAA3L,OAAuD4L,EAAAC,EAAiBD,GAAA,GACxE,MAAAE,EAAAH,EAAAC,GACAG,EAAA7P,OAAA8P,yBAAAN,EAAAI,QACAhI,IAAAiI,KAAAE,aACAxC,GAAAyC,SAAAT,EAAAK,KAAArC,GAAAyC,SAAAR,EAAAI,IACArC,GAAA0C,OAAAV,EAAAK,GAAAJ,EAAAI,KACarC,GAAAyC,SAAAT,EAAAK,KAAArC,GAAAyC,SAAAR,EAAAI,KACbL,EAAAK,GAAA,GACArC,GAAA0C,OAAAV,EAAAK,GAAAJ,EAAAI,KAEAL,EAAAK,GAAAJ,EAAAI,MAMA,OAAAL,IAIMW,GAAO,WACb,MAAAC,EAAkB3O,EAAQa,cAAA,OAC1B,OACA+N,MAAYxN,EAAMyN,YAAoB,IAANzN,EAAMyN,UAAAD,OAAA,WACtC,0BAAmCxN,GAAYA,EAAM0N,eAAkB9O,aAAoBoB,EAAM0N,eAD3D,GAItCC,iBAAsB3N,EAAME,UAAA0N,gBAA6B5N,EAAM6N,cAAA,mBAAsC7N,EAAME,WAC3G4N,wBAA6B9N,EAAME,UAAA6N,iBAEnCnK,WAAA,WACA,MAAAjI,EAAA4R,EAAA5R,MACA,qBAAAA,GAAA,qBAAAA,GAAA,kBAAAA,EAFA,GAIAqS,aAAmBhO,EAAMyN,YAAoB,IAANzN,EAAMyN,UAAAQ,iBAAA,WAC7C,MAAAtS,EAAA4R,EAAA5R,MACA,4BAAAA,GAAA,mBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAA,gBAAAA,EAF6C,GAK7CuS,QAAA,WACA,MAAAvS,EAAA4R,EAAA5R,MACAwS,EAAA,yKAAApM,MAAA,KACA,QAAAd,EAAA,EAAqBA,EAAAkN,EAAAjN,OAAsBD,GAAA,EAC3C,GAAAkN,EAAAlN,KAAAtF,EAAA,SAEA,SANA,GASAyS,SAAA,WACA,2BAAoCpO,GAAM,2BAAgCA,EAD1E,GAIAqO,gBAAA,WACA,IAAAC,GAAA,EACA,IACA,MAAAC,EAAAnR,OAAAoR,eAAA,GAA6C,WAE7C1N,MACAwN,GAAA,KAGQtO,EAAMjB,iBAAA,2BAAAwP,GACP,MAAAjK,IAGP,OAAAgK,EAbA,GAgBAG,SAAA,WACA,yBAAiCzO,EADjC,IAhDa,GAsDb,MAAA0O,GACA5N,YAAAqL,EAAA,IACA,MAAAnL,EAAA/F,KACA+F,EAAAmL,SAGAnL,EAAA2N,gBAAA,GAEA3N,EAAAmL,QAAAnL,EAAAmL,OAAA7N,IACAlB,OAAAoN,KAAAxJ,EAAAmL,OAAA7N,IAAAmM,QAAAmE,IACA5N,EAAA1C,GAAAsQ,EAAA5N,EAAAmL,OAAA7N,GAAAsQ,MAKA9N,GAAAmE,EAAAO,EAAAqJ,GACA,MAAA7N,EAAA/F,KACA,uBAAAuK,EAAA,OAAAxE,EACA,MAAA8N,EAAAD,EAAA,iBAKA,OAJA5J,EAAAlD,MAAA,KAAA0I,QAAAvF,IACAlE,EAAA2N,gBAAAzJ,KAAAlE,EAAA2N,gBAAAzJ,GAAA,IACAlE,EAAA2N,gBAAAzJ,GAAA4J,GAAAtJ,KAEAxE,EAGAF,KAAAmE,EAAAO,EAAAqJ,GACA,MAAA7N,EAAA/F,KACA,uBAAAuK,EAAA,OAAAxE,EACA,SAAA+N,KAAA/K,GACAwB,EAAAZ,MAAA5D,EAAAgD,GACAhD,EAAAsE,IAAAL,EAAA8J,GAEA,OAAA/N,EAAA1C,GAAA2G,EAAA8J,EAAAF,GAGA/N,IAAAmE,EAAAO,GACA,MAAAxE,EAAA/F,KACA,OAAA+F,EAAA2N,iBACA1J,EAAAlD,MAAA,KAAA0I,QAAAvF,IACA,qBAAAM,EACAxE,EAAA2N,gBAAAzJ,GAAA,GACOlE,EAAA2N,gBAAAzJ,IAAAlE,EAAA2N,gBAAAzJ,GAAAhE,QACPF,EAAA2N,gBAAAzJ,GAAAuF,QAAA,CAAAuE,EAAAC,KACAD,IAAAxJ,GACAxE,EAAA2N,gBAAAzJ,GAAAO,OAAAwJ,EAAA,OAKAjO,GAZAA,EAeAF,QAAAkD,GACA,MAAAhD,EAAA/F,KACA,IAAA+F,EAAA2N,gBAAA,OAAA3N,EACA,IAAAiE,EACAiK,EACA7N,EACA,kBAAA2C,EAAA,IAAAmL,MAAAC,QAAApL,EAAA,KACAiB,EAAAjB,EAAA,GACAkL,EAAAlL,EAAAqL,MAAA,EAAArL,EAAA9C,QACAG,EAAAL,IAEAiE,EAAAjB,EAAA,GAAAiB,OACAiK,EAAAlL,EAAA,GAAA9G,KACAmE,EAAA2C,EAAA,GAAA3C,SAAAL,GAEA,MAAAsO,EAAAH,MAAAC,QAAAnK,OAAAlD,MAAA,KAYA,OAXAuN,EAAA7E,QAAAvF,IACA,GAAAlE,EAAA2N,iBAAA3N,EAAA2N,gBAAAzJ,GAAA,CACA,MAAAK,EAAA,GACAvE,EAAA2N,gBAAAzJ,GAAAuF,QAAAuE,IACAzJ,EAAA1D,KAAAmN,KAEAzJ,EAAAkF,QAAAuE,IACAA,EAAApK,MAAAvD,EAAA6N,QAIAlO,EAGAF,iBAAAyO,GACA,MAAAC,EAAAvU,KACAuU,EAAAC,SACArS,OAAAoN,KAAAgF,EAAAC,SAAAhF,QAAAiF,IACA,MAAAC,EAAAH,EAAAC,QAAAC,GAEAC,EAAAxD,QACAxB,GAAA0C,OAAAkC,EAAAI,EAAAxD,UAKArL,WAAA8O,EAAA,IACA,MAAAJ,EAAAvU,KACAuU,EAAAC,SACArS,OAAAoN,KAAAgF,EAAAC,SAAAhF,QAAAiF,IACA,MAAAC,EAAAH,EAAAC,QAAAC,GACAG,EAAAD,EAAAF,IAAA,GAEAC,EAAAH,UACApS,OAAAoN,KAAAmF,EAAAH,UAAA/E,QAAAqF,IACA,MAAAC,EAAAJ,EAAAH,SAAAM,GAEAN,EAAAM,GADA,oBAAAC,EACAA,EAAAC,KAAAR,GAEAO,IAKAJ,EAAArR,IAAAkR,EAAAlR,IACAlB,OAAAoN,KAAAmF,EAAArR,IAAAmM,QAAAwF,IACAT,EAAAlR,GAAA2R,EAAAN,EAAArR,GAAA2R,MAKAN,EAAAO,QACAP,EAAAO,OAAAF,KAAAR,EAAAG,CAAAE,KAKAM,yBACA,MAAA/F,EAAAnP,KACAmP,EAAAgG,KACAhG,EAAAgG,IAAAD,GAGArP,qBAAA6O,KAAAxD,GACA,MAAA/B,EAAAnP,KACAmP,EAAAD,UAAAsF,UAAArF,EAAAD,UAAAsF,QAAA,IACA,MAAA3S,EAAA6S,EAAA7S,SAAoCM,OAAAoN,KAAAJ,EAAAD,UAAAsF,SAAAvO,UAA+CyJ,GAAAI,QAkBnF,OAjBAX,EAAAD,UAAAsF,QAAA3S,GAAA6S,EAEAA,EAAAU,OACAjT,OAAAoN,KAAAmF,EAAAU,OAAA5F,QAAA/O,IACA0O,EAAAD,UAAAzO,GAAAiU,EAAAU,MAAA3U,KAIAiU,EAAAW,QACAlT,OAAAoN,KAAAmF,EAAAW,QAAA7F,QAAA/O,IACA0O,EAAA1O,GAAAiU,EAAAW,OAAA5U,KAIAiU,EAAAY,SACAZ,EAAAY,QAAA3L,MAAAwF,EAAA+B,GAEA/B,EAGAtJ,WAAA6O,KAAAxD,GACA,MAAA/B,EAAAnP,KACA,OAAAkU,MAAAC,QAAAO,IACAA,EAAAlF,QAAA+F,GAAApG,EAAAqG,cAAAD,IACApG,GAEAA,EAAAqG,cAAAd,KAAAxD,IAIA,SAAAuE,KACA,MAAAC,EAAA1V,KACA,IAAA2B,EACAD,EACA,MAAAiU,EAAAD,EAAAC,IAEAhU,EADA,qBAAA+T,EAAAxE,OAAAvP,MACA+T,EAAAxE,OAAAvP,MAEAgU,EAAA,GAAAC,YAGAlU,EADA,qBAAAgU,EAAAxE,OAAAxP,OACAgU,EAAAxE,OAAAxP,OAEAiU,EAAA,GAAAE,aAEA,IAAAlU,GAAA+T,EAAAI,gBAAA,IAAApU,GAAAgU,EAAAK,eAKApU,IAAAqU,SAAAL,EAAAnJ,IAAA,oBAAAwJ,SAAAL,EAAAnJ,IAAA,qBACA9K,IAAAsU,SAAAL,EAAAnJ,IAAA,mBAAAwJ,SAAAL,EAAAnJ,IAAA,sBAEAkD,GAAA0C,OAAAsD,EAAA,CACA/T,QACAD,SACAuU,KAAAP,EAAAI,eAAAnU,EAAAD,KAIA,SAAAwU,KACA,MAAAR,EAAA1V,KACAkR,EAAAwE,EAAAxE,QAEAiF,WACAA,EAAAF,KAAAG,EAAAC,aAAAC,EAAAC,YACGb,EACHc,EAAAd,EAAAe,SAAAvF,EAAAuF,QAAAC,QACAC,EAAAH,EAAAd,EAAAe,QAAAG,OAAA3Q,OAAAyP,EAAAkB,OAAA3Q,OACA2Q,EAAAT,EAAA1R,aAAyCiR,EAAAxE,OAAA2F,cACzCC,EAAAN,EAAAd,EAAAe,QAAAG,OAAA3Q,OAAA2Q,EAAA3Q,OACA,IAAA8Q,EAAA,GACA,MAAAC,EAAA,GACAC,EAAA,GAEA,IAAAC,EAAAhG,EAAAiG,mBACA,oBAAAD,IACAA,EAAAhG,EAAAiG,mBAAA9L,KAAAqK,IAGA,IAAA0B,EAAAlG,EAAAmG,kBACA,oBAAAD,IACAA,EAAAlG,EAAAmG,kBAAAhM,KAAAqK,IAGA,MAAA4B,EAAA5B,EAAAqB,SAAA9Q,OACAsR,EAAA7B,EAAAqB,SAAA9Q,OAEA,IAiBAuR,EAaAC,EA9BAC,EAAAxG,EAAAwG,aACAC,GAAAT,EACAU,EAAA,EACA5D,EAAA,EACA,wBAAAoC,EACA,OAEA,kBAAAsB,KAAAjR,QAAA,UACAiR,EAAAhM,WAAAgM,EAAAnH,QAAA,aAAA6F,GAGAV,EAAAmC,aAAAH,EAGApB,EAAAM,EAAApK,IAAA,CAAuBsL,WAAA,GAAAC,UAAA,KACvBnB,EAAApK,IAAA,CAAmBwL,YAAA,GAAAC,aAAA,KAGnB/G,EAAAgH,gBAAA,IAEAV,EADAW,KAAAC,MAAAtB,EAAA5F,EAAAgH,mBAAApB,EAAApB,EAAAxE,OAAAgH,gBACApB,EAEAqB,KAAAE,KAAAvB,EAAA5F,EAAAgH,iBAAAhH,EAAAgH,gBAEA,SAAAhH,EAAAoH,eAAA,QAAApH,EAAAqH,sBACAf,EAAAW,KAAAK,IAAAhB,EAAAtG,EAAAoH,cAAApH,EAAAgH,mBAMA,MAAAA,EAAAhH,EAAAgH,gBACAO,EAAAjB,EAAAU,EACAQ,EAAAD,GAAAvH,EAAAgH,gBAAAO,EAAA3B,GACA,QAAA9Q,EAAA,EAAiBA,EAAA8Q,EAAkB9Q,GAAA,GACnCyR,EAAA,EACA,MAAAkB,EAAA/B,EAAArJ,GAAAvH,GACA,GAAAkL,EAAAgH,gBAAA,GAEA,IAAAU,EACAC,EACAC,EACA,WAAA5H,EAAAqH,qBACAM,EAAAV,KAAAC,MAAApS,EAAAkS,GACAY,EAAA9S,EAAA6S,EAAAX,GACAW,EAAAH,GAAAG,IAAAH,GAAAI,IAAAZ,EAAA,KACAY,GAAA,EACAA,GAAAZ,IACAY,EAAA,EACAD,GAAA,IAGAD,EAAAC,EAAAC,EAAAtB,EAAAU,EACAS,EACAnM,IAAA,CACAuM,4BAAAH,EACAI,yBAAAJ,EACAK,iBAAAL,EACAM,gBAAAN,EACAO,MAAAP,MAGAE,EAAAX,KAAAC,MAAApS,EAAAyS,GACAI,EAAA7S,EAAA8S,EAAAL,GAEAE,EACAnM,cACoBkJ,EAAAI,eAAA,eACpB,IAAAgD,GAAA5H,EAAAwG,iBAAoDxG,EAAAwG,kBAEpD5P,KAAA,qBAAA+Q,GACA/Q,KAAA,kBAAAgR,GAEA,YAAAH,EAAAnM,IAAA,YAEA,YAAA0E,EAAAoH,cAAA,CACA,MAAAc,EAA0BrU,EAAMM,iBAAAsT,EAAA,SAChCU,EAAAV,EAAA,GAAAjY,MAAA8H,UACA8Q,EAAAX,EAAA,GAAAjY,MAAAgI,gBACA2Q,IACAV,EAAA,GAAAjY,MAAA8H,UAAA,QAEA8Q,IACAX,EAAA,GAAAjY,MAAAgI,gBAAA,QAGA+O,EADAvG,EAAAqI,aACA7D,EAAAI,eACA6C,EAAAtJ,YAAA,GACAsJ,EAAArJ,aAAA,GAGAoG,EAAAI,eACApK,WAAA0N,EAAA9T,iBAAA,UACAoG,WAAA0N,EAAA9T,iBAAA,gBACAoG,WAAA0N,EAAA9T,iBAAA,iBAEAoG,WAAA0N,EAAA9T,iBAAA,WACAoG,WAAA0N,EAAA9T,iBAAA,eACAoG,WAAA0N,EAAA9T,iBAAA,kBAGA+T,IACAV,EAAA,GAAAjY,MAAA8H,UAAA6Q,GAEAC,IACAX,EAAA,GAAAjY,MAAAgI,gBAAA4Q,GAEApI,EAAAqI,eAAA9B,EAAAU,KAAAC,MAAAX,SAEAA,GAAArB,GAAAlF,EAAAoH,cAAA,GAAAZ,GAAAxG,EAAAoH,cACApH,EAAAqI,eAAA9B,EAAAU,KAAAC,MAAAX,IAEAb,EAAA5Q,KACA0P,EAAAI,eACAc,EAAA5Q,GAAAtF,MAAAiB,SAAqC8V,MAErCb,EAAA5Q,GAAAtF,MAAAgB,UAAsC+V,OAItCb,EAAA5Q,KACA4Q,EAAA5Q,GAAAwT,gBAAA/B,GAEAR,EAAArQ,KAAA6Q,GAGAvG,EAAAuI,gBACA9B,IAAAF,EAAA,EAAAG,EAAA,EAAAF,EACA,IAAAE,GAAA,IAAA5R,IAAA2R,IAAAvB,EAAA,EAAAsB,GACA,IAAA1R,IAAA2R,IAAAvB,EAAA,EAAAsB,GACAS,KAAAuB,IAAA/B,GAAA,OAAAA,EAAA,GACAzG,EAAAqI,eAAA5B,EAAAQ,KAAAC,MAAAT,IACA,EAAAzG,EAAAyI,iBAAA,GAAA5C,EAAAnQ,KAAA+Q,GACAX,EAAApQ,KAAA+Q,KAEAzG,EAAAqI,eAAA5B,EAAAQ,KAAAC,MAAAT,IACA,EAAAzG,EAAAyI,iBAAA,GAAA5C,EAAAnQ,KAAA+Q,GACAX,EAAApQ,KAAA+Q,GACAA,IAAAF,EAAAC,GAGAhC,EAAAmC,aAAAJ,EAAAC,EAEAE,EAAAH,EAEAzD,GAAA,GAGA,IAAA4F,EAWA,GAZAlE,EAAAmC,YAAAM,KAAAK,IAAA9C,EAAAmC,YAAAzB,GAAAgB,EAIAd,GAAAC,IAAA,UAAArF,EAAA2I,QAAA,cAAA3I,EAAA2I,SACA1D,EAAA3J,IAAA,CAAoB7K,SAAW+T,EAAAmC,YAAA3G,EAAAwG,mBAExBrF,GAAOY,UAAA/B,EAAA4I,iBACdpE,EAAAI,eAAAK,EAAA3J,IAAA,CAA+C7K,SAAW+T,EAAAmC,YAAA3G,EAAAwG,mBAC1DvB,EAAA3J,IAAA,CAAyB9K,UAAYgU,EAAAmC,YAAA3G,EAAAwG,oBAGrCxG,EAAAgH,gBAAA,IACAxC,EAAAmC,aAAAJ,EAAAvG,EAAAwG,cAAAF,EACA9B,EAAAmC,YAAAM,KAAAE,KAAA3C,EAAAmC,YAAA3G,EAAAgH,iBAAAhH,EAAAwG,aACAhC,EAAAI,eAAAK,EAAA3J,IAAA,CAA+C7K,SAAW+T,EAAAmC,YAAA3G,EAAAwG,mBAC1DvB,EAAA3J,IAAA,CAAyB9K,UAAYgU,EAAAmC,YAAA3G,EAAAwG,mBACrCxG,EAAAuI,gBAAA,CACAG,EAAA,GACA,QAAA5T,EAAA,EAAqBA,EAAA+Q,EAAA9Q,OAAqBD,GAAA,GAC1C,IAAA+T,EAAAhD,EAAA/Q,GACAkL,EAAAqI,eAAAQ,EAAA5B,KAAAC,MAAA2B,IACAhD,EAAA/Q,GAAA0P,EAAAmC,YAAAd,EAAA,IAAA6C,EAAAhT,KAAAmT,GAEAhD,EAAA6C,EAKA,IAAA1I,EAAAuI,eAAA,CACAG,EAAA,GACA,QAAA5T,EAAA,EAAmBA,EAAA+Q,EAAA9Q,OAAqBD,GAAA,GACxC,IAAA+T,EAAAhD,EAAA/Q,GACAkL,EAAAqI,eAAAQ,EAAA5B,KAAAC,MAAA2B,IACAhD,EAAA/Q,IAAA0P,EAAAmC,YAAAzB,GACAwD,EAAAhT,KAAAmT,GAGAhD,EAAA6C,EACAzB,KAAAC,MAAA1C,EAAAmC,YAAAzB,GAAA+B,KAAAC,MAAArB,IAAA9Q,OAAA,OACA8Q,EAAAnQ,KAAA8O,EAAAmC,YAAAzB,GAYA,GATA,IAAAW,EAAA9Q,SAAA8Q,EAAA,KAEA,IAAA7F,EAAAwG,eACAhC,EAAAI,eACAQ,EAAAM,EAAApK,IAAA,CAA2BsL,cAAgBJ,QAC3Cd,EAAApK,IAAA,CAAuBwL,eAAiBN,QACnCd,EAAApK,IAAA,CAAkByL,gBAAkBP,SAGzCxG,EAAA8I,yBAAA,CACA,IAAAC,EAAA,EAKA,GAJAhD,EAAAzH,QAAA0K,IACAD,GAAAC,GAAAhJ,EAAAwG,aAAAxG,EAAAwG,aAAA,KAEAuC,GAAA/I,EAAAwG,aACAuC,EAAA7D,EAAA,CACA,MAAA+D,GAAA/D,EAAA6D,GAAA,EACAlD,EAAAvH,QAAA,CAAA4K,EAAAC,KACAtD,EAAAsD,GAAAD,EAAAD,IAEAnD,EAAAxH,QAAA,CAAA4K,EAAAC,KACArD,EAAAqD,GAAAD,EAAAD,KAKAzK,GAAA0C,OAAAsD,EAAA,CACAkB,SACAG,WACAC,aACAC,oBAGAH,IAAAH,GACAjB,EAAA4E,KAAA,sBAEAvD,EAAA9Q,SAAAqR,IACA5B,EAAAxE,OAAAqJ,eAAA7E,EAAA8E,gBACA9E,EAAA4E,KAAA,yBAEAtD,EAAA/Q,SAAAsR,GACA7B,EAAA4E,KAAA,2BAGApJ,EAAAuJ,qBAAAvJ,EAAAwJ,wBACAhF,EAAAiF,qBAIA,SAAAC,GAAAC,GACA,MAAAnF,EAAA1V,KACA8a,EAAA,GACA,IACA9U,EADA+U,EAAA,EAQA,GANA,kBAAAF,EACAnF,EAAAsF,cAAAH,IACG,IAAAA,GACHnF,EAAAsF,cAAAtF,EAAAxE,OAAA2J,OAGA,SAAAnF,EAAAxE,OAAAoH,eAAA5C,EAAAxE,OAAAoH,cAAA,EACA,IAAAtS,EAAA,EAAeA,EAAAmS,KAAAE,KAAA3C,EAAAxE,OAAAoH,eAA4CtS,GAAA,GAC3D,MAAAgO,EAAA0B,EAAAuF,YAAAjV,EACA,GAAAgO,EAAA0B,EAAAkB,OAAA3Q,OAAA,MACA6U,EAAAlU,KAAA8O,EAAAkB,OAAArJ,GAAAyG,GAAA,SAGA8G,EAAAlU,KAAA8O,EAAAkB,OAAArJ,GAAAmI,EAAAuF,aAAA,IAIA,IAAAjV,EAAA,EAAaA,EAAA8U,EAAA7U,OAAyBD,GAAA,EACtC,wBAAA8U,EAAA9U,GAAA,CACA,MAAAtE,EAAAoZ,EAAA9U,GAAA4F,aACAmP,EAAArZ,EAAAqZ,EAAArZ,EAAAqZ,EAKAA,GAAArF,EAAAS,WAAA3J,IAAA,YAAoDuO,OAGpD,SAAAJ,KACA,MAAAjF,EAAA1V,KACA4W,EAAAlB,EAAAkB,OACA,QAAA5Q,EAAA,EAAiBA,EAAA4Q,EAAA3Q,OAAmBD,GAAA,EACpC4Q,EAAA5Q,GAAAkV,kBAAAxF,EAAAI,eAAAc,EAAA5Q,GAAAmV,WAAAvE,EAAA5Q,GAAAoV,UAIA,SAAAC,GAAAC,EAAAtb,WAAAsb,WAAA,GACA,MAAA5F,EAAA1V,KACAkR,EAAAwE,EAAAxE,QAEA0F,OAASA,EAAAP,aAAAC,GAA4BZ,EAErC,OAAAkB,EAAA3Q,OAAA,OACA,qBAAA2Q,EAAA,GAAAsE,mBAAAxF,EAAAiF,qBAEA,IAAAY,GAAAD,EACAhF,IAAAiF,EAAAD,GAGA1E,EAAApP,YAAA0J,EAAAsK,mBAEA9F,EAAA+F,qBAAA,GACA/F,EAAAgG,cAAA,GAEA,QAAA1V,EAAA,EAAiBA,EAAA4Q,EAAA3Q,OAAmBD,GAAA,GACpC,MAAA2S,EAAA/B,EAAA5Q,GACA2V,GACAJ,GAAArK,EAAAuI,eAAA/D,EAAAkG,eAAA,GAAAjD,EAAAuC,oBACAvC,EAAAa,gBAAAtI,EAAAwG,cACA,GAAAxG,EAAAwJ,sBAAA,CACA,MAAAmB,IAAAN,EAAA5C,EAAAuC,mBACAY,EAAAD,EAAAnG,EAAAuB,gBAAAjR,GACA+V,EAAAF,GAAA,GAAAA,EAAAnG,EAAAO,MACA6F,EAAA,GAAAA,GAAApG,EAAAO,MACA4F,GAAA,GAAAC,GAAApG,EAAAO,KACA8F,IACArG,EAAAgG,cAAA9U,KAAA+R,GACAjD,EAAA+F,qBAAA7U,KAAAZ,GACA4Q,EAAArJ,GAAAvH,GAAAkB,SAAAgK,EAAAsK,oBAGA7C,EAAAqD,SAAA1F,GAAAqF,IAEAjG,EAAAgG,cAAyBxV,EAACwP,EAAAgG,eAG1B,SAAAO,GAAAX,EAAAtb,WAAAsb,WAAA,GACA,MAAA5F,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAEAgL,EAAAxG,EAAAyG,eAAAzG,EAAAkG,eACA,IAAAI,SAAOA,EAAAI,cAAAC,SAA+B3G,EACtC,MAAA4G,EAAAF,EACAG,EAAAF,EACA,IAAAH,GACAF,EAAA,EACAI,GAAA,EACAC,GAAA,IAEAL,GAAAV,EAAA5F,EAAAkG,gBAAA,EACAQ,EAAAJ,GAAA,EACAK,EAAAL,GAAA,GAEAtM,GAAA0C,OAAAsD,EAAA,CACAsG,WACAI,cACAC,WAGAnL,EAAAuJ,qBAAAvJ,EAAAwJ,wBAAAhF,EAAA2F,qBAAAC,GAEAc,IAAAE,GACA5G,EAAA4E,KAAA,yBAEA+B,IAAAE,GACA7G,EAAA4E,KAAA,oBAEAgC,IAAAF,GAAAG,IAAAF,IACA3G,EAAA4E,KAAA,YAGA5E,EAAA4E,KAAA,WAAA0B,GAGA,SAAAQ,KACA,MAAA9G,EAAA1V,MAEA4W,OACAA,EAAA1F,SAAAiF,aAAA8E,cAAAwB,aACG/G,EACHc,EAAAd,EAAAe,SAAAvF,EAAAuF,QAAAC,QAIA,IAAAgG,EAFA9F,EAAApP,eAAwB0J,EAAAyL,oBAA2BzL,EAAA0L,kBAAyB1L,EAAA2L,kBAAyB3L,EAAA4L,6BAAoC5L,EAAA6L,2BAAkC7L,EAAA8L,2BAI3KN,EADAlG,EACAd,EAAAS,WAAAvH,SAA6CsC,EAAA2F,uCAA8CoE,OAE3FrE,EAAArJ,GAAA0N,GAIAyB,EAAAxV,SAAAgK,EAAAyL,kBAEAzL,EAAA+L,OAEAP,EAAAhV,SAAAwJ,EAAAgM,qBACA/G,EACA1R,aAAsByM,EAAA2F,mBAA0B3F,EAAAgM,iDAAwDT,OACxGvV,SAAAgK,EAAA4L,2BAEA3G,EACA1R,aAAsByM,EAAA2F,cAAqB3F,EAAAgM,gDAAuDT,OAClGvV,SAAAgK,EAAA4L,4BAIA,IAAAK,EAAAT,EAAAxO,YAA0CgD,EAAA2F,cAAkBtJ,GAAA,GAAArG,SAAAgK,EAAA0L,gBAC5D1L,EAAA+L,MAAA,IAAAE,EAAAlX,SACAkX,EAAAvG,EAAArJ,GAAA,GACA4P,EAAAjW,SAAAgK,EAAA0L,iBAGA,IAAAQ,EAAAV,EAAApO,YAA0C4C,EAAA2F,cAAkBtJ,GAAA,GAAArG,SAAAgK,EAAA2L,gBAC5D3L,EAAA+L,MAAA,IAAAG,EAAAnX,SACAmX,EAAAxG,EAAArJ,IAAA,GACA6P,EAAAlW,SAAAgK,EAAA2L,iBAEA3L,EAAA+L,OAEAE,EAAAzV,SAAAwJ,EAAAgM,qBACA/G,EACA1R,aAAsByM,EAAA2F,mBAA0B3F,EAAAgM,iDAAwDC,EAAArV,KAAA,gCACxGZ,SAAAgK,EAAA6L,yBAEA5G,EACA1R,aAAsByM,EAAA2F,cAAqB3F,EAAAgM,gDAAuDC,EAAArV,KAAA,gCAClGZ,SAAAgK,EAAA6L,yBAEAK,EAAA1V,SAAAwJ,EAAAgM,qBACA/G,EACA1R,aAAsByM,EAAA2F,mBAA0B3F,EAAAgM,iDAAwDE,EAAAtV,KAAA,gCACxGZ,SAAAgK,EAAA8L,yBAEA7G,EACA1R,aAAsByM,EAAA2F,cAAqB3F,EAAAgM,gDAAuDE,EAAAtV,KAAA,gCAClGZ,SAAAgK,EAAA8L,0BAKA,SAAAK,GAAAC,GACA,MAAA5H,EAAA1V,KACAsb,EAAA5F,EAAAW,aAAAX,EAAA4F,WAAA5F,EAAA4F,WACAtE,WACAA,EAAAD,WAAA7F,SAAA+J,YAAAsC,EAAAd,UAAAe,EAAAnD,UAAAoD,GACG/H,EACH,IACA2E,EADAY,EAAAqC,EAEA,wBAAArC,EAAA,CACA,QAAAjV,EAAA,EAAmBA,EAAAgR,EAAA/Q,OAAuBD,GAAA,EAC1C,qBAAAgR,EAAAhR,EAAA,GACAsV,GAAAtE,EAAAhR,IAAAsV,EAAAtE,EAAAhR,EAAA,IAAAgR,EAAAhR,EAAA,GAAAgR,EAAAhR,IAAA,EACAiV,EAAAjV,EACSsV,GAAAtE,EAAAhR,IAAAsV,EAAAtE,EAAAhR,EAAA,KACTiV,EAAAjV,EAAA,GAEOsV,GAAAtE,EAAAhR,KACPiV,EAAAjV,GAIAkL,EAAAwM,sBACAzC,EAAA,wBAAAA,OAAA,GASA,GALAZ,EADAtD,EAAAtQ,QAAA6U,IAAA,EACAvE,EAAAtQ,QAAA6U,GAEAnD,KAAAC,MAAA6C,EAAA/J,EAAAyI,gBAEAU,GAAAtD,EAAA9Q,SAAAoU,EAAAtD,EAAA9Q,OAAA,GACAgV,IAAAsC,EAKA,YAJAlD,IAAAoD,IACA/H,EAAA2E,YACA3E,EAAA4E,KAAA,qBAMA,MAAAmC,EAAAzG,SAAAN,EAAAkB,OAAArJ,GAAA0N,GAAAnT,KAAA,4BAAAmT,EAAA,IAEAvL,GAAA0C,OAAAsD,EAAA,CACA2E,YACAoC,YACAc,gBACAtC,gBAEAvF,EAAA4E,KAAA,qBACA5E,EAAA4E,KAAA,mBACAkD,IAAAf,GACA/G,EAAA4E,KAAA,mBAEA5E,EAAA4E,KAAA,eAGA,SAAAqD,GAAAtU,GACA,MAAAqM,EAAA1V,KACAkR,EAAAwE,EAAAxE,OACAyH,EAAgBzS,EAACmD,EAAAC,QAAAqF,YAAuBuC,EAAA2F,cAAkB,GAC1D,IAAA+G,GAAA,EACA,GAAAjF,EACA,QAAA3S,EAAA,EAAmBA,EAAA0P,EAAAkB,OAAA3Q,OAA0BD,GAAA,EAC7C0P,EAAAkB,OAAA5Q,KAAA2S,IAAAiF,GAAA,GAIA,IAAAjF,IAAAiF,EAUA,OAFAlI,EAAAmI,kBAAA9T,OACA2L,EAAAoI,kBAAA/T,GARA2L,EAAAmI,aAAAlF,EACAjD,EAAAe,SAAAf,EAAAxE,OAAAuF,QAAAC,QACAhB,EAAAoI,aAAA9H,SAAqC9P,EAACyS,GAAA7Q,KAAA,+BAEtC4N,EAAAoI,aAA4B5X,EAACyS,GAAAnY,QAO7B0Q,EAAA6M,0BAAAhU,IAAA2L,EAAAoI,cAAApI,EAAAoI,eAAApI,EAAAuF,aACAvF,EAAAqI,sBAIA,IAAAC,GAAA,CACAvI,cACAS,gBACA0E,oBACAD,sBACAU,wBACAY,kBACAO,uBACAa,qBACAM,uBAGA,SAAAM,GAAAlO,GAAA/P,KAAA8V,eAAA,UACA,MAAAJ,EAAA1V,MAEAkR,OACAA,EAAAmF,aAAAC,EAAAgF,YAAAnF,cACGT,EAEH,GAAAxE,EAAAgN,iBACA,OAAA5H,GAAAgF,IAGA,IAAA6C,EAAAzO,GAAAuO,aAAA9H,EAAA,GAAApG,GAGA,OAFAuG,IAAA6H,MAEAA,GAAA,EAGA,SAAAC,GAAA9C,EAAA+C,GACA,MAAA3I,EAAA1V,MAEAqW,aAAAC,EAAApF,SAAAiF,aAAA6F,YACGtG,EACH,IAAA4I,EAAA,EACAC,EAAA,EACA,MAAAC,EAAA,EAqBA,IAAAC,EAnBA/I,EAAAI,eACAwI,EAAAhI,GAAAgF,IAEAiD,EAAAjD,EAGApK,EAAAqI,eACA+E,EAAAnG,KAAAC,MAAAkG,GACAC,EAAApG,KAAAC,MAAAmG,IAGArN,EAAAgN,mBACQ7L,GAAOU,aAAAoD,EAAA3N,yBAAmD8V,QAAQC,QAAQC,QAClFrI,EAAA3N,uBAA2C8V,QAAQC,SAEnD7I,EAAAgJ,kBAAAhJ,EAAA4F,UACA5F,EAAA4F,UAAA5F,EAAAI,eAAAwI,EAAAC,EAIA,MAAArC,EAAAxG,EAAAyG,eAAAzG,EAAAkG,eAEA6C,EADA,IAAAvC,EACA,GAEAZ,EAAA5F,EAAAkG,gBAAA,EAEA6C,IAAAzC,GACAtG,EAAAuG,eAAAX,GAGA5F,EAAA4E,KAAA,eAAA5E,EAAA4F,UAAA+C,GAGA,SAAAzC,KACA,OAAA5b,KAAA+W,SAAA,GAGA,SAAAoF,KACA,OAAAnc,KAAA+W,SAAA/W,KAAA+W,SAAA9Q,OAAA,GAGA,IAAI0Y,GAAS,CACbV,gBACAG,gBACAxC,gBACAO,iBAGA,SAAAnB,GAAApS,EAAAyV,GACA,MAAA3I,EAAA1V,KAEA0V,EAAAS,WAAAxN,WAAAC,GAEA8M,EAAA4E,KAAA,gBAAA1R,EAAAyV,GAGA,SAAAO,GAAAC,GAAA,EAAAC,GACA,MAAApJ,EAAA1V,MACAib,YAASA,EAAA/J,SAAAqM,iBAAqC7H,EAC9CxE,EAAA6N,YACArJ,EAAAkF,mBAGA,IAAAoE,EAAAF,EASA,GARAE,IACAA,EAAA/D,EAAAsC,EAAA,OACAtC,EAAAsC,EAAA,OACA,SAGA7H,EAAA4E,KAAA,mBAEAuE,GAAA5D,IAAAsC,EAAA,CACA,aAAAyB,EAEA,YADAtJ,EAAA4E,KAAA,6BAGA5E,EAAA4E,KAAA,8BACA,SAAA0E,EACAtJ,EAAA4E,KAAA,4BAEA5E,EAAA4E,KAAA,6BAKA,SAAA2E,GAAAJ,GAAA,EAAAC,GACA,MAAApJ,EAAA1V,MACAib,YAASA,EAAAsC,iBAA6B7H,EACtCA,EAAAwJ,WAAA,EACAxJ,EAAAsF,cAAA,GAEA,IAAAgE,EAAAF,EASA,GARAE,IACAA,EAAA/D,EAAAsC,EAAA,OACAtC,EAAAsC,EAAA,OACA,SAGA7H,EAAA4E,KAAA,iBAEAuE,GAAA5D,IAAAsC,EAAA,CACA,aAAAyB,EAEA,YADAtJ,EAAA4E,KAAA,2BAGA5E,EAAA4E,KAAA,4BACA,SAAA0E,EACAtJ,EAAA4E,KAAA,0BAEA5E,EAAA4E,KAAA,2BAKA,IAAA6E,GAAA,CACAnE,iBACA4D,mBACA3T,cAAAgU,IAGA,SAAAG,GAAApL,EAAA,EAAA6G,EAAA7a,KAAAkR,OAAA2J,MAAAgE,GAAA,EAAAQ,GACA,MAAA3J,EAAA1V,KACA,IAAAsf,EAAAtL,EACAsL,EAAA,IAAAA,EAAA,GAEA,MAAApO,OACAA,EAAA6F,WAAAC,aAAAuG,gBAAAtC,cAAA5E,aAAAC,GACGZ,EACH,GAAAA,EAAAwJ,WAAAhO,EAAAqO,+BACA,SAGA,IAAAlF,EAAAlC,KAAAC,MAAAkH,EAAApO,EAAAyI,gBACAU,GAAAtD,EAAA9Q,SAAAoU,EAAAtD,EAAA9Q,OAAA,IAEAgV,GAAA/J,EAAAsO,cAAA,MAAAjC,GAAA,IAAAsB,GACAnJ,EAAA4E,KAAA,0BAGA,MAAAgB,GAAAvE,EAAAsD,GAMA,GAHA3E,EAAAuG,eAAAX,GAGApK,EAAAwM,oBACA,QAAA1X,EAAA,EAAmBA,EAAAgR,EAAA/Q,OAAuBD,GAAA,GAC1CmS,KAAAC,MAAA,IAAAkD,IAAAnD,KAAAC,MAAA,IAAApB,EAAAhR,MACAsZ,EAAAtZ,GAKA,GAAA0P,EAAA+J,aAAAH,IAAArE,EAAA,CACA,IAAAvF,EAAAgK,gBAAApE,EAAA5F,EAAA4F,aAAA5F,EAAAkG,eACA,SAEA,IAAAlG,EAAAiK,gBAAArE,EAAA5F,EAAA4F,aAAA5F,EAAAyG,iBACAlB,GAAA,KAAAqE,EAAA,SAIA,IAAAR,EAOA,OANAA,EAAAQ,EAAArE,EAAA,OACAqE,EAAArE,EAAA,OACA,QAIA3E,IAAAgF,IAAA5F,EAAA4F,YAAAhF,GAAAgF,IAAA5F,EAAA4F,WACA5F,EAAA2H,kBAAAiC,GAEApO,EAAA6N,YACArJ,EAAAkF,mBAEAlF,EAAA8G,sBACA,UAAAtL,EAAA2I,QACAnE,EAAA0I,aAAA9C,GAEA,UAAAwD,IACApJ,EAAAkJ,gBAAAC,EAAAC,GACApJ,EAAAzK,cAAA4T,EAAAC,KAEA,IAGA,IAAAjE,GAAsBxI,GAAO1J,YAS7B+M,EAAAsF,cAAAH,GACAnF,EAAA0I,aAAA9C,GACA5F,EAAA2H,kBAAAiC,GACA5J,EAAA8G,sBACA9G,EAAA4E,KAAA,wBAAAO,EAAAwE,GACA3J,EAAAkJ,gBAAAC,EAAAC,GACApJ,EAAAwJ,YACAxJ,EAAAwJ,WAAA,EACAxJ,EAAAkK,gCACAlK,EAAAkK,8BAAA,SAAAvW,GACAqM,MAAAmK,WACAxW,EAAAC,SAAAtJ,OACA0V,EAAAS,WAAA,GAAApS,oBAAA,gBAAA2R,EAAAkK,+BACAlK,EAAAS,WAAA,GAAApS,oBAAA,sBAAA2R,EAAAkK,+BACAlK,EAAAkK,8BAAA,YACAlK,EAAAkK,8BACAlK,EAAAzK,cAAA4T,EAAAC,MAGApJ,EAAAS,WAAA,GAAArS,iBAAA,gBAAA4R,EAAAkK,+BACAlK,EAAAS,WAAA,GAAArS,iBAAA,sBAAA4R,EAAAkK,kCA5BAlK,EAAAsF,cAAA,GACAtF,EAAA0I,aAAA9C,GACA5F,EAAA2H,kBAAAiC,GACA5J,EAAA8G,sBACA9G,EAAA4E,KAAA,wBAAAO,EAAAwE,GACA3J,EAAAkJ,gBAAAC,EAAAC,GACApJ,EAAAzK,cAAA4T,EAAAC,KA0BA,GAGA,SAAAgB,GAAA9L,EAAA,EAAA6G,EAAA7a,KAAAkR,OAAA2J,MAAAgE,GAAA,EAAAQ,GACA,MAAA3J,EAAA1V,KACA,IAAA+f,EAAA/L,EAKA,OAJA0B,EAAAxE,OAAA+L,OACA8C,GAAArK,EAAAsK,cAGAtK,EAAA0J,QAAAW,EAAAlF,EAAAgE,EAAAQ,GAIA,SAAAY,GAAApF,EAAA7a,KAAAkR,OAAA2J,MAAAgE,GAAA,EAAAQ,GACA,MAAA3J,EAAA1V,MACAkR,OAASA,EAAAgO,aAAoBxJ,EAC7B,OAAAxE,EAAA+L,MACAiC,IACAxJ,EAAAwK,UAEAxK,EAAAyK,YAAAzK,EAAAS,WAAA,GAAAlK,WACAyJ,EAAA0J,QAAA1J,EAAAuF,YAAA/J,EAAAyI,eAAAkB,EAAAgE,EAAAQ,IAEA3J,EAAA0J,QAAA1J,EAAAuF,YAAA/J,EAAAyI,eAAAkB,EAAAgE,EAAAQ,GAIA,SAAAe,GAAAvF,EAAA7a,KAAAkR,OAAA2J,MAAAgE,GAAA,EAAAQ,GACA,MAAA3J,EAAA1V,MACAkR,OACAA,EAAAgO,YAAAnI,WAAAC,aAAAX,gBACGX,EAEH,GAAAxE,EAAA+L,KAAA,CACA,GAAAiC,EAAA,SACAxJ,EAAAwK,UAEAxK,EAAAyK,YAAAzK,EAAAS,WAAA,GAAAlK,WAEA,MAAAqP,EAAAjF,EAAAX,EAAA4F,WAAA5F,EAAA4F,UACA,SAAA+E,EAAAC,GACA,OAAAA,EAAA,GAAAnI,KAAAC,MAAAD,KAAAuB,IAAA4G,IACAnI,KAAAC,MAAAkI,GAEA,MAAAC,EAAAF,EAAA/E,GACAkF,EAAAzJ,EAAA1G,IAAAiQ,GAAAD,EAAAC,IAIAG,GAHAzJ,EAAA3G,IAAAiQ,GAAAD,EAAAC,IAEAvJ,EAAAyJ,EAAA/Z,QAAA8Z,IACAxJ,EAAAyJ,EAAA/Z,QAAA8Z,GAAA,IACA,IAAAG,EAKA,MAJA,qBAAAD,IACAC,EAAA1J,EAAAvQ,QAAAga,GACAC,EAAA,IAAAA,EAAAhL,EAAAuF,YAAA,IAEAvF,EAAA0J,QAAAsB,EAAA7F,EAAAgE,EAAAQ,GAIA,SAAAsB,GAAA9F,EAAA7a,KAAAkR,OAAA2J,MAAAgE,GAAA,EAAAQ,GACA,MAAA3J,EAAA1V,KACA,OAAA0V,EAAA0J,QAAA1J,EAAAuF,YAAAJ,EAAAgE,EAAAQ,GAIA,SAAAuB,GAAA/F,EAAA7a,KAAAkR,OAAA2J,MAAAgE,GAAA,EAAAQ,GACA,MAAA3J,EAAA1V,KACA,IAAAgU,EAAA0B,EAAAuF,YACA,MAAAZ,EAAAlC,KAAAC,MAAApE,EAAA0B,EAAAxE,OAAAyI,gBAEA,GAAAU,EAAA3E,EAAAqB,SAAA9Q,OAAA,GACA,MAAAqV,EAAA5F,EAAAW,aAAAX,EAAA4F,WAAA5F,EAAA4F,UAEAuF,EAAAnL,EAAAqB,SAAAsD,GACAyG,EAAApL,EAAAqB,SAAAsD,EAAA,GAEAiB,EAAAuF,GAAAC,EAAAD,GAAA,IACA7M,EAAA0B,EAAAxE,OAAAyI,gBAIA,OAAAjE,EAAA0J,QAAApL,EAAA6G,EAAAgE,EAAAQ,GAGA,SAAAtB,KACA,MAAArI,EAAA1V,MACAkR,OAASA,EAAAiF,cAAqBT,EAE9B4C,EAAA,SAAApH,EAAAoH,cAAA5C,EAAAqL,uBAAA7P,EAAAoH,cACA,IACAmE,EADAuE,EAAAtL,EAAAoI,aAEA,GAAA5M,EAAA+L,KAAA,CACA,GAAAvH,EAAAwJ,UAAA,OACAzC,EAAAzG,SAAyB9P,EAACwP,EAAAmI,cAAA/V,KAAA,+BAC1BoJ,EAAAuI,eAEAuH,EAAAtL,EAAAsK,aAAA1H,EAAA,GACA0I,EAAAtL,EAAAkB,OAAA3Q,OAAAyP,EAAAsK,aAAA1H,EAAA,GAEA5C,EAAAwK,UACAc,EAAA7K,EACA1R,aAAwByM,EAAA2F,uCAA8C4F,YAAoBvL,EAAAgM,wBAC1F3P,GAAA,GACA/M,QAEAkP,GAAAuR,SAAA,KACAvL,EAAA0J,QAAA4B,MAGAtL,EAAA0J,QAAA4B,GAEKA,EAAAtL,EAAAkB,OAAA3Q,OAAAqS,GACL5C,EAAAwK,UACAc,EAAA7K,EACA1R,aAAsByM,EAAA2F,uCAA8C4F,YAAoBvL,EAAAgM,wBACxF3P,GAAA,GACA/M,QAEAkP,GAAAuR,SAAA,KACAvL,EAAA0J,QAAA4B,MAGAtL,EAAA0J,QAAA4B,QAGAtL,EAAA0J,QAAA4B,GAIA,IAAIE,GAAK,CACT9B,WACAU,eACAG,aACAG,aACAO,cACAC,kBACA7C,wBAGA,SAAAoD,KACA,MAAAzL,EAAA1V,MACAkR,OAASA,EAAAiF,cAAqBT,EAE9BS,EAAA1R,aAA0ByM,EAAA2F,cAAqB3F,EAAAgM,uBAA2BzV,SAE1E,IAAAmP,EAAAT,EAAA1R,aAAuCyM,EAAA2F,cAEvC,GAAA3F,EAAAkQ,uBAAA,CACA,MAAAC,EAAAnQ,EAAAyI,eAAA/C,EAAA3Q,OAAAiL,EAAAyI,eACA,GAAA0H,IAAAnQ,EAAAyI,eAAA,CACA,QAAA3T,EAAA,EAAqBA,EAAAqb,EAAoBrb,GAAA,GACzC,MAAAsb,EAA0Bpb,EAAEvC,EAAQa,cAAA,QAAA0C,YAAmCgK,EAAA2F,cAAqB3F,EAAAqQ,mBAC5FpL,EAAA1I,OAAA6T,GAEA1K,EAAAT,EAAA1R,aAAuCyM,EAAA2F,eAIvC,SAAA3F,EAAAoH,eAAApH,EAAA8O,eAAA9O,EAAA8O,aAAApJ,EAAA3Q,QAEAyP,EAAAsK,aAAAhK,SAAA9E,EAAA8O,cAAA9O,EAAAoH,cAAA,IACA5C,EAAAsK,cAAA9O,EAAAsQ,qBACA9L,EAAAsK,aAAApJ,EAAA3Q,SACAyP,EAAAsK,aAAApJ,EAAA3Q,QAGA,MAAAwb,EAAA,GACAC,EAAA,GACA9K,EAAAjK,KAAA,CAAAqH,EAAA3L,KACA,MAAAsQ,EAAkBzS,EAACmC,GACnB2L,EAAA0B,EAAAsK,cAAA0B,EAAA9a,KAAAyB,GACA2L,EAAA4C,EAAA3Q,QAAA+N,GAAA4C,EAAA3Q,OAAAyP,EAAAsK,cAAAyB,EAAA7a,KAAAyB,GACAsQ,EAAA7Q,KAAA,0BAAAkM,KAEA,QAAAhO,EAAA,EAAiBA,EAAA0b,EAAAzb,OAAyBD,GAAA,EAC1CmQ,EAAA1I,OAAsBvH,EAACwb,EAAA1b,GAAA2b,WAAA,IAAAza,SAAAgK,EAAAgM,sBAEvB,QAAAlX,EAAAyb,EAAAxb,OAAA,EAAwCD,GAAA,EAAQA,GAAA,EAChDmQ,EAAArI,QAAuB5H,EAACub,EAAAzb,GAAA2b,WAAA,IAAAza,SAAAgK,EAAAgM,sBAIxB,SAAAgD,KACA,MAAAxK,EAAA1V,MACAkR,OACAA,EAAA+J,cAAArE,SAAAoJ,eAAAL,iBAAAD,iBAAA3I,WAAAV,aAAAC,GACGZ,EACH,IAAAqK,EACArK,EAAAiK,gBAAA,EACAjK,EAAAgK,gBAAA,EAEA,MAAAkC,GAAA7K,EAAAkE,GACA4G,EAAAD,EAAAlM,EAAAuI,eAIA,GAAAhD,EAAA+E,EAAA,CACAD,EAAAnJ,EAAA3Q,OAAA,EAAA+Z,EAAA/E,EACA8E,GAAAC,EACA,MAAA8B,EAAApM,EAAA0J,QAAAW,EAAA,SACA+B,GAAA,IAAAD,GACAnM,EAAA0I,cAAA9H,GAAAZ,EAAA4F,UAAA5F,EAAA4F,WAAAuG,QAEG,YAAA3Q,EAAAoH,eAAA2C,GAAA,EAAA+E,GAAA/E,GAAArE,EAAA3Q,OAAA+Z,EAAA,CAEHD,GAAAnJ,EAAA3Q,OAAAgV,EAAA+E,EACAD,GAAAC,EACA,MAAA8B,EAAApM,EAAA0J,QAAAW,EAAA,SACA+B,GAAA,IAAAD,GACAnM,EAAA0I,cAAA9H,GAAAZ,EAAA4F,UAAA5F,EAAA4F,WAAAuG,GAGAnM,EAAAiK,iBACAjK,EAAAgK,iBAGA,SAAAqC,KACA,MAAArM,EAAA1V,MACAmW,WAASA,EAAAjF,SAAA0F,UAA6BlB,EACtCS,EAAA1R,aAA0ByM,EAAA2F,cAAqB3F,EAAAgM,uBAA2BzV,SAC1EmP,EAAAzO,WAAA,2BAGA,IAAA8U,GAAA,CACAkE,cACAjB,WACA6B,gBAGA,SAAAC,GAAAC,GACA,MAAAvM,EAAA1V,KACA,GAAMqS,GAAOE,QAAAmD,EAAAxE,OAAAgR,eAAAxM,EAAAxE,OAAAqJ,eAAA7E,EAAAyM,SAAA,OACb,MAAA9Z,EAAAqN,EAAArN,GACAA,EAAA3H,MAAA0hB,OAAA,OACA/Z,EAAA3H,MAAA0hB,OAAAH,EAAA,kCACA5Z,EAAA3H,MAAA0hB,OAAAH,EAAA,2BACA5Z,EAAA3H,MAAA0hB,OAAAH,EAAA,kBAGA,SAAAI,KACA,MAAA3M,EAAA1V,KACMqS,GAAOE,OAAAmD,EAAAxE,OAAAqJ,eAAA7E,EAAAyM,WACbzM,EAAArN,GAAA3H,MAAA0hB,OAAA,IAGA,IAAAE,GAAA,CACAN,iBACAK,oBAGA,SAAAE,GAAA3L,GACA,MAAAlB,EAAA1V,MACAmW,WAASA,EAAAjF,UAAqBwE,EAI9B,GAHAxE,EAAA+L,MACAvH,EAAAqM,cAEA,kBAAAnL,GAAA,WAAAA,EACA,QAAA5Q,EAAA,EAAmBA,EAAA4Q,EAAA3Q,OAAmBD,GAAA,EACtC4Q,EAAA5Q,IAAAmQ,EAAA1I,OAAAmJ,EAAA5Q,SAGAmQ,EAAA1I,OAAAmJ,GAEA1F,EAAA+L,MACAvH,EAAAyL,aAEAjQ,EAAAiC,UAA2Bd,GAAOc,UAClCuC,EAAAsI,SAIA,SAAAwE,GAAA5L,GACA,MAAAlB,EAAA1V,MACAkR,OAASA,EAAAiF,aAAA8E,eAAkCvF,EAE3CxE,EAAA+L,MACAvH,EAAAqM,cAEA,IAAAzE,EAAArC,EAAA,EACA,qBAAArE,GAAA,WAAAA,EAAA,CACA,QAAA5Q,EAAA,EAAmBA,EAAA4Q,EAAA3Q,OAAmBD,GAAA,EACtC4Q,EAAA5Q,IAAAmQ,EAAArI,QAAA8I,EAAA5Q,IAEAsX,EAAArC,EAAArE,EAAA3Q,YAEAkQ,EAAArI,QAAA8I,GAEA1F,EAAA+L,MACAvH,EAAAyL,aAEAjQ,EAAAiC,UAA2Bd,GAAOc,UAClCuC,EAAAsI,SAEAtI,EAAA0J,QAAA9B,EAAA,MAGA,SAAAmF,GAAAzO,EAAA4C,GACA,MAAAlB,EAAA1V,MACAmW,WAASA,EAAAjF,SAAA+J,eAAkCvF,EAC3C,IAAAgN,EAAAzH,EACA/J,EAAA+L,OACAyF,GAAAhN,EAAAsK,aACAtK,EAAAqM,cACArM,EAAAkB,OAAAT,EAAA1R,aAA4CyM,EAAA2F,eAE5C,MAAA8L,EAAAjN,EAAAkB,OAAA3Q,OACA,GAAA+N,GAAA,EAEA,YADA0B,EAAA8M,aAAA5L,GAGA,GAAA5C,GAAA2O,EAEA,YADAjN,EAAA6M,YAAA3L,GAGA,IAAA0G,EAAAoF,EAAA1O,EAAA0O,EAAA,EAAAA,EAEA,MAAAE,EAAA,GACA,QAAA5c,EAAA2c,EAAA,EAA8B3c,GAAAgO,EAAehO,GAAA,GAC7C,MAAA6c,EAAAnN,EAAAkB,OAAArJ,GAAAvH,GACA6c,EAAApb,SACAmb,EAAAnZ,QAAAoZ,GAGA,qBAAAjM,GAAA,WAAAA,EAAA,CACA,QAAA5Q,EAAA,EAAmBA,EAAA4Q,EAAA3Q,OAAmBD,GAAA,EACtC4Q,EAAA5Q,IAAAmQ,EAAA1I,OAAAmJ,EAAA5Q,IAEAsX,EAAAoF,EAAA1O,EAAA0O,EAAA9L,EAAA3Q,OAAAyc,OAEAvM,EAAA1I,OAAAmJ,GAGA,QAAA5Q,EAAA,EAAiBA,EAAA4c,EAAA3c,OAAyBD,GAAA,EAC1CmQ,EAAA1I,OAAAmV,EAAA5c,IAGAkL,EAAA+L,MACAvH,EAAAyL,aAEAjQ,EAAAiC,UAA2Bd,GAAOc,UAClCuC,EAAAsI,SAEA9M,EAAA+L,KACAvH,EAAA0J,QAAA9B,EAAA5H,EAAAsK,aAAA,MAEAtK,EAAA0J,QAAA9B,EAAA,MAIA,SAAAwF,GAAAC,GACA,MAAArN,EAAA1V,MACAkR,OAASA,EAAAiF,aAAA8E,eAAkCvF,EAE3C,IAAAgN,EAAAzH,EACA/J,EAAA+L,OACAyF,GAAAhN,EAAAsK,aACAtK,EAAAqM,cACArM,EAAAkB,OAAAT,EAAA1R,aAA4CyM,EAAA2F,eAE5C,IACAmM,EADA1F,EAAAoF,EAGA,qBAAAK,GAAA,WAAAA,EAAA,CACA,QAAA/c,EAAA,EAAmBA,EAAA+c,EAAA9c,OAA0BD,GAAA,EAC7Cgd,EAAAD,EAAA/c,GACA0P,EAAAkB,OAAAoM,IAAAtN,EAAAkB,OAAArJ,GAAAyV,GAAAvb,SACAub,EAAA1F,OAAA,GAEAA,EAAAnF,KAAAK,IAAA8E,EAAA,QAEA0F,EAAAD,EACArN,EAAAkB,OAAAoM,IAAAtN,EAAAkB,OAAArJ,GAAAyV,GAAAvb,SACAub,EAAA1F,OAAA,GACAA,EAAAnF,KAAAK,IAAA8E,EAAA,GAGApM,EAAA+L,MACAvH,EAAAyL,aAGAjQ,EAAAiC,UAA2Bd,GAAOc,UAClCuC,EAAAsI,SAEA9M,EAAA+L,KACAvH,EAAA0J,QAAA9B,EAAA5H,EAAAsK,aAAA,MAEAtK,EAAA0J,QAAA9B,EAAA,MAIA,SAAA2F,KACA,MAAAvN,EAAA1V,KAEA+iB,EAAA,GACA,QAAA/c,EAAA,EAAiBA,EAAA0P,EAAAkB,OAAA3Q,OAA0BD,GAAA,EAC3C+c,EAAAnc,KAAAZ,GAEA0P,EAAAoN,YAAAC,GAGA,IAAAG,GAAA,CACAX,eACAC,gBACAC,YACAK,eACAG,oBAGA,MAAME,GAAM,WACZ,MAAAC,EAAare,EAAME,UAAAC,UAEnBme,EAAA,CACAC,KAAA,EACAC,SAAA,EACAC,eAAA,EACAC,SAAA,EACAC,SAAA,EACAC,QAAA,EACAC,MAAA,EACAC,MAAA,EACAC,QAAa/e,EAAM+e,SAAY/e,EAAMgf,SACrCA,SAAchf,EAAM+e,SAAY/e,EAAMgf,UAGtCL,EAAAN,EAAAvc,MAAA,qCACA0c,EAAAH,EAAAvc,MAAA,+BACAgd,EAAAT,EAAAvc,MAAA,wBACA+c,EAAAR,EAAAvc,MAAA,2BACA8c,GAAAE,GAAAT,EAAAvc,MAAA,8BA+CA,GA3CA6c,IACAL,EAAAW,GAAA,UACAX,EAAAY,UAAAP,EAAA,GACAL,EAAAK,SAAA,GAGAH,IAAAG,IACAL,EAAAW,GAAA,UACAX,EAAAY,UAAAV,EAAA,GACAF,EAAAE,SAAA,EACAF,EAAAG,cAAAJ,EAAAc,cAAAzd,QAAA,eAEAod,GAAAF,GAAAC,KACAP,EAAAW,GAAA,MACAX,EAAAC,KAAA,GAGAK,IAAAC,IACAP,EAAAY,UAAAN,EAAA,GAAApT,QAAA,UACA8S,EAAAM,QAAA,GAEAE,IACAR,EAAAY,UAAAJ,EAAA,GAAAtT,QAAA,UACA8S,EAAAQ,MAAA,GAEAD,IACAP,EAAAY,UAAAL,EAAA,GAAAA,EAAA,GAAArT,QAAA,eACA8S,EAAAM,QAAA,GAGAN,EAAAC,KAAAD,EAAAY,WAAAb,EAAA3c,QAAA,gBACA,OAAA4c,EAAAY,UAAAnd,MAAA,UACAuc,EAAAY,UAAAb,EAAAc,cAAApd,MAAA,eAAAA,MAAA,SAKAuc,EAAAI,UAAAJ,EAAAW,IAAAX,EAAAE,SAAAF,EAAAc,SAGAd,EAAAc,SAAAR,GAAAE,GAAAD,IAAAR,EAAAvc,MAAA,8BAGAwc,EAAAW,IAAA,QAAAX,EAAAW,GAAA,CACA,MAAAI,EAAAf,EAAAY,UAAAnd,MAAA,KACAud,EAAyB1gB,EAAQQ,cAAA,yBACjCkf,EAAAiB,WAAAjB,EAAAc,UACAP,GAAAD,KACA,EAAAS,EAAA,SAAAA,EAAA,QAAAA,EAAA,OACAC,KAAApc,aAAA,WAAAxB,QAAA,iBAOA,OAHA4c,EAAAkB,WAAsBxf,EAAMyf,kBAAA,EAG5BnB,EAhFY,GAmFZ,SAAAoB,GAAAxa,GACA,MAAAyL,EAAA1V,KACAiU,EAAAyB,EAAAgP,iBACAxT,OAASA,EAAAyT,WAAkBjP,EAC3B,GAAAA,EAAAwJ,WAAAhO,EAAAqO,+BACA,OAEA,IAAAlW,EAAAY,EAGA,GAFAZ,EAAAub,gBAAAvb,IAAAub,eACA3Q,EAAA4Q,aAAA,eAAAxb,EAAApG,MACAgR,EAAA4Q,cAAA,UAAAxb,GAAA,IAAAA,EAAAyb,MAAA,OACA,IAAA7Q,EAAA4Q,cAAA,WAAAxb,KAAA0b,OAAA,SACA,GAAA9Q,EAAA+Q,WAAA/Q,EAAAgR,QAAA,OACA,GAAA/T,EAAAgU,WAA0Bhf,EAACmD,EAAAC,QAAAqF,QAAAuC,EAAAiU,kBAAAjU,EAAAiU,sBAA6EjU,EAAAkU,kBAAsB,GAE9H,YADA1P,EAAA2P,YAAA,GAGA,GAAAnU,EAAAoU,eACSpf,EAACmD,GAAAsF,QAAAuC,EAAAoU,cAAA,UAGVX,EAAAY,SAAA,eAAAlc,EAAApG,KAAAoG,EAAAmc,cAAA,GAAAC,MAAApc,EAAAoc,MACAd,EAAAe,SAAA,eAAArc,EAAApG,KAAAoG,EAAAmc,cAAA,GAAAG,MAAAtc,EAAAsc,MACA,MAAAC,EAAAjB,EAAAY,SACAM,EAAAlB,EAAAe,SAIAI,EAAA5U,EAAA4U,oBAAA5U,EAAA6U,sBACAC,EAAA9U,EAAA8U,oBAAA9U,EAAA+U,sBACA,IACAH,KACAF,GAAAI,GACAJ,GAAkB7gB,EAAMU,OAAA9D,MAAAqkB,GAHxB,CAuBA,GAfAtW,GAAA0C,OAAA6B,EAAA,CACA+Q,WAAA,EACAC,SAAA,EACAiB,qBAAA,EACAC,iBAAApc,EACAqc,iBAAArc,IAGA4a,EAAAiB,SACAjB,EAAAkB,SACA5R,EAAAoS,eAAA3W,GAAAI,MACA4F,EAAA2P,YAAA,EACA3P,EAAAD,aACAC,EAAA4Q,oBAAAvc,EACAmH,EAAAqV,UAAA,IAAAtS,EAAAuS,oBAAA,GACA,eAAAnd,EAAApG,KAAA,CACA,IAAAwjB,GAAA,EACQvgB,EAACmD,EAAAC,QAAAI,GAAAuK,EAAAyS,gBAAAD,GAAA,GAEH9iB,EAAQK,eACLkC,EAAEvC,EAAQK,eAAA0F,GAAAuK,EAAAyS,eACV/iB,EAAQK,gBAAAqF,EAAAC,QAEX3F,EAAQK,cAAAC,OAGd,MAAA0iB,EAAAF,GAAA/Q,EAAAkR,gBAAA1V,EAAA2V,0BACA3V,EAAA4V,+BAAAH,IACAtd,EAAAod,iBAGA/Q,EAAA4E,KAAA,aAAAjR,IAGA,SAAA0d,GAAA9c,GACA,MAAAyL,EAAA1V,KACAiU,EAAAyB,EAAAgP,iBACAxT,OAASA,EAAAyT,UAAAtO,aAAAC,GAAqCZ,EAC9C,IAAArM,EAAAY,EAEA,GADAZ,EAAAub,gBAAAvb,IAAAub,gBACA3Q,EAAA+Q,UAIA,YAHA/Q,EAAAmS,aAAAnS,EAAAkS,aACAzQ,EAAA4E,KAAA,oBAAAjR,IAIA,GAAA4K,EAAA4Q,cAAA,cAAAxb,EAAApG,KAAA,OACA,MAAAwiB,EAAA,cAAApc,EAAApG,KAAAoG,EAAAmc,cAAA,GAAAC,MAAApc,EAAAoc,MACAE,EAAA,cAAAtc,EAAApG,KAAAoG,EAAAmc,cAAA,GAAAG,MAAAtc,EAAAsc,MACA,GAAAtc,EAAA2d,wBAGA,OAFArC,EAAAiB,OAAAH,OACAd,EAAAkB,OAAAF,GAGA,IAAAjQ,EAAAkR,eAYA,OAVAlR,EAAA2P,YAAA,OACApR,EAAA+Q,YACAtV,GAAA0C,OAAAuS,EAAA,CACAiB,OAAAH,EACAI,OAAAF,EACAJ,SAAAE,EACAC,SAAAC,IAEA1R,EAAAoS,eAAA3W,GAAAI,QAIA,GAAAmE,EAAA4Q,cAAA3T,EAAA+V,sBAAA/V,EAAA+L,KACA,GAAAvH,EAAAK,cAEA,GACA4P,EAAAhB,EAAAkB,QAAAnQ,EAAA4F,WAAA5F,EAAAyG,gBACAwJ,EAAAhB,EAAAkB,QAAAnQ,EAAA4F,WAAA5F,EAAAkG,eAIA,OAFA3H,EAAA+Q,WAAA,OACA/Q,EAAAgR,SAAA,QAGK,GACLQ,EAAAd,EAAAiB,QAAAlQ,EAAA4F,WAAA5F,EAAAyG,gBACAsJ,EAAAd,EAAAiB,QAAAlQ,EAAA4F,WAAA5F,EAAAkG,eAEA,OAGA,GAAA3H,EAAA4Q,cAA8BlhB,EAAQK,eACtCqF,EAAAC,SAAqB3F,EAAQK,eAAkBkC,EAACmD,EAAAC,QAAAI,GAAAuK,EAAAyS,cAGhD,OAFAzS,EAAAgR,SAAA,OACAvP,EAAA2P,YAAA,GAOA,GAHApR,EAAAiS,qBACAxQ,EAAA4E,KAAA,YAAAjR,GAEAA,EAAAmc,eAAAnc,EAAAmc,cAAAvf,OAAA,SAEA0e,EAAAY,SAAAE,EACAd,EAAAe,SAAAC,EAEA,MAAAuB,EAAAvC,EAAAY,SAAAZ,EAAAiB,OACAuB,EAAAxC,EAAAe,SAAAf,EAAAkB,OACA,GAAAnQ,EAAAxE,OAAAqV,WAAApO,KAAAiP,KAAAF,GAAA,EAAAC,GAAA,GAAAzR,EAAAxE,OAAAqV,UAAA,OAEA,wBAAAtS,EAAAkS,YAAA,CACA,IAAAkB,EACA3R,EAAAI,gBAAA6O,EAAAe,WAAAf,EAAAkB,QAAAnQ,EAAAK,cAAA4O,EAAAY,WAAAZ,EAAAiB,OACA3R,EAAAkS,aAAA,EAGAe,IAAAC,KAAA,KACAE,EAAA,IAAAlP,KAAAmP,MAAAnP,KAAAuB,IAAAyN,GAAAhP,KAAAuB,IAAAwN,IAAA/O,KAAAoP,GACAtT,EAAAkS,YAAAzQ,EAAAI,eAAAuR,EAAAnW,EAAAmW,WAAA,GAAAA,EAAAnW,EAAAmW,YAYA,GARApT,EAAAkS,aACAzQ,EAAA4E,KAAA,oBAAAjR,GAEA,qBAAA4K,EAAAmS,cACAzB,EAAAY,WAAAZ,EAAAiB,QAAAjB,EAAAe,WAAAf,EAAAkB,SACA5R,EAAAmS,aAAA,IAGAnS,EAAAkS,YAEA,YADAlS,EAAA+Q,WAAA,GAGA,IAAA/Q,EAAAmS,YACA,OAEA1Q,EAAA2P,YAAA,EACAhc,EAAAod,iBACAvV,EAAAsW,2BAAAtW,EAAAuW,QACApe,EAAAqe,kBAGAzT,EAAAgR,UACA/T,EAAA+L,MACAvH,EAAAwK,UAEAjM,EAAA0T,eAAAjS,EAAAuI,eACAvI,EAAAsF,cAAA,GACAtF,EAAAwJ,WACAxJ,EAAAS,WAAA1L,QAAA,qCAEAwJ,EAAA2T,qBAAA,GAEA1W,EAAAoR,aAAA,IAAA5M,EAAAgK,iBAAA,IAAAhK,EAAAiK,gBACAjK,EAAAsM,eAAA,GAEAtM,EAAA4E,KAAA,kBAAAjR,IAEAqM,EAAA4E,KAAA,aAAAjR,GACA4K,EAAAgR,SAAA,EAEA,IAAApD,EAAAnM,EAAAI,eAAAoR,EAAAC,EACAxC,EAAA9C,OAEAA,GAAA3Q,EAAA2W,WACAvR,IAAAuL,MAEAnM,EAAA4Q,eAAAzE,EAAA,gBACA5N,EAAAkK,iBAAA0D,EAAA5N,EAAA0T,eAEA,IAAAG,GAAA,EACAC,EAAA7W,EAAA6W,gBA0BA,GAzBA7W,EAAA+V,sBACAc,EAAA,GAEAlG,EAAA,GAAA5N,EAAAkK,iBAAAzI,EAAAkG,gBACAkM,GAAA,EACA5W,EAAA8W,aAAA/T,EAAAkK,iBAAAzI,EAAAkG,eAAA,IAAAlG,EAAAkG,eAAA3H,EAAA0T,eAAA9F,IAAAkG,IACGlG,EAAA,GAAA5N,EAAAkK,iBAAAzI,EAAAyG,iBACH2L,GAAA,EACA5W,EAAA8W,aAAA/T,EAAAkK,iBAAAzI,EAAAyG,eAAA,GAAAzG,EAAAyG,eAAAlI,EAAA0T,eAAA9F,IAAAkG,IAGAD,IACAze,EAAA2d,yBAAA,IAIAtR,EAAAgK,gBAAA,SAAAhK,EAAA4Q,gBAAArS,EAAAkK,iBAAAlK,EAAA0T,iBACA1T,EAAAkK,iBAAAlK,EAAA0T,iBAEAjS,EAAAiK,gBAAA,SAAAjK,EAAA4Q,gBAAArS,EAAAkK,iBAAAlK,EAAA0T,iBACA1T,EAAAkK,iBAAAlK,EAAA0T,gBAKAzW,EAAAqV,UAAA,GACA,KAAApO,KAAAuB,IAAAmI,GAAA3Q,EAAAqV,WAAAtS,EAAAuS,oBAWA,YADAvS,EAAAkK,iBAAAlK,EAAA0T,gBATA,IAAA1T,EAAAuS,mBAMA,OALAvS,EAAAuS,oBAAA,EACA7B,EAAAiB,OAAAjB,EAAAY,SACAZ,EAAAkB,OAAAlB,EAAAe,SACAzR,EAAAkK,iBAAAlK,EAAA0T,oBACAhD,EAAA9C,KAAAnM,EAAAI,eAAA6O,EAAAY,SAAAZ,EAAAiB,OAAAjB,EAAAe,SAAAf,EAAAkB,QASA3U,EAAA+W,gBAGA/W,EAAAgX,UAAAhX,EAAAuJ,qBAAAvJ,EAAAwJ,yBACAhF,EAAA2H,oBACA3H,EAAA8G,uBAEAtL,EAAAgX,WAEA,IAAAjU,EAAAkU,WAAAliB,QACAgO,EAAAkU,WAAAvhB,KAAA,CACAwhB,SAAAzD,EAAAjP,EAAAI,eAAA,mBACAuS,KAAApU,EAAAoS,iBAGApS,EAAAkU,WAAAvhB,KAAA,CACAwhB,SAAAzD,EAAAjP,EAAAI,eAAA,uBACAuS,KAAA3Y,GAAAI,SAIA4F,EAAAuG,eAAAhI,EAAAkK,kBAEAzI,EAAA0I,aAAAnK,EAAAkK,mBAGA,SAAAmK,GAAAre,GACA,MAAAyL,EAAA1V,KACAiU,EAAAyB,EAAAgP,iBAEAxT,OACAA,EAAAyT,UAAAtO,aAAAC,EAAAH,aAAAa,aAAAD,YACGrB,EACH,IAAArM,EAAAY,EAMA,GALAZ,EAAAub,gBAAAvb,IAAAub,eACA3Q,EAAAiS,qBACAxQ,EAAA4E,KAAA,WAAAjR,GAEA4K,EAAAiS,qBAAA,GACAjS,EAAA+Q,UAMA,OALA/Q,EAAAgR,SAAA/T,EAAAoR,YACA5M,EAAAsM,eAAA,GAEA/N,EAAAgR,SAAA,OACAhR,EAAAmS,aAAA,GAIAlV,EAAAoR,YAAArO,EAAAgR,SAAAhR,EAAA+Q,aAAA,IAAAtP,EAAAgK,iBAAA,IAAAhK,EAAAiK,iBACAjK,EAAAsM,eAAA,GAIA,MAAAuG,EAAA7Y,GAAAI,MACA0Y,EAAAD,EAAAtU,EAAAoS,eAwBA,GArBA3Q,EAAA2P,aACA3P,EAAAiI,mBAAAtU,GACAqM,EAAA4E,KAAA,MAAAjR,GACAmf,EAAA,KAAAD,EAAAtU,EAAAwU,cAAA,MACAxU,EAAAyU,cAAA/iB,aAAAsO,EAAAyU,cACAzU,EAAAyU,aAAAhZ,GAAAuR,SAAA,KACAvL,MAAAmK,WACAnK,EAAA4E,KAAA,QAAAjR,IACO,MAEPmf,EAAA,KAAAD,EAAAtU,EAAAwU,cAAA,MACAxU,EAAAyU,cAAA/iB,aAAAsO,EAAAyU,cACAhT,EAAA4E,KAAA,YAAAjR,KAIA4K,EAAAwU,cAAA/Y,GAAAI,MACAJ,GAAAuR,SAAA,KACAvL,EAAAmK,YAAAnK,EAAA2P,YAAA,MAGApR,EAAA+Q,YAAA/Q,EAAAgR,UAAAvP,EAAA4Q,gBAAA,IAAA3B,EAAA9C,MAAA5N,EAAAkK,mBAAAlK,EAAA0T,eAIA,OAHA1T,EAAA+Q,WAAA,EACA/Q,EAAAgR,SAAA,OACAhR,EAAAmS,aAAA,GAOA,IAAAuC,EAOA,GAXA1U,EAAA+Q,WAAA,EACA/Q,EAAAgR,SAAA,EACAhR,EAAAmS,aAAA,EAIAuC,EADAzX,EAAA+W,aACA3R,EAAAZ,EAAA4F,WAAA5F,EAAA4F,WAEArH,EAAAkK,iBAGAjN,EAAAgX,SAAA,CACA,GAAAS,GAAAjT,EAAAkG,eAEA,YADAlG,EAAA0J,QAAA1J,EAAAuF,aAGA,GAAA0N,GAAAjT,EAAAyG,eAMA,YALAzG,EAAAkB,OAAA3Q,OAAA8Q,EAAA9Q,OACAyP,EAAA0J,QAAArI,EAAA9Q,OAAA,GAEAyP,EAAA0J,QAAA1J,EAAAkB,OAAA3Q,OAAA,IAKA,GAAAiL,EAAA0X,iBAAA,CACA,GAAA3U,EAAAkU,WAAAliB,OAAA,GACA,MAAA4iB,EAAA5U,EAAAkU,WAAAW,MACAC,EAAA9U,EAAAkU,WAAAW,MAEAE,EAAAH,EAAAT,SAAAW,EAAAX,SACAC,EAAAQ,EAAAR,KAAAU,EAAAV,KACA3S,EAAAuT,SAAAD,EAAAX,EACA3S,EAAAuT,UAAA,EACA9Q,KAAAuB,IAAAhE,EAAAuT,UAAA/X,EAAAgY,0BACAxT,EAAAuT,SAAA,IAIAZ,EAAA,KAAA3Y,GAAAI,MAAA+Y,EAAAR,KAAA,OACA3S,EAAAuT,SAAA,QAGAvT,EAAAuT,SAAA,EAEAvT,EAAAuT,UAAA/X,EAAAiY,8BAEAlV,EAAAkU,WAAAliB,OAAA,EACA,IAAAmjB,EAAA,IAAAlY,EAAAmY,sBACA,MAAAC,EAAA5T,EAAAuT,SAAAG,EAEA,IAAAG,EAAA7T,EAAA4F,UAAAgO,EACAhT,IAAAiT,MAEA,IACAC,EADAC,GAAA,EAEA,MAAAC,EAAA,GAAAvR,KAAAuB,IAAAhE,EAAAuT,UAAA/X,EAAAyY,4BACA,IAAAC,EACA,GAAAL,EAAA7T,EAAAyG,eACAjL,EAAA2Y,wBACAN,EAAA7T,EAAAyG,gBAAAuN,IACAH,EAAA7T,EAAAyG,eAAAuN,GAEAF,EAAA9T,EAAAyG,eACAsN,GAAA,EACAxV,EAAA2T,qBAAA,GAEA2B,EAAA7T,EAAAyG,eAEAjL,EAAA+L,MAAA/L,EAAAuI,iBAAAmQ,GAAA,QACO,GAAAL,EAAA7T,EAAAkG,eACP1K,EAAA2Y,wBACAN,EAAA7T,EAAAkG,eAAA8N,IACAH,EAAA7T,EAAAkG,eAAA8N,GAEAF,EAAA9T,EAAAkG,eACA6N,GAAA,EACAxV,EAAA2T,qBAAA,GAEA2B,EAAA7T,EAAAkG,eAEA1K,EAAA+L,MAAA/L,EAAAuI,iBAAAmQ,GAAA,QACO,GAAA1Y,EAAA4Y,eAAA,CACP,IAAA3M,EACA,QAAA9V,EAAA,EAAuBA,EAAA0P,EAAA9Q,OAAqBoB,GAAA,EAC5C,GAAA0P,EAAA1P,IAAAkiB,EAAA,CACApM,EAAA9V,EACA,MAKAkiB,EADApR,KAAAuB,IAAA3C,EAAAoG,GAAAoM,GAAApR,KAAAuB,IAAA3C,EAAAoG,EAAA,GAAAoM,IAAA,SAAA7T,EAAA4Q,eACAvP,EAAAoG,GAEApG,EAAAoG,EAAA,GAEAoM,KAQA,GANAK,GACAlU,EAAAqU,KAAA,qBACArU,EAAAwK,YAIA,IAAAxK,EAAAuT,SAEAG,EADA9S,EACA6B,KAAAuB,MAAA6P,EAAA7T,EAAA4F,WAAA5F,EAAAuT,UAEA9Q,KAAAuB,KAAA6P,EAAA7T,EAAA4F,WAAA5F,EAAAuT,eAEO,GAAA/X,EAAA4Y,eAEP,YADApU,EAAAkL,iBAIA1P,EAAA2Y,wBAAAJ,GACA/T,EAAAuG,eAAAuN,GACA9T,EAAAsF,cAAAoO,GACA1T,EAAA0I,aAAAmL,GACA7T,EAAAkJ,iBAAA,EAAAlJ,EAAA4Q,gBACA5Q,EAAAwJ,WAAA,EACA/I,EAAAlL,cAAA,KACAyK,MAAAmK,WAAA5L,EAAA2T,sBACAlS,EAAA4E,KAAA,kBAEA5E,EAAAsF,cAAA9J,EAAA2J,OACAnF,EAAA0I,aAAAoL,GACArT,EAAAlL,cAAA,KACAyK,MAAAmK,WACAnK,EAAAzK,sBAGOyK,EAAAuT,UACPvT,EAAAuG,eAAAsN,GACA7T,EAAAsF,cAAAoO,GACA1T,EAAA0I,aAAAmL,GACA7T,EAAAkJ,iBAAA,EAAAlJ,EAAA4Q,gBACA5Q,EAAAwJ,YACAxJ,EAAAwJ,WAAA,EACA/I,EAAAlL,cAAA,KACAyK,MAAAmK,WACAnK,EAAAzK,oBAIAyK,EAAAuG,eAAAsN,GAGA7T,EAAA2H,oBACA3H,EAAA8G,2BACK,GAAAtL,EAAA4Y,eAEL,YADApU,EAAAkL,iBASA,cALA1P,EAAA0X,kBAAAJ,GAAAtX,EAAA8Y,gBACAtU,EAAAuG,iBACAvG,EAAA2H,oBACA3H,EAAA8G,wBAMA,IAAAyN,EAAA,EACAC,EAAAxU,EAAAuB,gBAAA,GACA,QAAAjR,EAAA,EAAiBA,EAAAgR,EAAA/Q,OAAuBD,GAAAkL,EAAAyI,eACxC,qBAAA3C,EAAAhR,EAAAkL,EAAAyI,gBACAgP,GAAA3R,EAAAhR,IAAA2iB,EAAA3R,EAAAhR,EAAAkL,EAAAyI,kBACAsQ,EAAAjkB,EACAkkB,EAAAlT,EAAAhR,EAAAkL,EAAAyI,gBAAA3C,EAAAhR,IAEK2iB,GAAA3R,EAAAhR,KACLikB,EAAAjkB,EACAkkB,EAAAlT,IAAA/Q,OAAA,GAAA+Q,IAAA/Q,OAAA,IAKA,MAAAkkB,GAAAxB,EAAA3R,EAAAiT,IAAAC,EAEA,GAAA1B,EAAAtX,EAAA8Y,aAAA,CAEA,IAAA9Y,EAAAkZ,WAEA,YADA1U,EAAA0J,QAAA1J,EAAAuF,aAGA,SAAAvF,EAAA4Q,iBACA6D,GAAAjZ,EAAAmZ,gBAAA3U,EAAA0J,QAAA6K,EAAA/Y,EAAAyI,gBACAjE,EAAA0J,QAAA6K,IAEA,SAAAvU,EAAA4Q,iBACA6D,EAAA,EAAAjZ,EAAAmZ,gBAAA3U,EAAA0J,QAAA6K,EAAA/Y,EAAAyI,gBACAjE,EAAA0J,QAAA6K,QAEG,CAEH,IAAA/Y,EAAAoZ,YAEA,YADA5U,EAAA0J,QAAA1J,EAAAuF,aAGA,SAAAvF,EAAA4Q,gBACA5Q,EAAA0J,QAAA6K,EAAA/Y,EAAAyI,gBAEA,SAAAjE,EAAA4Q,gBACA5Q,EAAA0J,QAAA6K,IAKA,SAAAM,KACA,MAAA7U,EAAA1V,MAEAkR,OAASA,EAAA7I,MAAaqN,EAEtB,GAAArN,GAAA,IAAAA,EAAAoD,YAAA,OAGAyF,EAAAsZ,aACA9U,EAAA+U,gBAIA,MAAA/K,eAASA,EAAAC,iBAAA5I,YAA2CrB,EASpD,GANAA,EAAAgK,gBAAA,EACAhK,EAAAiK,gBAAA,EAEAjK,EAAAD,aACAC,EAAAQ,eAEAhF,EAAAgX,SAAA,CACA,MAAAwC,EAAAvS,KAAAwS,IAAAxS,KAAAK,IAAA9C,EAAA4F,UAAA5F,EAAAyG,gBAAAzG,EAAAkG,gBACAlG,EAAA0I,aAAAsM,GACAhV,EAAA2H,oBACA3H,EAAA8G,sBAEAtL,EAAA6N,YACArJ,EAAAkF,wBAGAlF,EAAA8G,uBACA,SAAAtL,EAAAoH,eAAApH,EAAAoH,cAAA,IAAA5C,EAAA2G,QAAA3G,EAAAxE,OAAAuI,eACA/D,EAAA0J,QAAA1J,EAAAkB,OAAA3Q,OAAA,WAEAyP,EAAA0J,QAAA1J,EAAAuF,YAAA,SAIAvF,EAAAiK,iBACAjK,EAAAgK,iBAEAhK,EAAAxE,OAAAqJ,eAAAxD,IAAArB,EAAAqB,UACArB,EAAA8E,gBAIA,SAASoQ,GAAOvhB,GAChB,MAAAqM,EAAA1V,KACA0V,EAAA2P,aACA3P,EAAAxE,OAAA2Z,eAAAxhB,EAAAod,iBACA/Q,EAAAxE,OAAA4Z,0BAAApV,EAAAwJ,YACA7V,EAAAqe,kBACAre,EAAA0hB,6BAKA,SAAAC,KACA,MAAAtV,EAAA1V,MACAkR,OACAA,EAAA+Z,cAAA5iB,KAAA6iB,aACGxV,EAGHA,EAAA+O,gBAAA1P,KAAAW,GACAA,EAAAqR,eAAAhS,KAAAW,GACAA,EAAA4S,cAAAvT,KAAAW,GAGAA,EAAAyV,QAAmBP,GAAO7V,KAAAW,GAE1B,MAAApM,EAAA,cAAA4H,EAAAka,kBAAA/iB,EAAA6iB,EACA/hB,IAAA+H,EAAAuW,OAIA,GAASpV,GAAOE,QAAWF,GAAOK,gBAAkBL,GAAOQ,sBAItD,CACL,GAAUR,GAAOE,MAAA,CACjB,MAAAa,IAAA,eAAA6X,EAAAI,QAAsEhZ,GAAOe,kBAAAlC,EAAAoa,mBAAA,CAA+CC,SAAA,EAAApiB,SAAA,GAC5HG,EAAAxF,iBAAAmnB,EAAAI,MAAA3V,EAAA+O,aAAArR,GACA9J,EAAAxF,iBAAAmnB,EAAAO,KAAA9V,EAAAqR,YAAsE1U,GAAOe,gBAAA,CAAoBmY,SAAA,EAAApiB,WAA0BA,GAC3HG,EAAAxF,iBAAAmnB,EAAAQ,IAAA/V,EAAA4S,WAAAlV,IAEAlC,EAAAgR,gBAAoCiB,GAAMG,MAASH,GAAMI,SAAArS,EAAAgR,gBAAuC7P,GAAOE,OAAU4Q,GAAMG,OACvHha,EAAAxF,iBAAA,YAAA4R,EAAA+O,cAAA,GACQ9gB,EAAQG,iBAAA,YAAA4R,EAAAqR,YAAA5d,GACRxF,EAAQG,iBAAA,UAAA4R,EAAA4S,YAAA,SAbhBhf,EAAAxF,iBAAAmnB,EAAAI,MAAA3V,EAAA+O,cAAA,GACM9gB,EAAQG,iBAAAmnB,EAAAO,KAAA9V,EAAAqR,YAAA5d,GACRxF,EAAQG,iBAAAmnB,EAAAQ,IAAA/V,EAAA4S,YAAA,IAedpX,EAAA2Z,eAAA3Z,EAAA4Z,2BACAxhB,EAAAxF,iBAAA,QAAA4R,EAAAyV,SAAA,GAKAzV,EAAArS,GAAa8f,GAAMG,KAAQH,GAAMI,QAAA,kEAAAgH,IAAA,GAGjC,SAAAmB,KACA,MAAAhW,EAAA1V,MAEAkR,OACAA,EAAA+Z,cAAA5iB,KAAA6iB,aACGxV,EAEHpM,EAAA,cAAA4H,EAAAka,kBAAA/iB,EAAA6iB,EACA/hB,IAAA+H,EAAAuW,OAIA,GAASpV,GAAOE,QAAWF,GAAOK,gBAAkBL,GAAOQ,sBAItD,CACL,GAAUR,GAAOE,MAAA,CACjB,MAAAa,IAAA,iBAAA6X,EAAAI,QAAwEhZ,GAAOe,kBAAAlC,EAAAoa,mBAAA,CAA+CC,SAAA,EAAApiB,SAAA,GAC9HG,EAAAvF,oBAAAknB,EAAAI,MAAA3V,EAAA+O,aAAArR,GACA9J,EAAAvF,oBAAAknB,EAAAO,KAAA9V,EAAAqR,YAAA5d,GACAG,EAAAvF,oBAAAknB,EAAAQ,IAAA/V,EAAA4S,WAAAlV,IAEAlC,EAAAgR,gBAAoCiB,GAAMG,MAASH,GAAMI,SAAArS,EAAAgR,gBAAuC7P,GAAOE,OAAU4Q,GAAMG,OACvHha,EAAAvF,oBAAA,YAAA2R,EAAA+O,cAAA,GACQ9gB,EAAQI,oBAAA,YAAA2R,EAAAqR,YAAA5d,GACRxF,EAAQI,oBAAA,UAAA2R,EAAA4S,YAAA,SAbhBhf,EAAAvF,oBAAAknB,EAAAI,MAAA3V,EAAA+O,cAAA,GACM9gB,EAAQI,oBAAAknB,EAAAO,KAAA9V,EAAAqR,YAAA5d,GACRxF,EAAQI,oBAAAknB,EAAAQ,IAAA/V,EAAA4S,YAAA,IAedpX,EAAA2Z,eAAA3Z,EAAA4Z,2BACAxhB,EAAAvF,oBAAA,QAAA2R,EAAAyV,SAAA,GAKAzV,EAAArL,IAAc8Y,GAAMG,KAAQH,GAAMI,QAAA,kEAAAgH,IAGlC,IAAIoB,GAAM,CACVX,gBACAU,iBAGA,SAAAjB,KACA,MAAA/U,EAAA1V,MACAib,YACAA,EAAAwE,cAAAO,eAAA,EAAA9O,UACGwE,EACH8U,EAAAtZ,EAAAsZ,YACA,IAAAA,MAAA,IAAAroB,OAAAoN,KAAAib,GAAAvkB,OAAA,OAGA,MAAA2lB,EAAAlW,EAAAmW,cAAArB,GAEA,GAAAoB,GAAAlW,EAAAoW,oBAAAF,EAAA,CACA,MAAAG,EAAAH,KAAApB,IAAAoB,QAAA7hB,EACAgiB,GACA,kDAAAvc,QAAA2B,IACA,MAAA6a,EAAAD,EAAA5a,GACA,qBAAA6a,IAIAD,EAAA5a,GAHA,kBAAAA,GAAA,SAAA6a,GAAA,SAAAA,EAES,kBAAA7a,EACTzF,WAAAsgB,GAEAhW,SAAAgW,EAAA,IAJA,UASA,MAAAC,EAAAF,GAAArW,EAAAwW,eACAC,EAAAjb,EAAA+L,MAAAgP,EAAA3T,gBAAApH,EAAAoH,cAEA5I,GAAA0C,OAAAsD,EAAAxE,OAAA+a,GAEAvc,GAAA0C,OAAAsD,EAAA,CACAkR,eAAAlR,EAAAxE,OAAA0V,eACAlH,eAAAhK,EAAAxE,OAAAwO,eACAC,eAAAjK,EAAAxE,OAAAyO,iBAGAjK,EAAAoW,kBAAAF,EAEAO,GAAA1M,IACA/J,EAAAqM,cACArM,EAAAyL,aACAzL,EAAAQ,eACAR,EAAA0J,QAAAnE,EAAA+E,EAAAtK,EAAAsK,aAAA,OAEAtK,EAAA4E,KAAA,aAAA2R,IAIA,SAAAJ,GAAArB,GACA,MAAA9U,EAAA1V,KAEA,IAAAwqB,EAAA,OACA,IAAAoB,GAAA,EACA,MAAAQ,EAAA,GACAjqB,OAAAoN,KAAAib,GAAAhb,QAAA6c,IACAD,EAAAxlB,KAAAylB,KAEAD,EAAAE,KAAA,CAAAhc,EAAAic,IAAAvW,SAAA1F,EAAA,IAAA0F,SAAAuW,EAAA,KACA,QAAAvmB,EAAA,EAAiBA,EAAAomB,EAAAnmB,OAAmBD,GAAA,GACpC,MAAAqmB,EAAAD,EAAApmB,GACA0P,EAAAxE,OAAAsb,mBACAH,GAAmBtnB,EAAM0nB,aACzBb,EAAAS,GAEKA,GAAmBtnB,EAAM0nB,aAAAb,IAC9BA,EAAAS,GAGA,OAAAT,GAAA,MAGA,IAAIc,GAAW,CAAIjC,iBAAAoB,kBAEnB,MAAMc,GAAO,WACb,SAAAC,IACA,MAAAxJ,EAAere,EAAME,UAAAC,UAAAgf,cACrB,OAAAd,EAAA3c,QAAA,cAAA2c,EAAA3c,QAAA,aAAA2c,EAAA3c,QAAA,aAEA,OACAomB,OAAY9nB,EAAME,UAAAC,UAAA2B,MAAA,eAA4C9B,EAAME,UAAAC,UAAA2B,MAAA,SACpEimB,SAAc/nB,EAAME,UAAAC,UAAA2B,MAAA,SACpB+lB,aACAG,YAAA,+CAAAC,KAAqEjoB,EAAME,UAAAC,YAT9D,GAab,SAAA+nB,KACA,MAAAvX,EAAA1V,MACAktB,WACAA,EAAAhc,SAAAoF,MAAAX,OACGD,EACHyX,EAAA,GAEAA,EAAAvmB,KAAAsK,EAAA4N,WAEA5N,EAAAgX,UACAiF,EAAAvmB,KAAA,aAEOyL,GAAOY,SACdka,EAAAvmB,KAAA,cAEAsK,EAAA6N,YACAoO,EAAAvmB,KAAA,cAEA0P,GACA6W,EAAAvmB,KAAA,OAEAsK,EAAAgH,gBAAA,GACAiV,EAAAvmB,KAAA,YAEMuc,GAAMI,SACZ4J,EAAAvmB,KAAA,WAEMuc,GAAMG,KACZ6J,EAAAvmB,KAAA,QAGO+lB,GAAOE,MAASF,GAAOG,UAAaza,GAAOK,eAAkBL,GAAOQ,wBAC3Esa,EAAAvmB,YAAyBsK,EAAA4N,aAGzBqO,EAAA3d,QAAA4d,IACAF,EAAAtmB,KAAAsK,EAAAmc,uBAAAD,KAGAzX,EAAAzO,SAAAgmB,EAAA1c,KAAA,MAGA,SAAA8c,KACA,MAAA5X,EAAA1V,MACA2V,IAASA,EAAAuX,cAAkBxX,EAE3BC,EAAAnO,YAAA0lB,EAAA1c,KAAA,MAGA,IAAApJ,GAAA,CAAe6lB,cAAAK,kBAEf,SAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1iB,GACA,IAAA2iB,EACA,SAAAC,IACA5iB,OAEAsiB,EAAAO,UAAAH,EAmBAE,IAlBAL,GACAI,EAAA,IAAkB9oB,EAAMQ,MACxBsoB,EAAAG,OAAAF,EACAD,EAAAI,QAAAH,EACAH,IACAE,EAAAF,SAEAD,IACAG,EAAAH,UAEAD,IACAI,EAAAJ,QAGAK,IAQA,SAAAI,KACA,MAAAxY,EAAA1V,KAEA,SAAA8tB,IACA,qBAAApY,GAAA,OAAAA,SAAAmK,iBACA9V,IAAA2L,EAAAyY,eAAAzY,EAAAyY,cAAA,GACAzY,EAAAyY,eAAAzY,EAAA0Y,aAAAnoB,SACAyP,EAAAxE,OAAAmd,qBAAA3Y,EAAAsI,SACAtI,EAAA4E,KAAA,iBANA5E,EAAA0Y,aAAA1Y,EAAAC,IAAA/G,KAAA,OASA,QAAA5I,EAAA,EAAiBA,EAAA0P,EAAA0Y,aAAAnoB,OAAgCD,GAAA,GACjD,MAAAwnB,EAAA9X,EAAA0Y,aAAApoB,GACA0P,EAAA6X,UACAC,EACAA,EAAAc,YAAAd,EAAAvlB,aAAA,OACAulB,EAAAE,QAAAF,EAAAvlB,aAAA,UACAulB,EAAAG,OAAAH,EAAAvlB,aAAA,UACA,EACA6lB,IAKA,IAAIS,GAAM,CACVhB,aACAW,kBAGA,SAAA1T,KACA,MAAA9E,EAAA1V,KACAwuB,EAAA9Y,EAAAyM,SAEAzM,EAAAyM,SAAA,IAAAzM,EAAAqB,SAAA9Q,OACAyP,EAAAgK,gBAAAhK,EAAAyM,SACAzM,EAAAiK,gBAAAjK,EAAAyM,SAGAqM,IAAA9Y,EAAAyM,UAAAzM,EAAA4E,KAAA5E,EAAAyM,SAAA,iBAEAqM,OAAA9Y,EAAAyM,WACAzM,EAAA2G,OAAA,EACA3G,EAAA+Y,WAAAzQ,UAIA,IAAA0Q,GAAA,CAAuBlU,kBAEvBmU,GAAA,CACAC,MAAA,EACA9P,UAAA,aACAsM,kBAAA,YACA5L,aAAA,EACA3E,MAAA,IAEA0E,gCAAA,EAGAuG,oBAAA,EACAE,mBAAA,GAGAkC,UAAA,EACAU,kBAAA,EACAS,sBAAA,EACAQ,wBAAA,EACAF,4BAAA,EACAR,8BAAA,EACAW,gBAAA,EACAZ,wBAAA,IAGAnK,YAAA,EAGAjF,gBAAA,EAGAoE,kBAAA,EAGArE,OAAA,QAGA2Q,iBAAAzgB,EACAyiB,oBAAA,EAGA9U,aAAA,EACAY,cAAA,EACAJ,gBAAA,EACAK,oBAAA,SACAoB,eAAA,EACAF,gBAAA,EACAtC,mBAAA,EACAE,kBAAA,EACAqG,qBAAA,EACA1D,0BAAA,EAGAO,eAAA,EAGAhB,cAAA,EAGAsO,WAAA,EACAR,WAAA,GACAnF,eAAA,EACAoI,aAAA,EACAF,YAAA,EACAC,gBAAA,GACAL,aAAA,IACA/B,cAAA,EACArB,gBAAA,EACAL,UAAA,EACAiB,0BAAA,EACAX,0BAAA,EACAC,+BAAA,EACAG,qBAAA,EAGA4H,mBAAA,EAGA7G,YAAA,EACAD,gBAAA,IAGAtN,qBAAA,EACAC,uBAAA,EAGA4H,YAAA,EAGAuI,eAAA,EACAC,0BAAA,EACA/M,qBAAA,EAGAmQ,eAAA,EACAG,qBAAA,EAGApR,MAAA,EACAuE,qBAAA,EACAxB,aAAA,KACAoB,wBAAA,EAGAzB,gBAAA,EACAD,gBAAA,EACA4F,aAAA,KACAJ,WAAA,EACAE,eAAA,oBACAD,kBAAA,KAGAmG,kBAAA,EAGA+B,uBAAA,oBACAxW,WAAA,eACA0K,gBAAA,+BACA5E,iBAAA,sBACAG,0BAAA,gCACAtB,kBAAA,uBACA0B,oBAAA,yBACAN,eAAA,oBACAG,wBAAA,8BACAF,eAAA,oBACAG,wBAAA,8BACA8R,aAAA,iBAGAC,oBAAA,GAGA,MAAAC,GAAA,CACAhR,UACA1C,UAAWqD,GACXhW,WAAAwW,GACAxG,MAAOuI,GACPjE,QACAqF,cACAY,gBACAlZ,OAAQ2hB,GACRnB,YAAakC,GACblS,cAAAkU,GACAtnB,WACA6nB,OAAQV,IAGRW,GAAA,GAEA,MAAMC,WAAM1b,GACZ5N,eAAAkD,GACA,IAAAV,EACA6I,EACA,IAAAnI,EAAA9C,QAAA8C,EAAA,GAAA0I,aAAA1I,EAAA,GAAA0I,cAAAtP,OACA+O,EAAAnI,EAAA,IAEAV,EAAA6I,GAAAnI,EAEAmI,MAAA,IAEAA,EAAAxB,GAAA0C,OAAA,GAA4BlB,GAC5B7I,IAAA6I,EAAA7I,KAAA6I,EAAA7I,MAEA+mB,MAAAle,GAEA/O,OAAAoN,KAAAyf,IAAAxf,QAAA6f,IACAltB,OAAAoN,KAAAyf,GAAAK,IAAA7f,QAAA8f,IACaH,GAAMjgB,UAAAogB,KACTH,GAAMjgB,UAAAogB,GAAAN,GAAAK,GAAAC,QAMhB,MAAA5Z,EAAA1V,KACA,qBAAA0V,EAAAlB,UACAkB,EAAAlB,QAAA,IAEArS,OAAAoN,KAAAmG,EAAAlB,SAAAhF,QAAAiF,IACA,MAAAC,EAAAgB,EAAAlB,QAAAC,GACA,GAAAC,EAAAxD,OAAA,CACA,MAAAqe,EAAAptB,OAAAoN,KAAAmF,EAAAxD,QAAA,GACA0D,EAAAF,EAAAxD,OAAAqe,GACA,qBAAA3a,GAAA,OAAAA,EAAA,OACA,KAAA2a,KAAAre,GAAA,YAAA0D,GAAA,QACA,IAAA1D,EAAAqe,KACAre,EAAAqe,GAAA,CAAqC7Y,SAAA,IAGrC,kBAAAxF,EAAAqe,IACA,YAAAre,EAAAqe,KAEAre,EAAAqe,GAAA7Y,SAAA,GAEAxF,EAAAqe,KAAAre,EAAAqe,GAAA,CAAiE7Y,SAAA,OAKjE,MAAA8Y,EAAA9f,GAAA0C,OAAA,GAAwCuc,IACxCjZ,EAAA+Z,iBAAAD,GAGA9Z,EAAAxE,OAAAxB,GAAA0C,OAAA,GAAmCod,EAAAN,GAAAhe,GACnCwE,EAAAwW,eAAAxc,GAAA0C,OAAA,GAA2CsD,EAAAxE,QAC3CwE,EAAAga,aAAAhgB,GAAA0C,OAAA,GAAyClB,GAGzCwE,EAAAxP,EAAeA,EAGf,MAAAyP,EAAgBzP,EAACwP,EAAAxE,OAAA7I,IAGjB,GAFAA,EAAAsN,EAAA,IAEAtN,EACA,OAGA,GAAAsN,EAAA1P,OAAA,GACA,MAAA0pB,EAAA,GAKA,OAJAha,EAAAhJ,KAAA,CAAAqH,EAAA4b,KACA,MAAAC,EAAAngB,GAAA0C,OAAA,GAAyClB,EAAA,CAAW7I,GAAAunB,IACpDD,EAAA/oB,KAAA,IAAyBuoB,GAAMU,MAE/BF,EAGAtnB,EAAAqN,SACAC,EAAA1T,KAAA,SAAAyT,GAGA,MAAAS,EAAAR,EAAAlR,aAAwCiR,EAAAxE,OAAA4d,gBAwHxC,OArHApf,GAAA0C,OAAAsD,EAAA,CACAC,MACAtN,KACA8N,aACA+U,UAAA/U,EAAA,GAGA+W,WAAA,GAGAtW,OAAc1Q,IACd8Q,WAAA,GACAD,SAAA,GACAE,gBAAA,GAGApR,eACA,qBAAA6P,EAAAxE,OAAA4N,WAEAjZ,aACA,mBAAA6P,EAAAxE,OAAA4N,WAGAxI,IAAA,QAAAjO,EAAA2W,IAAAkF,eAAA,QAAAvO,EAAAnJ,IAAA,aACA6J,aAAA,eAAAX,EAAAxE,OAAA4N,YAAA,QAAAzW,EAAA2W,IAAAkF,eAAA,QAAAvO,EAAAnJ,IAAA,cACA+J,SAAA,gBAAAJ,EAAA3J,IAAA,WAGAyO,YAAA,EACAwB,UAAA,EAGAL,aAAA,EACAC,OAAA,EAGAf,UAAA,EACAoD,kBAAA,EACA1C,SAAA,EACAiN,SAAA,EACA/J,WAAA,EAGAQ,eAAAhK,EAAAxE,OAAAwO,eACAC,eAAAjK,EAAAxE,OAAAyO,eAGAsL,YAAA,WACA,MAAA1Y,EAAA,sCACA,IAAAkR,EAAA,oCAgBA,OAfYpR,GAAOK,cACnB+Q,EAAA,0CACmBpR,GAAOQ,wBAC1B4Q,EAAA,iDAEA/N,EAAAoa,iBAAA,CACAzE,MAAA9Y,EAAA,GACAiZ,KAAAjZ,EAAA,GACAkZ,IAAAlZ,EAAA,IAEAmD,EAAAqa,mBAAA,CACA1E,MAAA5H,EAAA,GACA+H,KAAA/H,EAAA,GACAgI,IAAAhI,EAAA,IAEepR,GAAOE,QAAAmD,EAAAxE,OAAAgR,cAAAxM,EAAAoa,iBAAApa,EAAAqa,mBAlBtB,GAoBArL,gBAAA,CACAM,eAAAjb,EACAkb,aAAAlb,EACAmc,yBAAAnc,EACAsc,oBAAAtc,EACAoc,iBAAApc,EACAoU,sBAAApU,EACA4d,oBAAA5d,EACAyc,wBAAAzc,EAEA2c,aAAA,iDAEA+B,cAAA/Y,GAAAI,MACA4Y,kBAAA3e,EAEAoe,WAAA,GACAP,yBAAA7d,EACA8a,kBAAA9a,EACAqc,iBAAArc,GAIAsb,YAAA,EAGAuB,eAAAlR,EAAAxE,OAAA0V,eAEAjC,QAAA,CACAiB,OAAA,EACAC,OAAA,EACAN,SAAA,EACAG,SAAA,EACA7D,KAAA,GAIAuM,aAAA,GACAD,aAAA,IAKAzY,EAAAsa,aAGAta,EAAAxE,OAAA0d,MACAlZ,EAAAkZ,OAIAlZ,EAGA7P,uBACA,MAAA6P,EAAA1V,MACAkR,OACAA,EAAA0F,SAAAI,aAAAf,KAAAG,EAAA6E,eACKvF,EACL,IAAAua,EAAA,EACA,GAAA/e,EAAAuI,eAAA,CACA,IACAyW,EADAzY,EAAAb,EAAAqE,GAAAzB,gBAEA,QAAAxT,EAAAiV,EAAA,EAAmCjV,EAAA4Q,EAAA3Q,OAAmBD,GAAA,EACtD4Q,EAAA5Q,KAAAkqB,IACAzY,GAAAb,EAAA5Q,GAAAwT,gBACAyW,GAAA,EACAxY,EAAArB,IAAA8Z,GAAA,IAGA,QAAAlqB,EAAAiV,EAAA,EAAmCjV,GAAA,EAAQA,GAAA,EAC3C4Q,EAAA5Q,KAAAkqB,IACAzY,GAAAb,EAAA5Q,GAAAwT,gBACAyW,GAAA,EACAxY,EAAArB,IAAA8Z,GAAA,SAIA,QAAAlqB,EAAAiV,EAAA,EAAmCjV,EAAA4Q,EAAA3Q,OAAmBD,GAAA,EACtDgR,EAAAhR,GAAAgR,EAAAiE,GAAA7E,IACA6Z,GAAA,GAIA,OAAAA,EAGApqB,SACA,MAAA6P,EAAA1V,KACA,IAAA0V,KAAAmK,UAAA,OACA,MAAA9I,SAAWA,EAAA7F,UAAmBwE,EAU9B,SAAA0I,IACA,MAAA+R,EAAAza,EAAAW,cAAA,EAAAX,EAAA4F,UAAA5F,EAAA4F,UACAoP,EAAAvS,KAAAwS,IAAAxS,KAAAK,IAAA2X,EAAAza,EAAAyG,gBAAAzG,EAAAkG,gBACAlG,EAAA0I,aAAAsM,GACAhV,EAAA2H,oBACA3H,EAAA8G,sBAEA,IAAA4T,EAfAlf,EAAAsZ,aACA9U,EAAA+U,gBAEA/U,EAAAD,aACAC,EAAAQ,eACAR,EAAAuG,iBACAvG,EAAA8G,sBAUA9G,EAAAxE,OAAAgX,UACA9J,IACA1I,EAAAxE,OAAA6N,YACArJ,EAAAkF,qBAIAwV,GADA,SAAA1a,EAAAxE,OAAAoH,eAAA5C,EAAAxE,OAAAoH,cAAA,IAAA5C,EAAA2G,QAAA3G,EAAAxE,OAAAuI,eACA/D,EAAA0J,QAAA1J,EAAAkB,OAAA3Q,OAAA,WAEAyP,EAAA0J,QAAA1J,EAAAuF,YAAA,SAEAmV,GACAhS,KAGAlN,EAAAqJ,eAAAxD,IAAArB,EAAAqB,UACArB,EAAA8E,gBAEA9E,EAAA4E,KAAA,UAGAzU,OACA,MAAA6P,EAAA1V,KACA0V,EAAA+J,cAEA/J,EAAA4E,KAAA,cAGA5E,EAAAxE,OAAAsZ,aACA9U,EAAA+U,gBAIA/U,EAAAuX,aAGAvX,EAAAxE,OAAA+L,MACAvH,EAAAyL,aAIAzL,EAAAD,aAGAC,EAAAQ,eAEAR,EAAAxE,OAAAqJ,eACA7E,EAAA8E,gBAIA9E,EAAAxE,OAAAoR,YACA5M,EAAAsM,gBAGAtM,EAAAxE,OAAAgd,eACAxY,EAAAwY,gBAIAxY,EAAAxE,OAAA+L,KACAvH,EAAA0J,QAAA1J,EAAAxE,OAAAsO,aAAA9J,EAAAsK,aAAA,EAAAtK,EAAAxE,OAAA6d,oBAEArZ,EAAA0J,QAAA1J,EAAAxE,OAAAsO,aAAA,EAAA9J,EAAAxE,OAAA6d,oBAIArZ,EAAAsV,eAGAtV,EAAA+J,aAAA,EAGA/J,EAAA4E,KAAA,SAGAzU,QAAAwqB,GAAA,EAAAC,GAAA,GACA,MAAA5a,EAAA1V,MACAkR,OACAA,EAAAyE,MAAAQ,aAAAS,UACKlB,EAEL,2BAAAA,EAAAxE,QAAAwE,EAAAmK,UACA,MAGAnK,EAAA4E,KAAA,iBAGA5E,EAAA+J,aAAA,EAGA/J,EAAAgW,eAGAxa,EAAA+L,MACAvH,EAAAqM,cAIAuO,IACA5a,EAAA4X,gBACA3X,EAAAxN,WAAA,SACAgO,EAAAhO,WAAA,SACAyO,KAAA3Q,QACA2Q,EACApP,YAAA,CACA0J,EAAAsK,kBACAtK,EAAAyL,iBACAzL,EAAA0L,eACA1L,EAAA2L,gBACArM,KAAA,MACArI,WAAA,SACAA,WAAA,2BACAA,WAAA,sBACAA,WAAA,oBAIAuN,EAAA4E,KAAA,WAGAnY,OAAAoN,KAAAmG,EAAAhC,iBAAAlE,QAAAmE,IACA+B,EAAArL,IAAAsJ,MAGA,IAAA0c,IACA3a,EAAAC,IAAA,GAAAD,OAAA,KACAA,EAAAC,IAAA1T,KAAA,eACAyN,GAAA6gB,YAAA7a,IAEAA,EAAAmK,WAAA,EAEA,MAGAha,sBAAA2qB,GACA9gB,GAAA0C,OAAA8c,GAAAsB,GAGAtB,8BACA,OAAAA,GAGAP,sBACA,OAAAA,GAGAxf,mBACA,OAAAsE,GAGAvN,eACA,OAAWA,GAIX,IAAAuqB,GAAA,CACA5uB,KAAA,SACAuT,MAAA,CACAiO,OAAYF,IAEZ9N,OAAA,CACAgO,OAAYF,KAIZuN,GAAA,CACA7uB,KAAA,UACAuT,MAAA,CACAub,QAAate,IAEbgD,OAAA,CACAsb,QAAate,KAIbue,GAAA,CACA/uB,KAAA,UACAuT,MAAA,CACAyb,QAAalE,IAEbtX,OAAA,CACAwb,QAAalE,KAIbmE,GAAA,CACAjvB,KAAA,SACAgE,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAqb,OAAA,CACAlrB,gBACA6P,MAAAmK,WAAAnK,EAAA+J,cACA/J,EAAA4E,KAAA,gBACA5E,EAAA4E,KAAA,YAEAzU,2BACA6P,MAAAmK,WAAAnK,EAAA+J,aACA/J,EAAA4E,KAAA,0BAKAjX,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KAEM+E,EAAMjB,iBAAA,SAAA4R,EAAAqb,OAAAC,eAGNjsB,EAAMjB,iBAAA,oBAAA4R,EAAAqb,OAAAE,2BAEZprB,UACA,MAAA6P,EAAA1V,KACM+E,EAAMhB,oBAAA,SAAA2R,EAAAqb,OAAAC,eACNjsB,EAAMhB,oBAAA,oBAAA2R,EAAAqb,OAAAE,6BAKZ,MAAAC,GAAA,CACAC,KAAQpsB,EAAMqsB,kBAAqBrsB,EAAMssB,uBACzCxrB,OAAAyD,EAAA7G,EAAA,IACA,MAAAiT,EAAA1V,KAEAsxB,EAAAJ,GAAAC,KACAhe,EAAA,IAAAme,EAAAC,IAIA,OAAAA,EAAAtrB,OAEA,YADAyP,EAAA4E,KAAA,iBAAAiX,EAAA,IAGA,MAAAC,EAAA,WACA9b,EAAA4E,KAAA,iBAAAiX,EAAA,KAGUxsB,EAAM0sB,sBACR1sB,EAAM0sB,sBAAAD,GAENzsB,EAAMW,WAAA8rB,EAAA,KAIdre,EAAAue,QAAApoB,EAAA,CACAqoB,WAAA,qBAAAlvB,EAAAkvB,YAAAlvB,EAAAkvB,WACAC,UAAA,qBAAAnvB,EAAAmvB,WAAAnvB,EAAAmvB,UACAC,cAAA,qBAAApvB,EAAAovB,eAAApvB,EAAAovB,gBAGAnc,EAAAvC,SAAA2e,UAAAlrB,KAAAuM,IAEAtN,OACA,MAAA6P,EAAA1V,KACA,GAASqS,GAAOc,UAAAuC,EAAAxE,OAAAiC,SAAhB,CACA,GAAAuC,EAAAxE,OAAA6gB,eAAA,CACA,MAAAC,EAAAtc,EAAAC,IAAA/L,UACA,QAAA5D,EAAA,EAAqBA,EAAAgsB,EAAA/rB,OAA6BD,GAAA,EAClD0P,EAAAvC,SAAA8e,OAAAD,EAAAhsB,IAIA0P,EAAAvC,SAAA8e,OAAAvc,EAAAC,IAAA,IAA2Cic,WAAA,IAG3Clc,EAAAvC,SAAA8e,OAAAvc,EAAAS,WAAA,IAAkDwb,YAAA,MAElD9rB,UACA,MAAA6P,EAAA1V,KACA0V,EAAAvC,SAAA2e,UAAAtiB,QAAA2D,IACAA,EAAA+e,eAEAxc,EAAAvC,SAAA2e,UAAA,KAIA,IAAAK,GAAA,CACAtwB,KAAA,WACAqP,OAAA,CACAiC,UAAA,EACA4e,gBAAA,GAEAlsB,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAvC,SAAA,CACAyb,KAAAsC,GAAAtC,KAAA7Z,KAAAW,GACAuc,OAAAf,GAAAe,OAAAld,KAAAW,GACA0c,QAAAlB,GAAAkB,QAAArd,KAAAW,GACAoc,UAAA,OAIAzuB,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAAvC,SAAAyb,QAEA/oB,UACA,MAAA6P,EAAA1V,KACA0V,EAAAvC,SAAAif,aAKA,MAAAC,GAAA,CACAxsB,OAAAysB,GACA,MAAA5c,EAAA1V,MACAsY,cAAWA,EAAAqB,iBAAAF,kBAAgD/D,EAAAxE,QAC3DqhB,gBAAWA,EAAAC,kBAAkC9c,EAAAxE,OAAAuF,SAE7Cgc,KAAAC,EACAhhB,GAAAihB,EAAA/b,OACAA,EACAI,WAAA4b,EAAAC,YACAA,EACAhnB,OAAAinB,GACKpd,EAAAe,QACLf,EAAA2H,oBACA,MAAApC,EAAAvF,EAAAuF,aAAA,EAEA,IAAA8X,EAIAC,EACAC,EAJAF,EAAArd,EAAAW,aAAA,QACAX,EAAAI,eAAA,aAIA2D,GACAuZ,EAAA7a,KAAAC,MAAAE,EAAA,GAAAqB,EAAA4Y,EACAU,EAAA9a,KAAAC,MAAAE,EAAA,GAAAqB,EAAA6Y,IAEAQ,EAAA1a,GAAAqB,EAAA,GAAA4Y,EACAU,EAAAtZ,EAAA6Y,GAEA,MAAAC,EAAAta,KAAAK,KAAAyC,GAAA,GAAAgY,EAAA,GACAvhB,EAAAyG,KAAAwS,KAAA1P,GAAA,GAAA+X,EAAApc,EAAA3Q,OAAA,GACAitB,GAAAxd,EAAAsB,WAAAyb,IAAA,IAAA/c,EAAAsB,WAAA,OASA,SAAAmc,IACAzd,EAAAQ,eACAR,EAAAuG,iBACAvG,EAAA8G,sBACA9G,EAAA0d,MAAA1d,EAAAxE,OAAAkiB,KAAA1c,SACAhB,EAAA0d,KAAAC,OAIA,GAhBA3jB,GAAA0C,OAAAsD,EAAAe,QAAA,CACAgc,OACA/gB,KACA7F,OAAAqnB,EACAlc,WAAAtB,EAAAsB,aAYA0b,IAAAD,GAAAE,IAAAjhB,IAAA4gB,EAKA,OAJA5c,EAAAsB,aAAA4b,GAAAM,IAAAJ,GACApd,EAAAkB,OAAApK,IAAAumB,KAAyCG,YAEzCxd,EAAAuG,iBAGA,GAAAvG,EAAAxE,OAAAuF,QAAA6c,eAcA,OAbA5d,EAAAxE,OAAAuF,QAAA6c,eAAAjoB,KAAAqK,EAAA,CACA7J,OAAAqnB,EACAT,OACA/gB,KACAkF,OAAA,WACA,MAAA2c,EAAA,GACA,QAAAvtB,EAAAysB,EAA4BzsB,GAAA0L,EAAS1L,GAAA,EACrCutB,EAAA3sB,KAAAgQ,EAAA5Q,IAEA,OAAAutB,EALA,UAQAJ,IAGA,MAAAK,EAAA,GACAC,EAAA,GACA,GAAAnB,EACA5c,EAAAS,WAAAvH,SAAiC8G,EAAAxE,OAAA2F,cAAyBpP,cAE1D,QAAAzB,EAAA0sB,EAAgC1sB,GAAA2sB,EAAiB3sB,GAAA,GACjDA,EAAAysB,GAAAzsB,EAAA0L,IACAgE,EAAAS,WAAAvH,SAAqC8G,EAAAxE,OAAA2F,uCAAqD7Q,OAAEyB,SAI5F,QAAAzB,EAAA,EAAmBA,EAAA4Q,EAAA3Q,OAAmBD,GAAA,EACtCA,GAAAysB,GAAAzsB,GAAA0L,IACA,qBAAAihB,GAAAL,EACAmB,EAAA7sB,KAAAZ,IAEAA,EAAA2sB,GAAAc,EAAA7sB,KAAAZ,GACAA,EAAA0sB,GAAAc,EAAA5sB,KAAAZ,KAIAytB,EAAAjkB,QAAAwE,IACA0B,EAAAS,WAAA1I,OAAAolB,EAAAjc,EAAA5C,SAEAwf,EAAAlH,KAAA,CAAAhc,EAAAic,MAAAjc,GAAAd,QAAAwE,IACA0B,EAAAS,WAAArI,QAAA+kB,EAAAjc,EAAA5C,SAEA0B,EAAAS,WAAA1R,SAAA,iBAAA+H,IAAAumB,KAAmEG,OACnEC,KAEAttB,YAAA8S,EAAA3E,GACA,MAAA0B,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAAuF,QACA,GAAAvF,EAAAwiB,OAAAhe,EAAAe,QAAAid,MAAA1f,GACA,OAAA0B,EAAAe,QAAAid,MAAA1f,GAEA,MAAA2f,EAAAziB,EAAA2hB,YACQ3sB,EAACgL,EAAA2hB,YAAAxnB,KAAAqK,EAAAiD,EAAA3E,IACD9N,iBAAiBwP,EAAAxE,OAAA2F,wCAAsD7C,MAAa2E,WAG5F,OAFAgb,EAAA7rB,KAAA,4BAAA6rB,EAAA7rB,KAAA,0BAAAkM,GACA9C,EAAAwiB,QAAAhe,EAAAe,QAAAid,MAAA1f,GAAA2f,GACAA,GAEA9tB,YAAA8S,GACA,MAAAjD,EAAA1V,KACA0V,EAAAe,QAAAG,OAAAhQ,KAAA+R,GACAjD,EAAAe,QAAAuH,QAAA,IAEAnY,aAAA8S,GACA,MAAAjD,EAAA1V,KAEA,GADA0V,EAAAe,QAAAG,OAAAnN,QAAAkP,GACAjD,EAAAxE,OAAAuF,QAAAid,MAAA,CACA,MAAAA,EAAAhe,EAAAe,QAAAid,MACAE,EAAA,GACAzxB,OAAAoN,KAAAmkB,GAAAlkB,QAAAqkB,IACAD,EAAAC,EAAA,GAAAH,EAAAG,KAEAne,EAAAe,QAAAid,MAAAE,EAEAle,EAAAe,QAAAuH,QAAA,GACAtI,EAAAuK,UAAA,KAIA,IAAA6T,GAAA,CACAjyB,KAAA,UACAqP,OAAA,CACAuF,QAAA,CACAC,SAAA,EACAE,OAAA,GACA8c,OAAA,EACAb,YAAA,KACAS,eAAA,KACAf,gBAAA,EACAC,eAAA,IAGA3sB,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAe,QAAA,CACAuH,OAAAqU,GAAArU,OAAAjJ,KAAAW,GACA6M,YAAA8P,GAAA9P,YAAAxN,KAAAW,GACA8M,aAAA6P,GAAA7P,aAAAzN,KAAAW,GACAmd,YAAAR,GAAAQ,YAAA9d,KAAAW,GACAkB,OAAAlB,EAAAxE,OAAAuF,QAAAG,OACA8c,MAAA,OAIArwB,GAAA,CACAwC,aACA,MAAA6P,EAAA1V,KACA,IAAA0V,EAAAxE,OAAAuF,QAAAC,QAAA,OACAhB,EAAAwX,WAAAtmB,QAAgC8O,EAAAxE,OAAAmc,iCAChC,MAAA0G,EAAA,CACAtZ,qBAAA,GAEA/K,GAAA0C,OAAAsD,EAAAxE,OAAA6iB,GACArkB,GAAA0C,OAAAsD,EAAAwW,eAAA6H,GAEAre,EAAAxE,OAAAsO,cACA9J,EAAAe,QAAAuH,UAGAnY,eACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAuF,QAAAC,SACAhB,EAAAe,QAAAuH,YAKA,MAAAgW,GAAA,CACAnuB,OAAAoE,GACA,MAAAyL,EAAA1V,MACWqW,aAAAC,GAAoBZ,EAC/B,IAAArM,EAAAY,EACAZ,EAAAub,gBAAAvb,IAAAub,eACA,MAAAqP,EAAA5qB,EAAA6qB,SAAA7qB,EAAA8qB,SAEA,IAAAze,EAAAgK,iBAAAhK,EAAAI,gBAAA,KAAAme,GAAAve,EAAAK,cAAA,KAAAke,GACA,SAEA,IAAAve,EAAAiK,iBAAAjK,EAAAI,gBAAA,KAAAme,GAAAve,EAAAK,cAAA,KAAAke,GACA,SAEA,KAAA5qB,EAAA+qB,UAAA/qB,EAAAgrB,QAAAhrB,EAAAirB,SAAAjrB,EAAAkrB,YAGQ5wB,EAAQK,gBAAkBL,EAAQK,cAAAE,UAAoC,UAARP,EAAQK,cAAAE,SAAAggB,eAA6D,aAARvgB,EAAQK,cAAAE,SAAAggB,eAA3I,CAGA,GAAAxO,EAAAxE,OAAAsjB,SAAAC,iBAAA,KAAAR,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,CACA,IAAAS,GAAA,EAEA,GAAAhf,EAAAC,IAAA/L,YAAiC8L,EAAAxE,OAAA2F,cAAyB5Q,OAAA,GAAuE,IAAvEyP,EAAAC,IAAA/L,YAAwC8L,EAAAxE,OAAAyL,oBAA+B1W,OACjI,OAEA,MAAA0uB,EAA0B5vB,EAAM0nB,WAChCmI,EAA2B7vB,EAAM8vB,YACjCC,EAAApf,EAAAC,IAAA9J,SACAyK,IAAAwe,EAAAvoB,MAAAmJ,EAAAC,IAAA,GAAAvJ,YACA,MAAA2oB,EAAA,CACA,CAAAD,EAAAvoB,KAAAuoB,EAAAxoB,KACA,CAAAwoB,EAAAvoB,KAAAmJ,EAAA/T,MAAAmzB,EAAAxoB,KACA,CAAAwoB,EAAAvoB,KAAAuoB,EAAAxoB,IAAAoJ,EAAAhU,QACA,CAAAozB,EAAAvoB,KAAAmJ,EAAA/T,MAAAmzB,EAAAxoB,IAAAoJ,EAAAhU,SAEA,QAAAsE,EAAA,EAAqBA,EAAA+uB,EAAA9uB,OAAwBD,GAAA,GAC7C,MAAAqmB,EAAA0I,EAAA/uB,GAEAqmB,EAAA,OAAAA,EAAA,IAAAsI,GACAtI,EAAA,OAAAA,EAAA,IAAAuI,IAEAF,GAAA,GAGA,IAAAA,EAAA,OAEAhf,EAAAI,gBACA,KAAAme,GAAA,KAAAA,IACA5qB,EAAAod,eAAApd,EAAAod,iBACApd,EAAA2rB,aAAA,IAEA,KAAAf,IAAA3d,GAAA,KAAA2d,GAAA3d,IAAAZ,EAAAuK,aACA,KAAAgU,IAAA3d,GAAA,KAAA2d,GAAA3d,IAAAZ,EAAA0K,cAEA,KAAA6T,GAAA,KAAAA,IACA5qB,EAAAod,eAAApd,EAAAod,iBACApd,EAAA2rB,aAAA,GAEA,KAAAf,GAAAve,EAAAuK,YACA,KAAAgU,GAAAve,EAAA0K,aAEA1K,EAAA4E,KAAA,WAAA2Z,KAGApuB,SACA,MAAA6P,EAAA1V,KACA0V,EAAA8e,SAAA9d,UACIxQ,EAAEvC,GAAQN,GAAA,UAAAqS,EAAA8e,SAAAS,QACdvf,EAAA8e,SAAA9d,SAAA,IAEA7Q,UACA,MAAA6P,EAAA1V,KACA0V,EAAA8e,SAAA9d,UACIxQ,EAAEvC,GAAQ0G,IAAA,UAAAqL,EAAA8e,SAAAS,QACdvf,EAAA8e,SAAA9d,SAAA,KAIA,IAAAwe,GAAA,CACArzB,KAAA,WACAqP,OAAA,CACAsjB,SAAA,CACA9d,SAAA,EACA+d,gBAAA,IAGA5uB,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACA8e,SAAA,CACA9d,SAAA,EACAye,OAAAnB,GAAAmB,OAAApgB,KAAAW,GACA0f,QAAApB,GAAAoB,QAAArgB,KAAAW,GACAuf,OAAAjB,GAAAiB,OAAAlgB,KAAAW,OAIArS,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAsjB,SAAA9d,SACAhB,EAAA8e,SAAAW,UAGAtvB,UACA,MAAA6P,EAAA1V,KACA0V,EAAA8e,SAAA9d,SACAhB,EAAA8e,SAAAY,aAMA,SAAAC,KACA,MAAA1hB,EAAA,UACA,IAAA2hB,EAAA3hB,KAAiChQ,EAEjC,IAAA2xB,EAAA,CACA,MAAAC,EAAoB5xB,EAAQa,cAAA,OAC5B+wB,EAAA5wB,aAAAgP,EAAA,WACA2hB,EAAA,oBAAAC,EAAA5hB,GAcA,OAXA2hB,GACO3xB,EAAQ6xB,gBACR7xB,EAAQ6xB,eAAAC,aAGA,IAAR9xB,EAAQ6xB,eAAAC,WAAA,SAGfH,EAAkB3xB,EAAQ6xB,eAAAC,WAAA,uBAG1BH,EAEA,MAAAI,GAAA,CACAC,eAAAjmB,GAAAI,MACA7F,MAAA,WACA,OAAQlF,EAAME,UAAAC,UAAAuB,QAAA,+BACd4uB,KAAA,qBAFA,GAIAxvB,UAAAwD,GAEA,MAAAusB,EAAA,GACAC,EAAA,GACAC,EAAA,IAEA,IAAAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAkDA,MA/CA,WAAA7sB,IACA2sB,EAAA3sB,EAAAsB,QAEA,eAAAtB,IACA2sB,GAAA3sB,EAAA8sB,WAAA,KAEA,gBAAA9sB,IACA2sB,GAAA3sB,EAAA+sB,YAAA,KAEA,gBAAA/sB,IACA0sB,GAAA1sB,EAAAgtB,YAAA,KAIA,SAAAhtB,KAAA0G,OAAA1G,EAAAitB,kBACAP,EAAAC,EACAA,EAAA,GAGAC,EAAAF,EAAAH,EACAM,EAAAF,EAAAJ,EAEA,WAAAvsB,IACA6sB,EAAA7sB,EAAAktB,QAEA,WAAAltB,IACA4sB,EAAA5sB,EAAAmtB,SAGAP,GAAAC,IAAA7sB,EAAAotB,YACA,IAAAptB,EAAAotB,WACAR,GAAAJ,EACAK,GAAAL,IAEAI,GAAAH,EACAI,GAAAJ,IAKAG,IAAAF,IACAA,EAAAE,EAAA,QAEAC,IAAAF,IACAA,EAAAE,EAAA,QAGA,CACAQ,MAAAX,EACAY,MAAAX,EACAY,OAAAX,EACAY,OAAAX,IAGArwB,mBACA,MAAA6P,EAAA1V,KACA0V,EAAAohB,cAAA,GAEAjxB,mBACA,MAAA6P,EAAA1V,KACA0V,EAAAohB,cAAA,GAEAjxB,OAAAoE,GACA,IAAAZ,EAAAY,EACA,MAAAyL,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAA6lB,WAEA,IAAArhB,EAAAohB,eAAA5lB,EAAA8lB,eAAA,SAEA3tB,EAAAub,gBAAAvb,IAAAub,eACA,IAAAqS,EAAA,EACA,MAAAC,EAAAxhB,EAAAW,cAAA,IAEApC,EAAAyhB,GAAArV,UAAAhX,GAEA,GAAA6H,EAAAimB,YACA,GAAAzhB,EAAAI,eAAA,CACA,KAAAqC,KAAAuB,IAAAzF,EAAA2iB,QAAAze,KAAAuB,IAAAzF,EAAA4iB,SACA,SADAI,EAAAhjB,EAAA2iB,OAAAM,MAEO,MAAA/e,KAAAuB,IAAAzF,EAAA4iB,QAAA1e,KAAAuB,IAAAzF,EAAA2iB,SACP,SADOK,EAAAhjB,EAAA4iB,YAGPI,EAAA9e,KAAAuB,IAAAzF,EAAA2iB,QAAAze,KAAAuB,IAAAzF,EAAA4iB,SAAA5iB,EAAA2iB,OAAAM,GAAAjjB,EAAA4iB,OAGA,OAAAI,EAAA,SAIA,GAFA/lB,EAAAkmB,SAAAH,MAEAvhB,EAAAxE,OAAAgX,SAaK,CAELxS,EAAAxE,OAAA+L,MACAvH,EAAAwK,UAEA,IAAAkI,EAAA1S,EAAAuI,eAAAgZ,EAAA/lB,EAAAmmB,YACA,MAAA/a,EAAA5G,EAAA0G,YACAG,EAAA7G,EAAA2G,MA2BA,GAzBA+L,GAAA1S,EAAAkG,iBAAAwM,EAAA1S,EAAAkG,gBACAwM,GAAA1S,EAAAyG,iBAAAiM,EAAA1S,EAAAyG,gBAEAzG,EAAAsF,cAAA,GACAtF,EAAA0I,aAAAgK,GACA1S,EAAAuG,iBACAvG,EAAA2H,oBACA3H,EAAA8G,wBAEAF,GAAA5G,EAAA0G,cAAAG,GAAA7G,EAAA2G,QACA3G,EAAA8G,sBAGA9G,EAAAxE,OAAA4Y,iBACAnkB,aAAA+P,EAAAqhB,WAAAO,SACA5hB,EAAAqhB,WAAAO,QAAA5nB,GAAAuR,SAAA,KACAvL,EAAAkL,kBACS,MAGTlL,EAAA4E,KAAA,SAAAjR,GAGAqM,EAAAxE,OAAAqmB,UAAA7hB,EAAAxE,OAAAsmB,8BAAA9hB,EAAA6hB,SAAAE,OAEArP,IAAA1S,EAAAkG,gBAAAwM,IAAA1S,EAAAyG,eAAA,aA/CA,CACA,GAAAzM,GAAAI,MAAA4F,EAAAqhB,WAAApB,eAAA,GACA,GAAAsB,EAAA,EACA,GAAAvhB,EAAA2G,QAAA3G,EAAAxE,OAAA+L,MAAAvH,EAAAwJ,WAGW,GAAAhO,EAAA8lB,eAAA,cAFXthB,EAAAuK,YACAvK,EAAA4E,KAAA,SAAAjR,QAES,GAAAqM,EAAA0G,cAAA1G,EAAAxE,OAAA+L,MAAAvH,EAAAwJ,WAGA,GAAAhO,EAAA8lB,eAAA,cAFTthB,EAAA0K,YACA1K,EAAA4E,KAAA,SAAAjR,GAGAqM,EAAAqhB,WAAApB,gBAAA,IAA8C5wB,EAAMS,MAAAkyB,UAwCpD,OAFAruB,EAAAod,eAAApd,EAAAod,iBACApd,EAAA2rB,aAAA,GACA,GAEAnvB,SACA,MAAA6P,EAAA1V,KACA,IAAA01B,GAAAzrB,MAAA,SACA,GAAAyL,EAAAqhB,WAAArgB,QAAA,SACA,IAAApN,EAAAoM,EAAAC,IAQA,MAPA,cAAAD,EAAAxE,OAAA6lB,WAAAY,eACAruB,EAAepD,EAACwP,EAAAxE,OAAA6lB,WAAAY,eAEhBruB,EAAAjG,GAAA,aAAAqS,EAAAqhB,WAAAa,kBACAtuB,EAAAjG,GAAA,aAAAqS,EAAAqhB,WAAAc,kBACAvuB,EAAAjG,GAAAqyB,GAAAzrB,MAAAyL,EAAAqhB,WAAA9B,QACAvf,EAAAqhB,WAAArgB,SAAA,GACA,GAEA7Q,UACA,MAAA6P,EAAA1V,KACA,IAAA01B,GAAAzrB,MAAA,SACA,IAAAyL,EAAAqhB,WAAArgB,QAAA,SACA,IAAApN,EAAAoM,EAAAC,IAMA,MALA,cAAAD,EAAAxE,OAAA6lB,WAAAY,eACAruB,EAAepD,EAACwP,EAAAxE,OAAA6lB,WAAAY,eAEhBruB,EAAAe,IAAAqrB,GAAAzrB,MAAAyL,EAAAqhB,WAAA9B,QACAvf,EAAAqhB,WAAArgB,SAAA,GACA,IAIA,IAAAohB,GAAA,CACAj2B,KAAA,aACAqP,OAAA,CACA6lB,WAAA,CACArgB,SAAA,EACAsgB,gBAAA,EACAI,QAAA,EACAD,aAAA,EACAE,YAAA,EACAM,aAAA,cAGA9xB,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAqhB,WAAA,CACArgB,SAAA,EACAye,OAAAO,GAAAP,OAAApgB,KAAAW,GACA0f,QAAAM,GAAAN,QAAArgB,KAAAW,GACAuf,OAAAS,GAAAT,OAAAlgB,KAAAW,GACAkiB,iBAAAlC,GAAAkC,iBAAA7iB,KAAAW,GACAmiB,iBAAAnC,GAAAmC,iBAAA9iB,KAAAW,GACAigB,eAAAjmB,GAAAI,UAIAzM,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA6lB,WAAArgB,SAAAhB,EAAAqhB,WAAA5B,UAEAtvB,UACA,MAAA6P,EAAA1V,KACA0V,EAAAqhB,WAAArgB,SAAAhB,EAAAqhB,WAAA3B,aAKA,MAAA2C,GAAA,CACAlyB,SAEA,MAAA6P,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAAud,WAEA,GAAA/Y,EAAAxE,OAAA+L,KAAA,OACA,MAAA+a,QAAWA,EAAAC,WAAmBviB,EAAA+Y,WAE9BwJ,KAAAhyB,OAAA,IACAyP,EAAA0G,YACA6b,EAAA/wB,SAAAgK,EAAAgnB,eAEAD,EAAAzwB,YAAA0J,EAAAgnB,eAEAD,EAAAviB,EAAAxE,OAAAqJ,eAAA7E,EAAAyM,SAAA,0BAAAjR,EAAAinB,YAEAH,KAAA/xB,OAAA,IACAyP,EAAA2G,MACA2b,EAAA9wB,SAAAgK,EAAAgnB,eAEAF,EAAAxwB,YAAA0J,EAAAgnB,eAEAF,EAAAtiB,EAAAxE,OAAAqJ,eAAA7E,EAAAyM,SAAA,0BAAAjR,EAAAinB,aAGAtyB,YAAAwD,GACA,MAAAqM,EAAA1V,KACAqJ,EAAAod,iBACA/Q,EAAA0G,cAAA1G,EAAAxE,OAAA+L,MACAvH,EAAA0K,aAEAva,YAAAwD,GACA,MAAAqM,EAAA1V,KACAqJ,EAAAod,iBACA/Q,EAAA2G,QAAA3G,EAAAxE,OAAA+L,MACAvH,EAAAuK,aAEApa,OACA,MAAA6P,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAAud,WACA,IAAAvd,EAAAknB,SAAAlnB,EAAAmnB,OAAA,OAEA,IAAAL,EACAC,EACA/mB,EAAAknB,SACAJ,EAAgB9xB,EAACgL,EAAAknB,QAEjB1iB,EAAAxE,OAAA2d,mBACA,kBAAA3d,EAAAknB,QACAJ,EAAA/xB,OAAA,GACA,IAAAyP,EAAAC,IAAA/G,KAAAsC,EAAAknB,QAAAnyB,SAEA+xB,EAAAtiB,EAAAC,IAAA/G,KAAAsC,EAAAknB,UAGAlnB,EAAAmnB,SACAJ,EAAgB/xB,EAACgL,EAAAmnB,QAEjB3iB,EAAAxE,OAAA2d,mBACA,kBAAA3d,EAAAmnB,QACAJ,EAAAhyB,OAAA,GACA,IAAAyP,EAAAC,IAAA/G,KAAAsC,EAAAmnB,QAAApyB,SAEAgyB,EAAAviB,EAAAC,IAAA/G,KAAAsC,EAAAmnB,UAIAL,KAAA/xB,OAAA,GACA+xB,EAAA30B,GAAA,QAAAqS,EAAA+Y,WAAA6J,aAEAL,KAAAhyB,OAAA,GACAgyB,EAAA50B,GAAA,QAAAqS,EAAA+Y,WAAA8J,aAGA7oB,GAAA0C,OAAAsD,EAAA+Y,WAAA,CACAuJ,UACAI,OAAAJ,KAAA,GACAC,UACAI,OAAAJ,KAAA,MAGApyB,UACA,MAAA6P,EAAA1V,MACAg4B,QAAWA,EAAAC,WAAmBviB,EAAA+Y,WAC9BuJ,KAAA/xB,SACA+xB,EAAA3tB,IAAA,QAAAqL,EAAA+Y,WAAA6J,aACAN,EAAAxwB,YAAAkO,EAAAxE,OAAAud,WAAAyJ,gBAEAD,KAAAhyB,SACAgyB,EAAA5tB,IAAA,QAAAqL,EAAA+Y,WAAA8J,aACAN,EAAAzwB,YAAAkO,EAAAxE,OAAAud,WAAAyJ,kBAKA,IAAAM,GAAA,CACA32B,KAAA,aACAqP,OAAA,CACAud,WAAA,CACA2J,OAAA,KACAC,OAAA,KAEAI,aAAA,EACAP,cAAA,yBACAQ,YAAA,uBACAP,UAAA,uBAGAtyB,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACA+Y,WAAA,CACAG,KAAAmJ,GAAAnJ,KAAA7Z,KAAAW,GACAsI,OAAA+Z,GAAA/Z,OAAAjJ,KAAAW,GACA0c,QAAA2F,GAAA3F,QAAArd,KAAAW,GACA4iB,YAAAP,GAAAO,YAAAvjB,KAAAW,GACA6iB,YAAAR,GAAAQ,YAAAxjB,KAAAW,OAIArS,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAA+Y,WAAAG,OACAlZ,EAAA+Y,WAAAzQ,UAEAnY,SACA,MAAA6P,EAAA1V,KACA0V,EAAA+Y,WAAAzQ,UAEAnY,WACA,MAAA6P,EAAA1V,KACA0V,EAAA+Y,WAAAzQ,UAEAnY,UACA,MAAA6P,EAAA1V,KACA0V,EAAA+Y,WAAA2D,WAEAvsB,MAAAwD,GACA,MAAAqM,EAAA1V,MACAg4B,QAAaA,EAAAC,WAAmBviB,EAAA+Y,YAEhC/Y,EAAAxE,OAAAud,WAAAgK,aACYvyB,EAACmD,EAAAC,QAAAI,GAAAuuB,IACD/xB,EAACmD,EAAAC,QAAAI,GAAAsuB,KAEbA,KAAApwB,YAAA8N,EAAAxE,OAAAud,WAAAiK,aACAT,KAAArwB,YAAA8N,EAAAxE,OAAAud,WAAAiK,iBAMA,MAAAC,GAAA,CACA9yB,SAEA,MAAA6P,EAAA1V,KACAsW,EAAAZ,EAAAY,IACApF,EAAAwE,EAAAxE,OAAA0nB,WACA,IAAA1nB,EAAA7I,KAAAqN,EAAAkjB,WAAAvwB,KAAAqN,EAAAkjB,WAAAjjB,KAAA,IAAAD,EAAAkjB,WAAAjjB,IAAA1P,OAAA,OACA,MAAA6Q,EAAApB,EAAAe,SAAAf,EAAAxE,OAAAuF,QAAAC,QAAAhB,EAAAe,QAAAG,OAAA3Q,OAAAyP,EAAAkB,OAAA3Q,OACA0P,EAAAD,EAAAkjB,WAAAjjB,IAEA,IAAAkjB,EACA,MAAAC,EAAApjB,EAAAxE,OAAA+L,KAAA9E,KAAAE,MAAAvB,EAAA,EAAApB,EAAAsK,cAAAtK,EAAAxE,OAAAyI,gBAAAjE,EAAAqB,SAAA9Q,OAcA,GAbAyP,EAAAxE,OAAA+L,MACA4b,EAAA1gB,KAAAE,MAAA3C,EAAAuF,YAAAvF,EAAAsK,cAAAtK,EAAAxE,OAAAyI,gBACAkf,EAAA/hB,EAAA,IAAApB,EAAAsK,eACA6Y,GAAA/hB,EAAA,EAAApB,EAAAsK,cAEA6Y,EAAAC,EAAA,IAAAD,GAAAC,GACAD,EAAA,eAAAnjB,EAAAxE,OAAA6nB,iBAAAF,EAAAC,EAAAD,IAEAA,EADK,qBAAAnjB,EAAA2E,UACL3E,EAAA2E,UAEA3E,EAAAuF,aAAA,EAGA,YAAA/J,EAAAjO,MAAAyS,EAAAkjB,WAAAI,SAAAtjB,EAAAkjB,WAAAI,QAAA/yB,OAAA,GACA,MAAA+yB,EAAAtjB,EAAAkjB,WAAAI,QACA,IAAAC,EACAC,EACAC,EAiBA,GAhBAjoB,EAAAkoB,iBACA1jB,EAAAkjB,WAAAS,WAAAL,EAAAzrB,GAAA,GAAAmI,EAAAI,eAAA,gCACAH,EAAAnJ,IAAAkJ,EAAAI,eAAA,oBAA+DJ,EAAAkjB,WAAAS,YAAAnoB,EAAAooB,mBAAA,QAC/DpoB,EAAAooB,mBAAA,QAAAvvB,IAAA2L,EAAA6H,gBACA7H,EAAAkjB,WAAAW,oBAAAV,EAAAnjB,EAAA6H,cACA7H,EAAAkjB,WAAAW,mBAAAroB,EAAAooB,mBAAA,EACA5jB,EAAAkjB,WAAAW,mBAAAroB,EAAAooB,mBAAA,EACW5jB,EAAAkjB,WAAAW,mBAAA,IACX7jB,EAAAkjB,WAAAW,mBAAA,IAGAN,EAAAJ,EAAAnjB,EAAAkjB,WAAAW,mBACAL,EAAAD,GAAA9gB,KAAAwS,IAAAqO,EAAA/yB,OAAAiL,EAAAooB,oBAAA,GACAH,GAAAD,EAAAD,GAAA,GAEAD,EAAAxxB,eAA6B0J,EAAAsoB,qBAA4BtoB,EAAAsoB,0BAAiCtoB,EAAAsoB,+BAAsCtoB,EAAAsoB,0BAAiCtoB,EAAAsoB,+BAAsCtoB,EAAAsoB,0BACvM7jB,EAAA1P,OAAA,EACA+yB,EAAArsB,KAAA,CAAAqH,EAAAylB,KACA,MAAAC,EAA0BxzB,EAACuzB,GAC3BE,EAAAD,EAAAl5B,QACAm5B,IAAAd,GACAa,EAAAxyB,SAAAgK,EAAAsoB,mBAEAtoB,EAAAkoB,iBACAO,GAAAV,GAAAU,GAAAT,GACAQ,EAAAxyB,YAAkCgK,EAAAsoB,0BAElCG,IAAAV,GACAS,EACAtrB,OACAlH,YAA6BgK,EAAAsoB,0BAC7BprB,OACAlH,YAA6BgK,EAAAsoB,+BAE7BG,IAAAT,GACAQ,EACA1rB,OACA9G,YAA6BgK,EAAAsoB,0BAC7BxrB,OACA9G,YAA6BgK,EAAAsoB,sCAItB,CACP,MAAAE,EAAAV,EAAAzrB,GAAAsrB,GAEA,GADAa,EAAAxyB,SAAAgK,EAAAsoB,mBACAtoB,EAAAkoB,eAAA,CACA,MAAAQ,EAAAZ,EAAAzrB,GAAA0rB,GACAY,EAAAb,EAAAzrB,GAAA2rB,GACA,QAAAlzB,EAAAizB,EAAkCjzB,GAAAkzB,EAAgBlzB,GAAA,EAClDgzB,EAAAzrB,GAAAvH,GAAAkB,YAAsCgK,EAAAsoB,0BAEtCI,EACAxrB,OACAlH,YAAyBgK,EAAAsoB,0BACzBprB,OACAlH,YAAyBgK,EAAAsoB,+BACzBK,EACA7rB,OACA9G,YAAyBgK,EAAAsoB,0BACzBxrB,OACA9G,YAAyBgK,EAAAsoB,gCAGzB,GAAAtoB,EAAAkoB,eAAA,CACA,MAAAU,EAAA3hB,KAAAwS,IAAAqO,EAAA/yB,OAAAiL,EAAAooB,mBAAA,GACAS,GAAArkB,EAAAkjB,WAAAS,WAAAS,EAAApkB,EAAAkjB,WAAA,cAAAO,EAAAzjB,EAAAkjB,WAAAS,WACAtG,EAAAzc,EAAA,eACA0iB,EAAAxsB,IAAAkJ,EAAAI,eAAAid,EAAA,SAAmEgH,QAOnE,GAJA,aAAA7oB,EAAAjO,OACA0S,EAAA/G,SAAmBsC,EAAA8oB,gBAAoBltB,KAAAoE,EAAA+oB,sBAAApB,EAAA,IACvCljB,EAAA/G,SAAmBsC,EAAAgpB,cAAkBptB,KAAAoE,EAAAipB,oBAAArB,KAErC,gBAAA5nB,EAAAjO,KAAA,CACA,IAAAm3B,EAEAA,EADAlpB,EAAAmpB,oBACA3kB,EAAAI,eAAA,wBAEAJ,EAAAI,eAAA,wBAEA,MAAAwkB,GAAAzB,EAAA,GAAAC,EACA,IAAAyB,EAAA,EACAC,EAAA,EACA,eAAAJ,EACAG,EAAAD,EAEAE,EAAAF,EAEA3kB,EAAA/G,SAAmBsC,EAAAupB,wBAA4BjyB,uCAA0C+xB,aAAkBC,MAAO7xB,WAAA+M,EAAAxE,OAAA2J,OAElH,WAAA3J,EAAAjO,MAAAiO,EAAAwpB,cACA/kB,EAAApP,KAAA2K,EAAAwpB,aAAAhlB,EAAAmjB,EAAA,EAAAC,IACApjB,EAAA4E,KAAA,mBAAA5E,EAAAC,EAAA,KAEAD,EAAA4E,KAAA,mBAAA5E,EAAAC,EAAA,IAEAA,EAAAD,EAAAxE,OAAAqJ,eAAA7E,EAAAyM,SAAA,0BAAAjR,EAAAinB,YAEAtyB,SAEA,MAAA6P,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAA0nB,WACA,IAAA1nB,EAAA7I,KAAAqN,EAAAkjB,WAAAvwB,KAAAqN,EAAAkjB,WAAAjjB,KAAA,IAAAD,EAAAkjB,WAAAjjB,IAAA1P,OAAA,OACA,MAAA6Q,EAAApB,EAAAe,SAAAf,EAAAxE,OAAAuF,QAAAC,QAAAhB,EAAAe,QAAAG,OAAA3Q,OAAAyP,EAAAkB,OAAA3Q,OAEA0P,EAAAD,EAAAkjB,WAAAjjB,IACA,IAAAglB,EAAA,GACA,eAAAzpB,EAAAjO,KAAA,CACA,MAAA23B,EAAAllB,EAAAxE,OAAA+L,KAAA9E,KAAAE,MAAAvB,EAAA,EAAApB,EAAAsK,cAAAtK,EAAAxE,OAAAyI,gBAAAjE,EAAAqB,SAAA9Q,OACA,QAAAD,EAAA,EAAqBA,EAAA40B,EAAqB50B,GAAA,EAC1CkL,EAAA2pB,aACAF,GAAAzpB,EAAA2pB,aAAAxvB,KAAAqK,EAAA1P,EAAAkL,EAAA4pB,aAEAH,OAAgCzpB,EAAA6pB,wBAA+B7pB,EAAA4pB,kBAAyB5pB,EAAA6pB,iBAGxFplB,EAAApP,KAAAo0B,GACAjlB,EAAAkjB,WAAAI,QAAArjB,EAAA/G,SAA+CsC,EAAA4pB,eAE/C,aAAA5pB,EAAAjO,OAEA03B,EADAzpB,EAAA8pB,eACA9pB,EAAA8pB,eAAA3vB,KAAAqK,EAAAxE,EAAA8oB,aAAA9oB,EAAAgpB,4BAEyChpB,EAAA8oB,wBACzC,sBAC0B9oB,EAAAgpB,sBAE1BvkB,EAAApP,KAAAo0B,IAEA,gBAAAzpB,EAAAjO,OAEA03B,EADAzpB,EAAA+pB,kBACA/pB,EAAA+pB,kBAAA5vB,KAAAqK,EAAAxE,EAAAupB,sCAEyCvpB,EAAAupB,gCAEzC9kB,EAAApP,KAAAo0B,IAEA,WAAAzpB,EAAAjO,MACAyS,EAAA4E,KAAA,mBAAA5E,EAAAkjB,WAAAjjB,IAAA,KAGA9P,OACA,MAAA6P,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAA0nB,WACA,IAAA1nB,EAAA7I,GAAA,OAEA,IAAAsN,EAAczP,EAACgL,EAAA7I,IACf,IAAAsN,EAAA1P,SAGAyP,EAAAxE,OAAA2d,mBACA,kBAAA3d,EAAA7I,IACAsN,EAAA1P,OAAA,GACA,IAAAyP,EAAAC,IAAA/G,KAAAsC,EAAA7I,IAAApC,SAEA0P,EAAAD,EAAAC,IAAA/G,KAAAsC,EAAA7I,KAGA,YAAA6I,EAAAjO,MAAAiO,EAAAgqB,WACAvlB,EAAAzO,SAAAgK,EAAAiqB,gBAGAxlB,EAAAzO,SAAAgK,EAAAkqB,cAAAlqB,EAAAjO,MAEA,YAAAiO,EAAAjO,MAAAiO,EAAAkoB,iBACAzjB,EAAAzO,YAAsBgK,EAAAkqB,gBAAuBlqB,EAAAjO,gBAC7CyS,EAAAkjB,WAAAW,mBAAA,EACAroB,EAAAooB,mBAAA,IACApoB,EAAAooB,mBAAA,IAGA,gBAAApoB,EAAAjO,MAAAiO,EAAAmpB,qBACA1kB,EAAAzO,SAAAgK,EAAAmqB,0BAGAnqB,EAAAgqB,WACAvlB,EAAAtS,GAAA,YAA0B6N,EAAA4pB,cAAmB,SAAAzxB,GAC7CA,EAAAod,iBACA,IAAAzS,EAAuB9N,EAAClG,MAAAQ,QAAAkV,EAAAxE,OAAAyI,eACxBjE,EAAAxE,OAAA+L,OAAAjJ,GAAA0B,EAAAsK,cACAtK,EAAA0J,QAAApL,KAIAtE,GAAA0C,OAAAsD,EAAAkjB,WAAA,CACAjjB,MACAtN,GAAAsN,EAAA,OAGA9P,UACA,MAAA6P,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAA0nB,WACA,IAAA1nB,EAAA7I,KAAAqN,EAAAkjB,WAAAvwB,KAAAqN,EAAAkjB,WAAAjjB,KAAA,IAAAD,EAAAkjB,WAAAjjB,IAAA1P,OAAA,OACA,MAAA0P,EAAAD,EAAAkjB,WAAAjjB,IAEAA,EAAAnO,YAAA0J,EAAAwnB,aACA/iB,EAAAnO,YAAA0J,EAAAkqB,cAAAlqB,EAAAjO,MACAyS,EAAAkjB,WAAAI,SAAAtjB,EAAAkjB,WAAAI,QAAAxxB,YAAA0J,EAAAsoB,mBACAtoB,EAAAgqB,WACAvlB,EAAAtL,IAAA,YAA2B6G,EAAA4pB,iBAK3B,IAAAQ,GAAA,CACAz5B,KAAA,aACAqP,OAAA,CACA0nB,WAAA,CACAvwB,GAAA,KACA0yB,cAAA,OACAG,WAAA,EACAzC,aAAA,EACAoC,aAAA,KACAI,kBAAA,KACAD,eAAA,KACAN,aAAA,KACAL,qBAAA,EACAp3B,KAAA,UACAm2B,gBAAA,EACAE,mBAAA,EACAW,sBAAAsB,KACApB,oBAAAoB,KACAT,YAAA,2BACAtB,kBAAA,kCACA4B,cAAA,qBACApB,aAAA,4BACAE,WAAA,0BACAxB,YAAA,2BACA+B,qBAAA,qCACAY,yBAAA,yCACAF,eAAA,8BACAhD,UAAA,2BAGAtyB,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAkjB,WAAA,CACAhK,KAAA+J,GAAA/J,KAAA7Z,KAAAW,GACA8lB,OAAA7C,GAAA6C,OAAAzmB,KAAAW,GACAsI,OAAA2a,GAAA3a,OAAAjJ,KAAAW,GACA0c,QAAAuG,GAAAvG,QAAArd,KAAAW,GACA6jB,mBAAA,MAIAl2B,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAAkjB,WAAAhK,OACAlZ,EAAAkjB,WAAA4C,SACA9lB,EAAAkjB,WAAA5a,UAEAnY,oBACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA+L,KACAvH,EAAAkjB,WAAA5a,SACO,qBAAAtI,EAAA2E,WACP3E,EAAAkjB,WAAA5a,UAGAnY,kBACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA+L,MACAvH,EAAAkjB,WAAA5a,UAGAnY,qBACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA+L,OACAvH,EAAAkjB,WAAA4C,SACA9lB,EAAAkjB,WAAA5a,WAGAnY,uBACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA+L,OACAvH,EAAAkjB,WAAA4C,SACA9lB,EAAAkjB,WAAA5a,WAGAnY,UACA,MAAA6P,EAAA1V,KACA0V,EAAAkjB,WAAAxG,WAEAvsB,MAAAwD,GACA,MAAAqM,EAAA1V,KAEA0V,EAAAxE,OAAA0nB,WAAAvwB,IACAqN,EAAAxE,OAAA0nB,WAAAH,aACA/iB,EAAAkjB,WAAAjjB,IAAA1P,OAAA,IACYC,EAACmD,EAAAC,QAAA5B,SAAAgO,EAAAxE,OAAA0nB,WAAAkC,cAEbplB,EAAAkjB,WAAAjjB,IAAA/N,YAAA8N,EAAAxE,OAAA0nB,WAAAF,gBAMA,MAAA+C,GAAA,CACA51B,eACA,MAAA6P,EAAA1V,KACA,IAAA0V,EAAAxE,OAAAwqB,UAAArzB,KAAAqN,EAAAgmB,UAAArzB,GAAA,OACA,MAAAqzB,UAAWA,EAAArlB,aAAAC,EAAA0F,YAAyCtG,GACpDimB,SACAA,EAAAC,YAAAC,UAAAlmB,OACK+lB,EACLxqB,EAAAwE,EAAAxE,OAAAwqB,UAEA,IAAAI,EAAAH,EACAI,GAAAH,EAAAD,GAAA3f,EACA1F,GACAylB,KACAA,EAAA,GACAD,EAAAH,EAAAI,EACAA,EAAA,IACOA,EAAAJ,EAAAC,IACPE,EAAAF,EAAAG,IAEKA,EAAA,GACLD,EAAAH,EAAAI,EACAA,EAAA,GACKA,EAAAJ,EAAAC,IACLE,EAAAF,EAAAG,GAEArmB,EAAAI,gBACUzD,GAAOU,aACjB8oB,EAAArzB,yBAAyCuzB,cAEzCF,EAAArzB,wBAAwCuzB,QAExCF,EAAA,GAAAn7B,MAAAiB,SAAkCm6B,QAExBzpB,GAAOU,aACjB8oB,EAAArzB,8BAA8CuzB,WAE9CF,EAAArzB,wBAAwCuzB,QAExCF,EAAA,GAAAn7B,MAAAgB,UAAmCo6B,OAEnC5qB,EAAA8qB,OACAr2B,aAAA+P,EAAAgmB,UAAApE,SACA3hB,EAAA,GAAAjV,MAAAu7B,QAAA,EACAvmB,EAAAgmB,UAAApE,QAAA5xB,WAAA,KACAiQ,EAAA,GAAAjV,MAAAu7B,QAAA,EACAtmB,EAAAhN,WAAA,MACO,OAGP9C,cAAA+C,GACA,MAAA8M,EAAA1V,KACA0V,EAAAxE,OAAAwqB,UAAArzB,IAAAqN,EAAAgmB,UAAArzB,IACAqN,EAAAgmB,UAAAG,QAAAlzB,WAAAC,IAEA/C,aACA,MAAA6P,EAAA1V,KACA,IAAA0V,EAAAxE,OAAAwqB,UAAArzB,KAAAqN,EAAAgmB,UAAArzB,GAAA,OAEA,MAAAqzB,UAAWA,GAAYhmB,GACvBmmB,QAAWA,EAAAlmB,OAAe+lB,EAE1BG,EAAA,GAAAn7B,MAAAiB,MAAA,GACAk6B,EAAA,GAAAn7B,MAAAgB,OAAA,GACA,MAAAk6B,EAAAlmB,EAAAI,eAAAH,EAAA,GAAAlK,YAAAkK,EAAA,GAAA/J,aAEAswB,EAAAxmB,EAAAO,KAAAP,EAAAmC,YACAskB,EAAAD,GAAAN,EAAAlmB,EAAAO,MACA,IAAA0lB,EAEAA,EADA,SAAAjmB,EAAAxE,OAAAwqB,UAAAC,SACAC,EAAAM,EAEAlmB,SAAAN,EAAAxE,OAAAwqB,UAAAC,SAAA,IAGAjmB,EAAAI,eACA+lB,EAAA,GAAAn7B,MAAAiB,SAAkCg6B,MAElCE,EAAA,GAAAn7B,MAAAgB,UAAmCi6B,MAInChmB,EAAA,GAAAjV,MAAA07B,QADAF,GAAA,EACA,OAEA,GAEAxmB,EAAAxE,OAAAmrB,gBACA1mB,EAAA,GAAAjV,MAAAu7B,QAAA,GAEAvsB,GAAA0C,OAAAspB,EAAA,CACAE,YACAM,UACAC,cACAR,aAEAD,EAAA/lB,IAAAD,EAAAxE,OAAAqJ,eAAA7E,EAAAyM,SAAA,0BAAAzM,EAAAxE,OAAAwqB,UAAAvD,YAEAtyB,gBAAAwD,GACA,MAAAqM,EAAA1V,MACA07B,UAAWA,EAAArlB,aAAAC,GAA+BZ,GAC1CC,IAAWA,EAAAgmB,WAAAC,aAA2BF,EAEtC,IAAAY,EAMAC,EAJAD,EADA5mB,EAAAI,eACA,eAAAzM,EAAApG,MAAA,cAAAoG,EAAApG,KAAAoG,EAAAmc,cAAA,GAAAC,MAAApc,EAAAoc,OAAApc,EAAAmzB,QAEA,eAAAnzB,EAAApG,MAAA,cAAAoG,EAAApG,KAAAoG,EAAAmc,cAAA,GAAAG,MAAAtc,EAAAsc,OAAAtc,EAAAozB,QAGAF,GAAA,EAAA5mB,EAAA9J,SAAA6J,EAAAI,eAAA,cAAA6lB,EAAA,IAAAC,EAAAD,GACAY,EAAApkB,KAAAK,IAAAL,KAAAwS,IAAA4R,EAAA,MACAjmB,IACAimB,EAAA,EAAAA,GAGA,MAAAnU,EAAA1S,EAAAkG,gBAAAlG,EAAAyG,eAAAzG,EAAAkG,gBAAA2gB,EAEA7mB,EAAAuG,eAAAmM,GACA1S,EAAA0I,aAAAgK,GACA1S,EAAA2H,oBACA3H,EAAA8G,uBAEA3W,YAAAwD,GACA,MAAAqM,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAAwqB,WACAA,UAAWA,EAAAvlB,cAAwBT,GACnCC,IAAWA,EAAAkmB,WAAeH,EAC1BhmB,EAAAgmB,UAAA1W,WAAA,EACA3b,EAAAod,iBACApd,EAAAqe,kBAEAvR,EAAAxN,WAAA,KACAkzB,EAAAlzB,WAAA,KACA+yB,EAAAgB,gBAAArzB,GAEA1D,aAAA+P,EAAAgmB,UAAAiB,aAEAhnB,EAAAhN,WAAA,GACAuI,EAAA8qB,MACArmB,EAAAnJ,IAAA,aAEAkJ,EAAA4E,KAAA,qBAAAjR,IAEAxD,WAAAwD,GACA,MAAAqM,EAAA1V,MACA07B,UAAWA,EAAAvlB,cAAwBT,GACnCC,IAAWA,EAAAkmB,WAAeH,EAE1BhmB,EAAAgmB,UAAA1W,YACA3b,EAAAod,eAAApd,EAAAod,iBACApd,EAAA2rB,aAAA,EACA0G,EAAAgB,gBAAArzB,GACA8M,EAAAxN,WAAA,GACAgN,EAAAhN,WAAA,GACAkzB,EAAAlzB,WAAA,GACA+M,EAAA4E,KAAA,oBAAAjR,KAEAxD,UAAAwD,GACA,MAAAqM,EAAA1V,KAEAkR,EAAAwE,EAAAxE,OAAAwqB,WACAA,UAAWA,GAAYhmB,GACvBC,IAAWA,GAAM+lB,EAEjBhmB,EAAAgmB,UAAA1W,YACAtP,EAAAgmB,UAAA1W,WAAA,EACA9T,EAAA8qB,OACAr2B,aAAA+P,EAAAgmB,UAAAiB,aACAjnB,EAAAgmB,UAAAiB,YAAAjtB,GAAAuR,SAAA,KACAtL,EAAAnJ,IAAA,aACAmJ,EAAAhN,WAAA,MACO,MAEP+M,EAAA4E,KAAA,mBAAAjR,GACA6H,EAAA0rB,eACAlnB,EAAAkL,mBAGA/a,kBACA,MAAA6P,EAAA1V,KACA,IAAA0V,EAAAxE,OAAAwqB,UAAArzB,GAAA,OACA,MAAAqzB,UACAA,EAAA5L,mBAAAC,qBAAA7e,UACKwE,EACLC,EAAA+lB,EAAA/lB,IACArM,EAAAqM,EAAA,GACAknB,KAA2BxqB,GAAOe,kBAAAlC,EAAAoa,mBAAA,CAA+CC,SAAA,EAAApiB,SAAA,GACjFiK,KAA4Bf,GAAOe,kBAAAlC,EAAAoa,mBAAA,CAA+CC,SAAA,EAAApiB,SAAA,GACzEkJ,GAAOE,OAKhBjJ,EAAAxF,iBAAAgsB,EAAAzE,MAAA3V,EAAAgmB,UAAAoB,YAAAD,GACAvzB,EAAAxF,iBAAAgsB,EAAAtE,KAAA9V,EAAAgmB,UAAAqB,WAAAF,GACAvzB,EAAAxF,iBAAAgsB,EAAArE,IAAA/V,EAAAgmB,UAAAsB,UAAA5pB,KANA9J,EAAAxF,iBAAAisB,EAAA1E,MAAA3V,EAAAgmB,UAAAoB,YAAAD,GACMl5B,EAAQG,iBAAAisB,EAAAvE,KAAA9V,EAAAgmB,UAAAqB,WAAAF,GACRl5B,EAAQG,iBAAAisB,EAAAtE,IAAA/V,EAAAgmB,UAAAsB,UAAA5pB,KAOdvN,mBACA,MAAA6P,EAAA1V,KACA,IAAA0V,EAAAxE,OAAAwqB,UAAArzB,GAAA,OACA,MAAAqzB,UACAA,EAAA5L,mBAAAC,qBAAA7e,UACKwE,EACLC,EAAA+lB,EAAA/lB,IACArM,EAAAqM,EAAA,GACAknB,KAA2BxqB,GAAOe,kBAAAlC,EAAAoa,mBAAA,CAA+CC,SAAA,EAAApiB,SAAA,GACjFiK,KAA4Bf,GAAOe,kBAAAlC,EAAAoa,mBAAA,CAA+CC,SAAA,EAAApiB,SAAA,GACzEkJ,GAAOE,OAKhBjJ,EAAAvF,oBAAA+rB,EAAAzE,MAAA3V,EAAAgmB,UAAAoB,YAAAD,GACAvzB,EAAAvF,oBAAA+rB,EAAAtE,KAAA9V,EAAAgmB,UAAAqB,WAAAF,GACAvzB,EAAAvF,oBAAA+rB,EAAArE,IAAA/V,EAAAgmB,UAAAsB,UAAA5pB,KANA9J,EAAAvF,oBAAAgsB,EAAA1E,MAAA3V,EAAAgmB,UAAAoB,YAAAD,GACMl5B,EAAQI,oBAAAgsB,EAAAvE,KAAA9V,EAAAgmB,UAAAqB,WAAAF,GACRl5B,EAAQI,oBAAAgsB,EAAAtE,IAAA/V,EAAAgmB,UAAAsB,UAAA5pB,KAOdvN,OACA,MAAA6P,EAAA1V,KACA,IAAA0V,EAAAxE,OAAAwqB,UAAArzB,GAAA,OACA,MAAAqzB,UAAWA,EAAA/lB,IAAAsnB,GAA4BvnB,EACvCxE,EAAAwE,EAAAxE,OAAAwqB,UAEA,IAAA/lB,EAAczP,EAACgL,EAAA7I,IACfqN,EAAAxE,OAAA2d,mBAAA,kBAAA3d,EAAA7I,IAAAsN,EAAA1P,OAAA,OAAAg3B,EAAAruB,KAAAsC,EAAA7I,IAAApC,SACA0P,EAAAsnB,EAAAruB,KAAAsC,EAAA7I,KAGA,IAAAwzB,EAAAlmB,EAAA/G,SAA+B8G,EAAAxE,OAAAwqB,UAAAwB,aAC/B,IAAArB,EAAA51B,SACA41B,EAAgB31B,iBAAiBwP,EAAAxE,OAAAwqB,UAAAwB,qBACjCvnB,EAAAlI,OAAAouB,IAGAnsB,GAAA0C,OAAAspB,EAAA,CACA/lB,MACAtN,GAAAsN,EAAA,GACAkmB,UACAsB,OAAAtB,EAAA,KAGA3qB,EAAAksB,WACA1B,EAAA2B,mBAGAx3B,UACA,MAAA6P,EAAA1V,KACA0V,EAAAgmB,UAAA4B,qBAIA,IAAAC,GAAA,CACA17B,KAAA,YACAqP,OAAA,CACAwqB,UAAA,CACArzB,GAAA,KACAszB,SAAA,OACAK,MAAA,EACAoB,WAAA,EACAR,eAAA,EACAzE,UAAA,wBACA+E,UAAA,0BAGAr3B,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAgmB,UAAA,CACA9M,KAAA6M,GAAA7M,KAAA7Z,KAAAW,GACA0c,QAAAqJ,GAAArJ,QAAArd,KAAAW,GACAD,WAAAgmB,GAAAhmB,WAAAV,KAAAW,GACA0I,aAAAqd,GAAArd,aAAArJ,KAAAW,GACAsF,cAAAygB,GAAAzgB,cAAAjG,KAAAW,GACA2nB,gBAAA5B,GAAA4B,gBAAAtoB,KAAAW,GACA4nB,iBAAA7B,GAAA6B,iBAAAvoB,KAAAW,GACAgnB,gBAAAjB,GAAAiB,gBAAA3nB,KAAAW,GACAonB,YAAArB,GAAAqB,YAAA/nB,KAAAW,GACAqnB,WAAAtB,GAAAsB,WAAAhoB,KAAAW,GACAsnB,UAAAvB,GAAAuB,UAAAjoB,KAAAW,GACAsP,WAAA,EACAsS,QAAA,KACAqF,YAAA,SAIAt5B,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAAgmB,UAAA9M,OACAlZ,EAAAgmB,UAAAjmB,aACAC,EAAAgmB,UAAAtd,gBAEAvY,SACA,MAAA6P,EAAA1V,KACA0V,EAAAgmB,UAAAjmB,cAEA5P,SACA,MAAA6P,EAAA1V,KACA0V,EAAAgmB,UAAAjmB,cAEA5P,iBACA,MAAA6P,EAAA1V,KACA0V,EAAAgmB,UAAAjmB,cAEA5P,eACA,MAAA6P,EAAA1V,KACA0V,EAAAgmB,UAAAtd,gBAEAvY,cAAA+C,GACA,MAAA8M,EAAA1V,KACA0V,EAAAgmB,UAAA1gB,cAAApS,IAEA/C,UACA,MAAA6P,EAAA1V,KACA0V,EAAAgmB,UAAAtJ,aAKA,MAAAoL,GAAA,CACA33B,aAAAwC,EAAA2T,GACA,MAAAtG,EAAA1V,MACAsW,IAAWA,GAAMZ,EAEjBC,EAAgBzP,EAACmC,GACjB6uB,EAAA5gB,GAAA,IAEAmnB,EAAA9nB,EAAA7N,KAAA,6BACA,IAAAwW,EAAA3I,EAAA7N,KAAA,0BACAyW,EAAA5I,EAAA7N,KAAA,0BACA,MAAAwyB,EAAA3kB,EAAA7N,KAAA,8BACAm0B,EAAAtmB,EAAA7N,KAAA,gCAwBA,GAtBAwW,GAAAC,GACAD,KAAA,IACAC,KAAA,KACK7I,EAAAI,gBACLwI,EAAAmf,EACAlf,EAAA,MAEAA,EAAAkf,EACAnf,EAAA,KAIAA,EADA,EAAA7X,QAAA,WACauP,SAAAsI,EAAA,IAAAtC,EAAAkb,QAEA5Y,EAAAtC,EAAAkb,MAGb3Y,EADA,EAAA9X,QAAA,WACauP,SAAAuI,EAAA,IAAAvC,QAEAuC,EAAAvC,MAGb,qBAAAigB,GAAA,OAAAA,EAAA,CACA,MAAAyB,EAAAzB,KAAA,MAAA9jB,KAAAuB,IAAAsC,IACArG,EAAA,GAAAjV,MAAAu7B,QAAAyB,EAEA,wBAAApD,GAAA,OAAAA,EACA3kB,EAAAnN,yBAAmC8V,MAAMC,eACpC,CACL,MAAAof,EAAArD,KAAA,MAAAniB,KAAAuB,IAAAsC,IACArG,EAAAnN,yBAAmC8V,MAAMC,iBAAiBof,QAG1D93B,eACA,MAAA6P,EAAA1V,MACA2V,IACAA,EAAAiB,SAAAoF,WAAAjF,YACKrB,EACLC,EAAAlR,SAAA,8EACAkI,KAAA,CAAAqH,EAAA3L,KACAqN,EAAAkoB,SAAAC,aAAAx1B,EAAA2T,KAEApF,EAAAjK,KAAA,CAAA2S,EAAAwe,KACA,IAAAniB,EAAAmiB,EAAA9hB,SACAtG,EAAAxE,OAAAyI,eAAA,YAAAjE,EAAAxE,OAAAoH,gBACAqD,GAAAxD,KAAAE,KAAAiH,EAAA,GAAAtD,GAAAjF,EAAA9Q,OAAA,IAEA0V,EAAAxD,KAAAwS,IAAAxS,KAAAK,IAAAmD,GAAA,MACMzV,EAAC43B,GAAAlvB,KAAA,8EACPjC,KAAA,CAAAqH,EAAA3L,KACAqN,EAAAkoB,SAAAC,aAAAx1B,EAAAsT,QAIA9V,cAAA+C,EAAA5I,KAAAkR,OAAA2J,OACA,MAAAnF,EAAA1V,MACA2V,IAAWA,GAAMD,EACjBC,EAAA/G,KAAA,8EACAjC,KAAA,CAAAqH,EAAA+pB,KACA,MAAAC,EAA4B93B,EAAC63B,GAC7B,IAAAE,EAAAjoB,SAAAgoB,EAAAl2B,KAAA,sCAAAc,EACA,IAAAA,IAAAq1B,EAAA,GACAD,EAAAr1B,WAAAs1B,OAKA,IAAAC,GAAA,CACAr8B,KAAA,WACAqP,OAAA,CACA0sB,SAAA,CACAlnB,SAAA,IAGA7Q,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAkoB,SAAA,CACAC,aAAAL,GAAAK,aAAA9oB,KAAAW,GACA0I,aAAAof,GAAApf,aAAArJ,KAAAW,GACAsF,cAAAwiB,GAAAxiB,cAAAjG,KAAAW,OAIArS,GAAA,CACAwC,aACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA0sB,SAAAlnB,UACAhB,EAAAxE,OAAAuJ,qBAAA,EACA/E,EAAAwW,eAAAzR,qBAAA,IAEA5U,OACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA0sB,UACAloB,EAAAkoB,SAAAxf,gBAEAvY,eACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA0sB,UACAloB,EAAAkoB,SAAAxf,gBAEAvY,cAAA+C,GACA,MAAA8M,EAAA1V,KACA0V,EAAAxE,OAAA0sB,UACAloB,EAAAkoB,SAAA5iB,cAAApS,MAKA,MAAAu1B,GAAA,CAEAt4B,0BAAAwD,GACA,GAAAA,EAAAmc,cAAAvf,OAAA,WACA,MAAAm4B,EAAA/0B,EAAAmc,cAAA,GAAAC,MACA4Y,EAAAh1B,EAAAmc,cAAA,GAAAG,MACA2Y,EAAAj1B,EAAAmc,cAAA,GAAAC,MACA8Y,EAAAl1B,EAAAmc,cAAA,GAAAG,MACAqD,EAAA7Q,KAAAiP,MAAAkX,EAAAF,IAAA,GAAAG,EAAAF,IAAA,GACA,OAAArV,GAGAnjB,eAAAwD,GACA,MAAAqM,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAAstB,KACAA,EAAA9oB,EAAA8oB,MACAC,QAAWA,GAAUD,EAGrB,GAFAA,EAAAE,oBAAA,EACAF,EAAAG,kBAAA,GACStsB,GAAOmB,SAAA,CAChB,kBAAAnK,EAAApG,MAAA,eAAAoG,EAAApG,MAAAoG,EAAAmc,cAAAvf,OAAA,EACA,OAEAu4B,EAAAE,oBAAA,EACAD,EAAAG,WAAAT,GAAAU,0BAAAx1B,GAEAo1B,EAAA9K,UAAA8K,EAAA9K,SAAA1tB,SACAw4B,EAAA9K,SAAyBztB,EAACmD,EAAAC,QAAAqF,QAAA,iBAC1B,IAAA8vB,EAAA9K,SAAA1tB,SAAAw4B,EAAA9K,SAAAje,EAAAkB,OAAArJ,GAAAmI,EAAAuF,cACAwjB,EAAAK,SAAAL,EAAA9K,SAAA/kB,KAAA,oBACA6vB,EAAAM,aAAAN,EAAAK,SAAApwB,WAAyDwC,EAAA8tB,kBACzDP,EAAAQ,SAAAR,EAAAM,aAAAj3B,KAAA,qBAAAoJ,EAAA+tB,SACA,IAAAR,EAAAM,aAAA94B,SAKAw4B,EAAAK,SAAAn2B,WAAA,GACA+M,EAAA8oB,KAAAU,WAAA,GALAT,EAAAK,cAAA/0B,GAOAlE,gBAAAwD,GACA,MAAAqM,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAAstB,KACAA,EAAA9oB,EAAA8oB,MACAC,QAAWA,GAAUD,EACrB,IAASnsB,GAAOmB,SAAA,CAChB,iBAAAnK,EAAApG,MAAA,cAAAoG,EAAApG,MAAAoG,EAAAmc,cAAAvf,OAAA,EACA,OAEAu4B,EAAAG,kBAAA,EACAF,EAAAU,UAAAhB,GAAAU,0BAAAx1B,GAEAo1B,EAAAK,UAAA,IAAAL,EAAAK,SAAA74B,SACQoM,GAAOmB,SACfkC,EAAA8oB,KAAAlE,MAAAjxB,EAAAixB,MAAAkE,EAAAb,aAEAa,EAAAlE,MAAAmE,EAAAU,UAAAV,EAAAG,WAAAJ,EAAAb,aAEAa,EAAAlE,MAAAmE,EAAAQ,WACAT,EAAAlE,MAAAmE,EAAAQ,SAAA,GAAAT,EAAAlE,MAAAmE,EAAAQ,SAAA,QAEAT,EAAAlE,MAAAppB,EAAAkuB,WACAZ,EAAAlE,MAAAppB,EAAAkuB,SAAA,GAAAluB,EAAAkuB,SAAAZ,EAAAlE,MAAA,QAEAmE,EAAAK,SAAAt2B,sCAA2Dg2B,EAAAlE,YAE3Dz0B,aAAAwD,GACA,MAAAqM,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAAstB,KACAA,EAAA9oB,EAAA8oB,MACAC,QAAWA,GAAUD,EACrB,IAASnsB,GAAOmB,SAAA,CAChB,IAAAgrB,EAAAE,qBAAAF,EAAAG,iBACA,OAEA,gBAAAt1B,EAAApG,MAAA,aAAAoG,EAAApG,MAAAoG,EAAAg2B,eAAAp5B,OAAA,IAA6Fkd,GAAMI,QACnG,OAEAib,EAAAE,oBAAA,EACAF,EAAAG,kBAAA,EAEAF,EAAAK,UAAA,IAAAL,EAAAK,SAAA74B,SACAu4B,EAAAlE,MAAAniB,KAAAK,IAAAL,KAAAwS,IAAA6T,EAAAlE,MAAAmE,EAAAQ,UAAA/tB,EAAAkuB,UACAX,EAAAK,SAAAn2B,WAAA+M,EAAAxE,OAAA2J,OAAArS,sCAA2Fg2B,EAAAlE,UAC3FkE,EAAAb,aAAAa,EAAAlE,MACAkE,EAAAU,WAAA,EACA,IAAAV,EAAAlE,QAAAmE,EAAA9K,cAAA5pB,KAEAlE,aAAAwD,GACA,MAAAqM,EAAA1V,KACAw+B,EAAA9oB,EAAA8oB,MACAC,QAAWA,EAAA5Q,SAAiB2Q,EAC5BC,EAAAK,UAAA,IAAAL,EAAAK,SAAA74B,SACA4nB,EAAA7I,YACQ7B,GAAMI,SAAAla,EAAAod,iBACdoH,EAAA7I,WAAA,EACA6I,EAAAyR,aAAAhhB,EAAA,eAAAjV,EAAApG,KAAAoG,EAAAmc,cAAA,GAAAC,MAAApc,EAAAoc,MACAoI,EAAAyR,aAAA/gB,EAAA,eAAAlV,EAAApG,KAAAoG,EAAAmc,cAAA,GAAAG,MAAAtc,EAAAsc,SAEA9f,YAAAwD,GACA,MAAAqM,EAAA1V,KACAw+B,EAAA9oB,EAAA8oB,MACAC,QAAWA,EAAA5Q,QAAA5E,YAA2BuV,EACtC,IAAAC,EAAAK,UAAA,IAAAL,EAAAK,SAAA74B,OAAA,OAEA,GADAyP,EAAA2P,YAAA,GACAwI,EAAA7I,YAAAyZ,EAAA9K,SAAA,OAEA9F,EAAA5I,UACA4I,EAAAlsB,MAAA88B,EAAAK,SAAA,GAAArzB,YACAoiB,EAAAnsB,OAAA+8B,EAAAK,SAAA,GAAAlzB,aACAiiB,EAAAjI,OAAAlW,GAAAuO,aAAAwgB,EAAAM,aAAA,WACAlR,EAAAhI,OAAAnW,GAAAuO,aAAAwgB,EAAAM,aAAA,WACAN,EAAAc,WAAAd,EAAA9K,SAAA,GAAAloB,YACAgzB,EAAAe,YAAAf,EAAA9K,SAAA,GAAA/nB,aACA6yB,EAAAM,aAAAp2B,WAAA,GACA+M,EAAAY,MACAuX,EAAAjI,QAAAiI,EAAAjI,OACAiI,EAAAhI,QAAAgI,EAAAhI,SAIA,MAAA4Z,EAAA5R,EAAAlsB,MAAA68B,EAAAlE,MACAoF,EAAA7R,EAAAnsB,OAAA88B,EAAAlE,MAEA,KAAAmF,EAAAhB,EAAAc,YAAAG,EAAAjB,EAAAe,aAAA,CAUA,GARA3R,EAAA8R,KAAAxnB,KAAAwS,IAAA8T,EAAAc,WAAA,EAAAE,EAAA,KACA5R,EAAA+R,MAAA/R,EAAA8R,KACA9R,EAAAgS,KAAA1nB,KAAAwS,IAAA8T,EAAAe,YAAA,EAAAE,EAAA,KACA7R,EAAAiS,MAAAjS,EAAAgS,KAEAhS,EAAAkS,eAAAzhB,EAAA,cAAAjV,EAAApG,KAAAoG,EAAAmc,cAAA,GAAAC,MAAApc,EAAAoc,MACAoI,EAAAkS,eAAAxhB,EAAA,cAAAlV,EAAApG,KAAAoG,EAAAmc,cAAA,GAAAG,MAAAtc,EAAAsc,OAEAkI,EAAA5I,UAAAuZ,EAAAU,UAAA,CACA,GACAxpB,EAAAI,iBAEAqC,KAAAC,MAAAyV,EAAA8R,QAAAxnB,KAAAC,MAAAyV,EAAAjI,SAAAiI,EAAAkS,eAAAzhB,EAAAuP,EAAAyR,aAAAhhB,GACAnG,KAAAC,MAAAyV,EAAA+R,QAAAznB,KAAAC,MAAAyV,EAAAjI,SAAAiI,EAAAkS,eAAAzhB,EAAAuP,EAAAyR,aAAAhhB,GAIA,YADAuP,EAAA7I,WAAA,GAEO,IACPtP,EAAAI,iBAEAqC,KAAAC,MAAAyV,EAAAgS,QAAA1nB,KAAAC,MAAAyV,EAAAhI,SAAAgI,EAAAkS,eAAAxhB,EAAAsP,EAAAyR,aAAA/gB,GACApG,KAAAC,MAAAyV,EAAAiS,QAAA3nB,KAAAC,MAAAyV,EAAAhI,SAAAgI,EAAAkS,eAAAxhB,EAAAsP,EAAAyR,aAAA/gB,GAIA,YADAsP,EAAA7I,WAAA,GAIA3b,EAAAod,iBACApd,EAAAqe,kBAEAmG,EAAA5I,SAAA,EACA4I,EAAAtI,SAAAsI,EAAAkS,eAAAzhB,EAAAuP,EAAAyR,aAAAhhB,EAAAuP,EAAAjI,OACAiI,EAAAnI,SAAAmI,EAAAkS,eAAAxhB,EAAAsP,EAAAyR,aAAA/gB,EAAAsP,EAAAhI,OAEAgI,EAAAtI,SAAAsI,EAAA8R,OACA9R,EAAAtI,SAAAsI,EAAA8R,KAAA,GAAA9R,EAAA8R,KAAA9R,EAAAtI,SAAA,QAEAsI,EAAAtI,SAAAsI,EAAA+R,OACA/R,EAAAtI,SAAAsI,EAAA+R,KAAA,GAAA/R,EAAAtI,SAAAsI,EAAA+R,KAAA,QAGA/R,EAAAnI,SAAAmI,EAAAgS,OACAhS,EAAAnI,SAAAmI,EAAAgS,KAAA,GAAAhS,EAAAgS,KAAAhS,EAAAnI,SAAA,QAEAmI,EAAAnI,SAAAmI,EAAAiS,OACAjS,EAAAnI,SAAAmI,EAAAiS,KAAA,GAAAjS,EAAAnI,SAAAmI,EAAAiS,KAAA,QAIA7W,EAAA+W,gBAAA/W,EAAA+W,cAAAnS,EAAAkS,eAAAzhB,GACA2K,EAAAgX,gBAAAhX,EAAAgX,cAAApS,EAAAkS,eAAAxhB,GACA0K,EAAAiX,WAAAjX,EAAAiX,SAAA16B,KAAAsK,OACAmZ,EAAA3K,GAAAuP,EAAAkS,eAAAzhB,EAAA2K,EAAA+W,gBAAAx6B,KAAAsK,MAAAmZ,EAAAiX,UAAA,EACAjX,EAAA1K,GAAAsP,EAAAkS,eAAAxhB,EAAA0K,EAAAgX,gBAAAz6B,KAAAsK,MAAAmZ,EAAAiX,UAAA,EACA/nB,KAAAuB,IAAAmU,EAAAkS,eAAAzhB,EAAA2K,EAAA+W,eAAA,IAAA/W,EAAA3K,EAAA,GACAnG,KAAAuB,IAAAmU,EAAAkS,eAAAxhB,EAAA0K,EAAAgX,eAAA,IAAAhX,EAAA1K,EAAA,GACA0K,EAAA+W,cAAAnS,EAAAkS,eAAAzhB,EACA2K,EAAAgX,cAAApS,EAAAkS,eAAAxhB,EACA0K,EAAAiX,SAAA16B,KAAAsK,MAEA2uB,EAAAM,aAAAv2B,yBAAkDqlB,EAAAtI,eAAqBsI,EAAAnI,mBAEvE7f,aACA,MAAA6P,EAAA1V,KACAw+B,EAAA9oB,EAAA8oB,MACAC,QAAWA,EAAA5Q,QAAA5E,YAA2BuV,EACtC,IAAAC,EAAAK,UAAA,IAAAL,EAAAK,SAAA74B,OAAA,OACA,IAAA4nB,EAAA7I,YAAA6I,EAAA5I,QAGA,OAFA4I,EAAA7I,WAAA,OACA6I,EAAA5I,SAAA,GAGA4I,EAAA7I,WAAA,EACA6I,EAAA5I,SAAA,EACA,IAAAkb,EAAA,IACAC,EAAA,IACA,MAAAC,EAAApX,EAAA3K,EAAA6hB,EACAG,EAAAzS,EAAAtI,SAAA8a,EACAE,EAAAtX,EAAA1K,EAAA6hB,EACAI,EAAA3S,EAAAnI,SAAA6a,EAGA,IAAAtX,EAAA3K,IAAA6hB,EAAAhoB,KAAAuB,KAAA4mB,EAAAzS,EAAAtI,UAAA0D,EAAA3K,IACA,IAAA2K,EAAA1K,IAAA6hB,EAAAjoB,KAAAuB,KAAA8mB,EAAA3S,EAAAnI,UAAAuD,EAAA1K,IACA,MAAA6K,EAAAjR,KAAAK,IAAA2nB,EAAAC,GAEAvS,EAAAtI,SAAA+a,EACAzS,EAAAnI,SAAA8a,EAGA,MAAAf,EAAA5R,EAAAlsB,MAAA68B,EAAAlE,MACAoF,EAAA7R,EAAAnsB,OAAA88B,EAAAlE,MACAzM,EAAA8R,KAAAxnB,KAAAwS,IAAA8T,EAAAc,WAAA,EAAAE,EAAA,KACA5R,EAAA+R,MAAA/R,EAAA8R,KACA9R,EAAAgS,KAAA1nB,KAAAwS,IAAA8T,EAAAe,YAAA,EAAAE,EAAA,KACA7R,EAAAiS,MAAAjS,EAAAgS,KACAhS,EAAAtI,SAAApN,KAAAK,IAAAL,KAAAwS,IAAAkD,EAAAtI,SAAAsI,EAAA+R,MAAA/R,EAAA8R,MACA9R,EAAAnI,SAAAvN,KAAAK,IAAAL,KAAAwS,IAAAkD,EAAAnI,SAAAmI,EAAAiS,MAAAjS,EAAAgS,MAEApB,EAAAM,aAAAp2B,WAAAygB,GAAA5gB,yBAA+EqlB,EAAAtI,eAAqBsI,EAAAnI,kBAEpG7f,kBACA,MAAA6P,EAAA1V,KACAw+B,EAAA9oB,EAAA8oB,MACAC,QAAWA,GAAUD,EACrBC,EAAA9K,UAAAje,EAAA6H,gBAAA7H,EAAAuF,cACAwjB,EAAAK,SAAAt2B,UAAA,+BACAi2B,EAAAM,aAAAv2B,UAAA,sBACAi2B,EAAA9K,cAAA5pB,EACA00B,EAAAK,cAAA/0B,EACA00B,EAAAM,kBAAAh1B,EAEAy0B,EAAAlE,MAAA,EACAkE,EAAAb,aAAA,IAIA93B,OAAAwD,GACA,MAAAqM,EAAA1V,KACAw+B,EAAA9oB,EAAA8oB,KAEAA,EAAAlE,OAAA,IAAAkE,EAAAlE,MAEAkE,EAAAiC,MAGAjC,EAAAkC,GAAAr3B,IAGAxD,GAAAwD,GACA,MAAAqM,EAAA1V,KAEAw+B,EAAA9oB,EAAA8oB,KACAttB,EAAAwE,EAAAxE,OAAAstB,MACAC,QAAWA,EAAA5Q,SAAiB2Q,EAO5B,GALAC,EAAA9K,WACA8K,EAAA9K,SAAAje,EAAAmI,aAA+C3X,EAACwP,EAAAmI,cAAAnI,EAAAkB,OAAArJ,GAAAmI,EAAAuF,aAChDwjB,EAAAK,SAAAL,EAAA9K,SAAA/kB,KAAA,oBACA6vB,EAAAM,aAAAN,EAAAK,SAAApwB,WAAyDwC,EAAA8tB,oBAEzDP,EAAAK,UAAA,IAAAL,EAAAK,SAAA74B,OAAA,OAIA,IAAA06B,EACAC,EACAC,EACAC,EACA5Z,EACAC,EACA4Z,EACAC,EACAC,EACAC,EACAzB,EACAC,EACAyB,EACAC,EACAC,EACAC,EACA/B,EACAC,EAnBAf,EAAA9K,SAAAzsB,YAAiCgK,EAAAqwB,oBAqBjC,qBAAA1T,EAAAyR,aAAAhhB,GAAAjV,GACAs3B,EAAA,aAAAt3B,EAAApG,KAAAoG,EAAAg2B,eAAA,GAAA5Z,MAAApc,EAAAoc,MACAmb,EAAA,aAAAv3B,EAAApG,KAAAoG,EAAAg2B,eAAA,GAAA1Z,MAAAtc,EAAAsc,QAEAgb,EAAA9S,EAAAyR,aAAAhhB,EACAsiB,EAAA/S,EAAAyR,aAAA/gB,GAGAigB,EAAAlE,MAAAmE,EAAAM,aAAAj3B,KAAA,qBAAAoJ,EAAA+tB,SACAT,EAAAb,aAAAc,EAAAM,aAAAj3B,KAAA,qBAAAoJ,EAAA+tB,SACA51B,GACAk2B,EAAAd,EAAA9K,SAAA,GAAAloB,YACA+zB,EAAAf,EAAA9K,SAAA,GAAA/nB,aACAi1B,EAAApC,EAAA9K,SAAA9nB,SAAAU,KACAu0B,EAAArC,EAAA9K,SAAA9nB,SAAAS,IACA4a,EAAA2Z,EAAAtB,EAAA,EAAAoB,EACAxZ,EAAA2Z,EAAAtB,EAAA,EAAAoB,EAEAK,EAAAxC,EAAAK,SAAA,GAAArzB,YACAy1B,EAAAzC,EAAAK,SAAA,GAAAlzB,aACA6zB,EAAAwB,EAAAzC,EAAAlE,MACAoF,EAAAwB,EAAA1C,EAAAlE,MAEA6G,EAAAhpB,KAAAwS,IAAA4U,EAAA,EAAAE,EAAA,KACA2B,EAAAjpB,KAAAwS,IAAA6U,EAAA,EAAAE,EAAA,KACA2B,GAAAF,EACAG,GAAAF,EAEAL,EAAA7Z,EAAAsX,EAAAlE,MACA0G,EAAA7Z,EAAAqX,EAAAlE,MAEAyG,EAAAI,IACAJ,EAAAI,GAEAJ,EAAAM,IACAN,EAAAM,GAGAL,EAAAI,IACAJ,EAAAI,GAEAJ,EAAAM,IACAN,EAAAM,KAGAP,EAAA,EACAC,EAAA,GAEAvC,EAAAM,aAAAp2B,WAAA,KAAAH,yBAAkEu4B,QAAiBC,UACnFvC,EAAAK,SAAAn2B,WAAA,KAAAH,sCAA2Eg2B,EAAAlE,WAE3Ez0B,MACA,MAAA6P,EAAA1V,KAEAw+B,EAAA9oB,EAAA8oB,KACAttB,EAAAwE,EAAAxE,OAAAstB,MACAC,QAAWA,GAAUD,EAErBC,EAAA9K,WACA8K,EAAA9K,SAAAje,EAAAmI,aAA+C3X,EAACwP,EAAAmI,cAAAnI,EAAAkB,OAAArJ,GAAAmI,EAAAuF,aAChDwjB,EAAAK,SAAAL,EAAA9K,SAAA/kB,KAAA,oBACA6vB,EAAAM,aAAAN,EAAAK,SAAApwB,WAAyDwC,EAAA8tB,mBAEzDP,EAAAK,UAAA,IAAAL,EAAAK,SAAA74B,SAEAu4B,EAAAlE,MAAA,EACAkE,EAAAb,aAAA,EACAc,EAAAM,aAAAp2B,WAAA,KAAAH,UAAA,sBACAi2B,EAAAK,SAAAn2B,WAAA,KAAAH,UAAA,+BACAi2B,EAAA9K,SAAAnsB,eAAoC0J,EAAAqwB,oBACpC9C,EAAA9K,cAAA5pB,IAGAlE,SACA,MAAA6P,EAAA1V,KACAw+B,EAAA9oB,EAAA8oB,KACA,GAAAA,EAAA9nB,QAAA,OACA8nB,EAAA9nB,SAAA,EAEA,MAAAtD,IAAA,eAAAsC,EAAAuV,YAAAI,QAAyEhZ,GAAOe,kBAAAsC,EAAAxE,OAAAoa,mBAAA,CAAsDC,SAAA,EAAApiB,SAAA,GAG9HkJ,GAAOmB,UACfkC,EAAAS,WAAA9S,GAAA,+BAAAm7B,EAAAgD,eAAApuB,GACAsC,EAAAS,WAAA9S,GAAA,gCAAAm7B,EAAAiD,gBAAAruB,GACAsC,EAAAS,WAAA9S,GAAA,6BAAAm7B,EAAAkD,aAAAtuB,IACK,eAAAsC,EAAAuV,YAAAI,QACL3V,EAAAS,WAAA9S,GAAAqS,EAAAuV,YAAAI,MAAA,gBAAAmT,EAAAgD,eAAApuB,GACAsC,EAAAS,WAAA9S,GAAAqS,EAAAuV,YAAAO,KAAA,gBAAAgT,EAAAiD,gBAAAruB,GACAsC,EAAAS,WAAA9S,GAAAqS,EAAAuV,YAAAQ,IAAA,gBAAA+S,EAAAkD,aAAAtuB,IAIAsC,EAAAS,WAAA9S,GAAAqS,EAAAuV,YAAAO,SAAsD9V,EAAAxE,OAAAstB,KAAAQ,iBAAkCR,EAAAzX,cAExFlhB,UACA,MAAA6P,EAAA1V,KACAw+B,EAAA9oB,EAAA8oB,KACA,IAAAA,EAAA9nB,QAAA,OAEAhB,EAAA8oB,KAAA9nB,SAAA,EAEA,MAAAtD,IAAA,eAAAsC,EAAAuV,YAAAI,QAAyEhZ,GAAOe,kBAAAsC,EAAAxE,OAAAoa,mBAAA,CAAsDC,SAAA,EAAApiB,SAAA,GAG9HkJ,GAAOmB,UACfkC,EAAAS,WAAA9L,IAAA,+BAAAm0B,EAAAgD,eAAApuB,GACAsC,EAAAS,WAAA9L,IAAA,gCAAAm0B,EAAAiD,gBAAAruB,GACAsC,EAAAS,WAAA9L,IAAA,6BAAAm0B,EAAAkD,aAAAtuB,IACK,eAAAsC,EAAAuV,YAAAI,QACL3V,EAAAS,WAAA9L,IAAAqL,EAAAuV,YAAAI,MAAA,gBAAAmT,EAAAgD,eAAApuB,GACAsC,EAAAS,WAAA9L,IAAAqL,EAAAuV,YAAAO,KAAA,gBAAAgT,EAAAiD,gBAAAruB,GACAsC,EAAAS,WAAA9L,IAAAqL,EAAAuV,YAAAQ,IAAA,gBAAA+S,EAAAkD,aAAAtuB,IAIAsC,EAAAS,WAAA9L,IAAAqL,EAAAuV,YAAAO,SAAuD9V,EAAAxE,OAAAstB,KAAAQ,iBAAkCR,EAAAzX,eAIzF,IAAA4a,GAAA,CACA9/B,KAAA,OACAqP,OAAA,CACAstB,KAAA,CACA9nB,SAAA,EACAuoB,SAAA,EACAG,SAAA,EACAv3B,QAAA,EACAm3B,eAAA,wBACAuC,iBAAA,wBAGA17B,SACA,MAAA6P,EAAA1V,KACAw+B,EAAA,CACA9nB,SAAA,EACA4jB,MAAA,EACAqD,aAAA,EACAuB,WAAA,EACAT,QAAA,CACA9K,cAAA5pB,EACAw1B,gBAAAx1B,EACAy1B,iBAAAz1B,EACA+0B,cAAA/0B,EACAg1B,kBAAAh1B,EACAk1B,SAAA,GAEApR,MAAA,CACA7I,eAAAjb,EACAkb,aAAAlb,EACAwb,cAAAxb,EACA2b,cAAA3b,EACA41B,UAAA51B,EACA81B,UAAA91B,EACA61B,UAAA71B,EACA+1B,UAAA/1B,EACApI,WAAAoI,EACArI,YAAAqI,EACA6b,YAAA7b,EACA8b,YAAA9b,EACAu1B,aAAA,GACAS,eAAA,IAEA9W,SAAA,CACA3K,OAAAvU,EACAwU,OAAAxU,EACAi2B,mBAAAj2B,EACAk2B,mBAAAl2B,EACAm2B,cAAAn2B,IAGA,+HAAAjD,MAAA,KAAA0I,QAAAC,IACA+uB,EAAA/uB,GAAA0uB,GAAA1uB,GAAAsF,KAAAW,KAEAhG,GAAA0C,OAAAsD,EAAA,CACA8oB,UAGAn7B,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAstB,KAAA9nB,SACAhB,EAAA8oB,KAAArJ,UAGAtvB,UACA,MAAA6P,EAAA1V,KACA0V,EAAA8oB,KAAApJ,WAEAvvB,WAAAwD,GACA,MAAAqM,EAAA1V,KACA0V,EAAA8oB,KAAA9nB,SACAhB,EAAA8oB,KAAA/Z,aAAApb,IAEAxD,SAAAwD,GACA,MAAAqM,EAAA1V,KACA0V,EAAA8oB,KAAA9nB,SACAhB,EAAA8oB,KAAAlW,WAAAjf,IAEAxD,UAAAwD,GACA,MAAAqM,EAAA1V,KACA0V,EAAAxE,OAAAstB,KAAA9nB,SAAAhB,EAAA8oB,KAAA9nB,SAAAhB,EAAAxE,OAAAstB,KAAA32B,QACA6N,EAAA8oB,KAAA32B,OAAAwB,IAGAxD,gBACA,MAAA6P,EAAA1V,KACA0V,EAAA8oB,KAAA9nB,SAAAhB,EAAAxE,OAAAstB,KAAA9nB,SACAhB,EAAA8oB,KAAAoD,qBAMA,MAAAC,GAAA,CACAh8B,YAAAmO,EAAA8tB,GAAA,GACA,MAAApsB,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAAkiB,KACA,wBAAApf,EAAA,OACA,OAAA0B,EAAAkB,OAAA3Q,OAAA,OACA,MAAAuQ,EAAAd,EAAAe,SAAAf,EAAAxE,OAAAuF,QAAAC,QAEAid,EAAAnd,EACAd,EAAAS,WAAA1R,aAAuCiR,EAAAxE,OAAA2F,uCAAqD7C,OAC5F0B,EAAAkB,OAAArJ,GAAAyG,GAEA,IAAA+tB,EAAApO,EAAA/kB,SAAoCsC,EAAA8wB,qBAA4B9wB,EAAA+wB,qBAA4B/wB,EAAAgxB,kBAC5FvO,EAAAjsB,SAAAwJ,EAAA8wB,eAAArO,EAAAjsB,SAAAwJ,EAAA+wB,cAAAtO,EAAAjsB,SAAAwJ,EAAAgxB,gBACAH,IAAAx6B,IAAAosB,EAAA,KAEA,IAAAoO,EAAA97B,QAEA87B,EAAAp1B,KAAA,CAAAw1B,EAAA3U,KACA,MAAAsR,EAAuB54B,EAACsnB,GACxBsR,EAAA53B,SAAAgK,EAAAgxB,cAEA,MAAAE,EAAAtD,EAAAh3B,KAAA,mBACA2lB,EAAAqR,EAAAh3B,KAAA,YACA4lB,EAAAoR,EAAAh3B,KAAA,eACA6lB,EAAAmR,EAAAh3B,KAAA,cAEA4N,EAAA6X,UAAAuR,EAAA,GAAArR,GAAA2U,EAAA1U,EAAAC,GAAA,OACA,wBAAAjY,GAAA,OAAAA,aAAAxE,UAAAwE,EAAAmK,UAAA,CAqBA,GApBAuiB,GACAtD,EAAAtyB,IAAA,2BAAmD41B,OACnDtD,EAAA32B,WAAA,qBAEAulB,IACAoR,EAAAh3B,KAAA,SAAA4lB,GACAoR,EAAA32B,WAAA,gBAEAwlB,IACAmR,EAAAh3B,KAAA,QAAA6lB,GACAmR,EAAA32B,WAAA,eAEAslB,IACAqR,EAAAh3B,KAAA,MAAA2lB,GACAqR,EAAA32B,WAAA,cAIA22B,EAAA53B,SAAAgK,EAAA+wB,aAAAz6B,YAAA0J,EAAAgxB,cACAvO,EAAA/kB,SAA0BsC,EAAAmxB,kBAAsB56B,SAChDiO,EAAAxE,OAAA+L,MAAA6kB,EAAA,CACA,MAAAQ,EAAA3O,EAAA7rB,KAAA,2BACA,GAAA6rB,EAAAjsB,SAAAgO,EAAAxE,OAAAgM,qBAAA,CACA,MAAAqlB,EAAA7sB,EAAAS,WAAA1R,sCAA0F69B,YAA6B5sB,EAAAxE,OAAAgM,wBACvHxH,EAAA0d,KAAAoP,YAAAD,EAAA/hC,SAAA,OACW,CACX,MAAAiiC,EAAA/sB,EAAAS,WAAA1R,aAAmEiR,EAAAxE,OAAAgM,gDAA8DolB,OACjI5sB,EAAA0d,KAAAoP,YAAAC,EAAAjiC,SAAA,IAGAkV,EAAA4E,KAAA,iBAAAqZ,EAAA,GAAAmL,EAAA,OAGAppB,EAAA4E,KAAA,gBAAAqZ,EAAA,GAAAmL,EAAA,OAGAj5B,OACA,MAAA6P,EAAA1V,MACAmW,WACAA,EAAAjF,OAAAse,EAAA5Y,SAAAqE,eACKvF,EACLc,EAAAd,EAAAe,SAAA+Y,EAAA/Y,QAAAC,QACAxF,EAAAse,EAAA4D,KAEA,IAAA9a,EAAAkX,EAAAlX,cAKA,SAAAoqB,EAAA1uB,GACA,GAAAwC,GACA,GAAAL,EAAA1R,aAAoC+qB,EAAA3Y,uCAAoD7C,OAAS/N,OACjG,cAEO,GAAA2Q,EAAA5C,GAAA,SACP,SAEA,SAAAsL,EAAAwe,GACA,OAAAtnB,EACetQ,EAAC43B,GAAAh2B,KAAA,2BAEH5B,EAAC43B,GAAAt9B,QAId,GApBA,SAAA8X,IACAA,EAAA,GAkBA5C,EAAA0d,KAAAuP,qBAAAjtB,EAAA0d,KAAAuP,oBAAA,GACAjtB,EAAAxE,OAAAwJ,sBACAvE,EAAA1R,aAA8B+qB,EAAAhU,qBAA+B7O,KAAA,CAAAi2B,EAAA9E,KAC7D,MAAA9pB,EAAAwC,EAAqCtQ,EAAC43B,GAAAh2B,KAAA,2BAA4C5B,EAAC43B,GAAAt9B,QACnFkV,EAAA0d,KAAAoP,YAAAxuB,UAEK,GAAAsE,EAAA,EACL,QAAAtS,EAAAiV,EAA+BjV,EAAAiV,EAAA3C,EAAiCtS,GAAA,EAChE08B,EAAA18B,IAAA0P,EAAA0d,KAAAoP,YAAAx8B,QAGA0P,EAAA0d,KAAAoP,YAAAvnB,GAEA,GAAA/J,EAAA2xB,aACA,GAAAvqB,EAAA,GAAApH,EAAA4xB,oBAAA5xB,EAAA4xB,mBAAA,GACA,MAAAC,EAAA7xB,EAAA4xB,mBACA7S,EAAA3X,EACA0qB,EAAA7qB,KAAAwS,IAAA1P,EAAAgV,EAAA9X,KAAAK,IAAAuqB,EAAA9S,GAAArZ,EAAA3Q,QACAg9B,EAAA9qB,KAAAK,IAAAyC,EAAA9C,KAAAK,IAAAyX,EAAA8S,GAAA,GAEA,QAAA/8B,EAAAiV,EAAA3C,EAAiDtS,EAAAg9B,EAAch9B,GAAA,EAC/D08B,EAAA18B,IAAA0P,EAAA0d,KAAAoP,YAAAx8B,GAGA,QAAAA,EAAAi9B,EAA8Bj9B,EAAAiV,EAAiBjV,GAAA,EAC/C08B,EAAA18B,IAAA0P,EAAA0d,KAAAoP,YAAAx8B,OAEO,CACP,MAAAmX,EAAAhH,EAAA1R,aAAkD+qB,EAAA5S,kBAClDO,EAAAlX,OAAA,GAAAyP,EAAA0d,KAAAoP,YAAAljB,EAAAnC,IAEA,MAAAC,EAAAjH,EAAA1R,aAAkD+qB,EAAA3S,kBAClDO,EAAAnX,OAAA,GAAAyP,EAAA0d,KAAAoP,YAAAljB,EAAAlC,OAMA,IAAA8lB,GAAA,CACArhC,KAAA,OACAqP,OAAA,CACAkiB,KAAA,CACA1c,SAAA,EACAmsB,cAAA,EACAC,mBAAA,EACAK,uBAAA,EAEAnB,aAAA,cACAE,aAAA,sBACAD,YAAA,qBACAI,eAAA,0BAGAx8B,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACA0d,KAAA,CACAuP,oBAAA,EACAtP,KAAAwO,GAAAxO,KAAAte,KAAAW,GACA8sB,YAAAX,GAAAW,YAAAztB,KAAAW,OAIArS,GAAA,CACAwC,aACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAkiB,KAAA1c,SAAAhB,EAAAxE,OAAAgd,gBACAxY,EAAAxE,OAAAgd,eAAA,IAGAroB,OACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAkiB,KAAA1c,UAAAhB,EAAAxE,OAAA+L,MAAA,IAAAvH,EAAAxE,OAAAsO,cACA9J,EAAA0d,KAAAC,QAGAxtB,SACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAgX,WAAAxS,EAAAxE,OAAA4Y,gBACApU,EAAA0d,KAAAC,QAGAxtB,SACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAkiB,KAAA1c,SACAhB,EAAA0d,KAAAC,QAGAxtB,oBACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAkiB,KAAA1c,SACAhB,EAAA0d,KAAAC,QAGAxtB,kBACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAkiB,KAAA1c,UACAhB,EAAAxE,OAAAkiB,KAAA+P,wBAAAztB,EAAAxE,OAAAkiB,KAAA+P,wBAAAztB,EAAA0d,KAAAuP,qBACAjtB,EAAA0d,KAAAC,QAIAxtB,gBACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAkiB,KAAA1c,UAAAhB,EAAAxE,OAAAkiB,KAAA+P,uBACAztB,EAAA0d,KAAAC,UAQA,MAAA+P,GAAA,CACAC,aAAA,SAAA/kB,EAAAC,GACA,MAAA+kB,EAAA,WACA,IAAAN,EACAC,EACAM,EACA,OAAAC,EAAAljB,KACA2iB,GAAA,EACAD,EAAAQ,EAAAv9B,OACA,MAAA+8B,EAAAC,EAAA,EACAM,EAAAP,EAAAC,GAAA,EACAO,EAAAD,IAAAjjB,EACA2iB,EAAAM,EAEAP,EAAAO,EAGA,OAAAP,GAfA,GAwBA,IAAAS,EACAC,EAaA,OApBA1jC,KAAAse,IACAte,KAAAue,IACAve,KAAAk5B,UAAA5a,EAAArY,OAAA,EAOAjG,KAAA2jC,YAAA,SAAArF,GACA,OAAAA,GAGAoF,EAAAJ,EAAAtjC,KAAAse,EAAAggB,GACAmF,EAAAC,EAAA,GAIApF,EAAAt+B,KAAAse,EAAAmlB,KAAAzjC,KAAAue,EAAAmlB,GAAA1jC,KAAAue,EAAAklB,KAAAzjC,KAAAse,EAAAolB,GAAA1jC,KAAAse,EAAAmlB,IAAAzjC,KAAAue,EAAAklB,IARA,GAUAzjC,MAGA6F,uBAAA+9B,GACA,MAAAluB,EAAA1V,KACA0V,EAAAmuB,WAAAC,SACApuB,EAAAmuB,WAAAC,OAAApuB,EAAAxE,OAAA+L,KACA,IAAAmmB,GAAAC,aAAA3tB,EAAAsB,WAAA4sB,EAAA5sB,YACA,IAAAosB,GAAAC,aAAA3tB,EAAAqB,SAAA6sB,EAAA7sB,YAGAlR,aAAAuY,EAAAC,GACA,MAAA3I,EAAA1V,KACA+jC,EAAAruB,EAAAmuB,WAAAG,QACA,IAAAC,EACAC,EACA,SAAAC,EAAAP,GAKA,MAAAtoB,EAAA5F,EAAAW,cAAAX,EAAA4F,UAAA5F,EAAA4F,UACA,UAAA5F,EAAAxE,OAAA2yB,WAAAO,KACA1uB,EAAAmuB,WAAAQ,uBAAAT,GAGAM,GAAAxuB,EAAAmuB,WAAAC,OAAAH,aAAAroB,IAGA4oB,GAAA,cAAAxuB,EAAAxE,OAAA2yB,WAAAO,KACAH,GAAAL,EAAAznB,eAAAynB,EAAAhoB,iBAAAlG,EAAAyG,eAAAzG,EAAAkG,gBACAsoB,GAAA5oB,EAAA5F,EAAAkG,gBAAAqoB,EAAAL,EAAAhoB,gBAGAlG,EAAAxE,OAAA2yB,WAAAS,UACAJ,EAAAN,EAAAznB,eAAA+nB,GAEAN,EAAA3nB,eAAAioB,GACAN,EAAAxlB,aAAA8lB,EAAAxuB,GACAkuB,EAAAvmB,oBACAumB,EAAApnB,sBAEA,GAAAtI,MAAAC,QAAA4vB,GACA,QAAA/9B,EAAA,EAAqBA,EAAA+9B,EAAA99B,OAAuBD,GAAA,EAC5C+9B,EAAA/9B,KAAAqY,GAAA0lB,EAAA/9B,aAAuEmpB,IACvEgV,EAAAJ,EAAA/9B,SAGK+9B,aAAgC5U,IAAM9Q,IAAA0lB,GAC3CI,EAAAJ,IAGAl+B,cAAA+C,EAAAyV,GACA,MAAA3I,EAAA1V,KACA+jC,EAAAruB,EAAAmuB,WAAAG,QACA,IAAAh+B,EACA,SAAAu+B,EAAAX,GACAA,EAAA5oB,cAAApS,EAAA8M,GACA,IAAA9M,IACAg7B,EAAAhlB,kBACAglB,EAAA1yB,OAAA6N,YACArP,GAAAuR,SAAA,KACA2iB,EAAAhpB,qBAGAgpB,EAAAztB,WAAAlL,cAAA,KACA84B,IACAH,EAAA1yB,OAAA+L,MAAA,UAAAvH,EAAAxE,OAAA2yB,WAAAO,IACAR,EAAA1jB,UAEA0jB,EAAA34B,oBAIA,GAAAiJ,MAAAC,QAAA4vB,GACA,IAAA/9B,EAAA,EAAiBA,EAAA+9B,EAAA99B,OAAuBD,GAAA,EACxC+9B,EAAA/9B,KAAAqY,GAAA0lB,EAAA/9B,aAAuEmpB,IACvEoV,EAAAR,EAAA/9B,SAGK+9B,aAAgC5U,IAAM9Q,IAAA0lB,GAC3CQ,EAAAR,KAIA,IAAAS,GAAA,CACA3iC,KAAA,aACAqP,OAAA,CACA2yB,WAAA,CACAG,aAAAj6B,EACAu6B,SAAA,EACAF,GAAA,UAGAv+B,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAmuB,WAAA,CACAG,QAAAtuB,EAAAxE,OAAA2yB,WAAAG,QACAK,uBAAAjB,GAAAiB,uBAAAtvB,KAAAW,GACA0I,aAAAglB,GAAAhlB,aAAArJ,KAAAW,GACAsF,cAAAooB,GAAApoB,cAAAjG,KAAAW,OAIArS,GAAA,CACAwC,SACA,MAAA6P,EAAA1V,KACA0V,EAAAmuB,WAAAG,SACAtuB,EAAAmuB,WAAAC,SACApuB,EAAAmuB,WAAAC,YAAA/5B,SACA2L,EAAAmuB,WAAAC,SAGAj+B,SACA,MAAA6P,EAAA1V,KACA0V,EAAAmuB,WAAAG,SACAtuB,EAAAmuB,WAAAC,SACApuB,EAAAmuB,WAAAC,YAAA/5B,SACA2L,EAAAmuB,WAAAC,SAGAj+B,iBACA,MAAA6P,EAAA1V,KACA0V,EAAAmuB,WAAAG,SACAtuB,EAAAmuB,WAAAC,SACApuB,EAAAmuB,WAAAC,YAAA/5B,SACA2L,EAAAmuB,WAAAC,SAGAj+B,aAAAyV,EAAA+C,GACA,MAAA3I,EAAA1V,KACA0V,EAAAmuB,WAAAG,SACAtuB,EAAAmuB,WAAAzlB,aAAA9C,EAAA+C,IAEAxY,cAAA+C,EAAAyV,GACA,MAAA3I,EAAA1V,KACA0V,EAAAmuB,WAAAG,SACAtuB,EAAAmuB,WAAA7oB,cAAApS,EAAAyV,MAKA,MAAAomB,GAAA,CACA5+B,gBAAA8P,GAEA,OADAA,EAAA7N,KAAA,gBACA6N,GAEA9P,UAAA8P,EAAA+uB,GAEA,OADA/uB,EAAA7N,KAAA,OAAA48B,GACA/uB,GAEA9P,WAAA8P,EAAAzS,GAEA,OADAyS,EAAA7N,KAAA,aAAA5E,GACAyS,GAEA9P,UAAA8P,GAEA,OADAA,EAAA7N,KAAA,oBACA6N,GAEA9P,SAAA8P,GAEA,OADAA,EAAA7N,KAAA,oBACA6N,GAEA9P,WAAAwD,GACA,MAAAqM,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAAuzB,KACA,QAAAp7B,EAAA6qB,QAAA,OACA,MAAAyQ,EAAsBz+B,EAACmD,EAAAC,QACvBoM,EAAA+Y,YAAA/Y,EAAA+Y,WAAAuJ,SAAA2M,EAAAj7B,GAAAgM,EAAA+Y,WAAAuJ,WACAtiB,EAAA2G,QAAA3G,EAAAxE,OAAA+L,MACAvH,EAAAuK,YAEAvK,EAAA2G,MACA3G,EAAA+uB,KAAAG,OAAA1zB,EAAA2zB,kBAEAnvB,EAAA+uB,KAAAG,OAAA1zB,EAAA4zB,mBAGApvB,EAAA+Y,YAAA/Y,EAAA+Y,WAAAwJ,SAAA0M,EAAAj7B,GAAAgM,EAAA+Y,WAAAwJ,WACAviB,EAAA0G,cAAA1G,EAAAxE,OAAA+L,MACAvH,EAAA0K,YAEA1K,EAAA0G,YACA1G,EAAA+uB,KAAAG,OAAA1zB,EAAA6zB,mBAEArvB,EAAA+uB,KAAAG,OAAA1zB,EAAA8zB,mBAGAtvB,EAAAkjB,YAAA+L,EAAAj7B,OAA8CgM,EAAAxE,OAAA0nB,WAAAkC,gBAC9C6J,EAAA,GAAArhC,SAGAuC,OAAAo/B,GACA,MAAAvvB,EAAA1V,KACAklC,EAAAxvB,EAAA+uB,KAAAU,WACA,IAAAD,EAAAj/B,SACAi/B,EAAA3+B,KAAA,IACA2+B,EAAA3+B,KAAA0+B,KAEAp/B,mBACA,MAAA6P,EAAA1V,KAEA,GAAA0V,EAAAxE,OAAA+L,KAAA,OACA,MAAA+a,QAAWA,EAAAC,WAAmBviB,EAAA+Y,WAE9BwJ,KAAAhyB,OAAA,IACAyP,EAAA0G,YACA1G,EAAA+uB,KAAAW,UAAAnN,GAEAviB,EAAA+uB,KAAAY,SAAApN,IAGAD,KAAA/xB,OAAA,IACAyP,EAAA2G,MACA3G,EAAA+uB,KAAAW,UAAApN,GAEAtiB,EAAA+uB,KAAAY,SAAArN,KAIAnyB,mBACA,MAAA6P,EAAA1V,KACAkR,EAAAwE,EAAAxE,OAAAuzB,KACA/uB,EAAAkjB,YAAAljB,EAAAxE,OAAA0nB,WAAAsC,WAAAxlB,EAAAkjB,WAAAI,SAAAtjB,EAAAkjB,WAAAI,QAAA/yB,QACAyP,EAAAkjB,WAAAI,QAAArsB,KAAA,CAAAgtB,EAAA2L,KACA,MAAAC,EAA0Br/B,EAACo/B,GAC3B5vB,EAAA+uB,KAAAe,gBAAAD,GACA7vB,EAAA+uB,KAAAgB,UAAAF,EAAA,UACA7vB,EAAA+uB,KAAAiB,WAAAH,EAAAr0B,EAAAy0B,wBAAAp1B,QAAA,YAA2Fg1B,EAAA/kC,QAAA,OAI3FqF,OACA,MAAA6P,EAAA1V,KAEA0V,EAAAC,IAAAlI,OAAAiI,EAAA+uB,KAAAU,YAGA,MAAAj0B,EAAAwE,EAAAxE,OAAAuzB,KACA,IAAAzM,EACAC,EACAviB,EAAA+Y,YAAA/Y,EAAA+Y,WAAAuJ,UACAA,EAAAtiB,EAAA+Y,WAAAuJ,SAEAtiB,EAAA+Y,YAAA/Y,EAAA+Y,WAAAwJ,UACAA,EAAAviB,EAAA+Y,WAAAwJ,SAEAD,IACAtiB,EAAA+uB,KAAAe,gBAAAxN,GACAtiB,EAAA+uB,KAAAgB,UAAAzN,EAAA,UACAtiB,EAAA+uB,KAAAiB,WAAA1N,EAAA9mB,EAAA4zB,kBACA9M,EAAA30B,GAAA,UAAAqS,EAAA+uB,KAAAmB,aAEA3N,IACAviB,EAAA+uB,KAAAe,gBAAAvN,GACAviB,EAAA+uB,KAAAgB,UAAAxN,EAAA,UACAviB,EAAA+uB,KAAAiB,WAAAzN,EAAA/mB,EAAA8zB,kBACA/M,EAAA50B,GAAA,UAAAqS,EAAA+uB,KAAAmB,aAIAlwB,EAAAkjB,YAAAljB,EAAAxE,OAAA0nB,WAAAsC,WAAAxlB,EAAAkjB,WAAAI,SAAAtjB,EAAAkjB,WAAAI,QAAA/yB,QACAyP,EAAAkjB,WAAAjjB,IAAAtS,GAAA,cAA8CqS,EAAAxE,OAAA0nB,WAAAkC,cAAqCplB,EAAA+uB,KAAAmB,aAGnF//B,UACA,MAAA6P,EAAA1V,KAGA,IAAAg4B,EACAC,EAHAviB,EAAA+uB,KAAAU,YAAAzvB,EAAA+uB,KAAAU,WAAAl/B,OAAA,GAAAyP,EAAA+uB,KAAAU,WAAA19B,SAIAiO,EAAA+Y,YAAA/Y,EAAA+Y,WAAAuJ,UACAA,EAAAtiB,EAAA+Y,WAAAuJ,SAEAtiB,EAAA+Y,YAAA/Y,EAAA+Y,WAAAwJ,UACAA,EAAAviB,EAAA+Y,WAAAwJ,SAEAD,GACAA,EAAA3tB,IAAA,UAAAqL,EAAA+uB,KAAAmB,YAEA3N,GACAA,EAAA5tB,IAAA,UAAAqL,EAAA+uB,KAAAmB,YAIAlwB,EAAAkjB,YAAAljB,EAAAxE,OAAA0nB,WAAAsC,WAAAxlB,EAAAkjB,WAAAI,SAAAtjB,EAAAkjB,WAAAI,QAAA/yB,QACAyP,EAAAkjB,WAAAjjB,IAAAtL,IAAA,cAA+CqL,EAAAxE,OAAA0nB,WAAAkC,cAAqCplB,EAAA+uB,KAAAmB,cAIpF,IAAAC,GAAA,CACAhkC,KAAA,OACAqP,OAAA,CACAuzB,KAAA,CACA/tB,SAAA,EACAovB,kBAAA,sBACAd,iBAAA,iBACAF,iBAAA,aACAC,kBAAA,0BACAF,iBAAA,yBACAc,wBAAA,0BAGA9/B,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACA+uB,KAAA,CACAU,WAAoBj/B,kBAAkBwP,EAAAxE,OAAAuzB,KAAAqB,0EAGtC3jC,OAAAoN,KAAAk1B,IAAAj1B,QAAAC,IACAiG,EAAA+uB,KAAAh1B,GAAAg1B,GAAAh1B,GAAAsF,KAAAW,MAGArS,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAuzB,KAAA/tB,UACAhB,EAAA+uB,KAAA7V,OACAlZ,EAAA+uB,KAAAsB,qBAEAlgC,SACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAuzB,KAAA/tB,SACAhB,EAAA+uB,KAAAsB,oBAEAlgC,WACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAuzB,KAAA/tB,SACAhB,EAAA+uB,KAAAsB,oBAEAlgC,mBACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAuzB,KAAA/tB,SACAhB,EAAA+uB,KAAAuB,oBAEAngC,UACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAuzB,KAAA/tB,SACAhB,EAAA+uB,KAAArS,aAKA,MAAA6T,GAAA,CACApgC,OACA,MAAA6P,EAAA1V,KACA,IAAA0V,EAAAxE,OAAA/L,QAAA,OACA,IAASJ,EAAMI,UAAaJ,EAAMI,QAAA+gC,UAGlC,OAFAxwB,EAAAxE,OAAA/L,QAAAuR,SAAA,OACAhB,EAAAxE,OAAAi1B,eAAAzvB,SAAA,GAGA,MAAAvR,EAAAuQ,EAAAvQ,QACAA,EAAAsa,aAAA,EACAta,EAAAihC,MAAAH,GAAAI,iBACAlhC,EAAAihC,MAAA3lC,KAAA0E,EAAAihC,MAAAr+B,SACA5C,EAAAmhC,cAAA,EAAAnhC,EAAAihC,MAAAr+B,MAAA2N,EAAAxE,OAAA6d,oBACArZ,EAAAxE,OAAA/L,QAAAohC,cACMxhC,EAAMjB,iBAAA,WAAA4R,EAAAvQ,QAAAqhC,sBAGZ3gC,UACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA/L,QAAAohC,cACMxhC,EAAMhB,oBAAA,WAAA2R,EAAAvQ,QAAAqhC,qBAGZ3gC,qBACA,MAAA6P,EAAA1V,KACA0V,EAAAvQ,QAAAihC,MAAAH,GAAAI,gBACA3wB,EAAAvQ,QAAAmhC,cAAA5wB,EAAAxE,OAAA2J,MAAAnF,EAAAvQ,QAAAihC,MAAAr+B,OAAA,IAEAlC,gBACA,MAAA4gC,EAAsB1hC,EAAMF,SAAA6hC,SAAAtyB,MAAA,GAAAtN,MAAA,KAAAgE,OAAA67B,GAAA,KAAAA,GAC5B7N,EAAA2N,EAAAxgC,OACAxF,EAAAgmC,EAAA3N,EAAA,GACA/wB,EAAA0+B,EAAA3N,EAAA,GACA,OAAYr4B,MAAAsH,UAEZlC,WAAApF,EAAAuT,GACA,MAAA0B,EAAA1V,KACA,IAAA0V,EAAAvQ,QAAAsa,cAAA/J,EAAAxE,OAAA/L,QAAAuR,QAAA,OACA,MAAAiC,EAAAjD,EAAAkB,OAAArJ,GAAAyG,GACA,IAAAjM,EAAAk+B,GAAAW,QAAAjuB,EAAA7Q,KAAA,iBACS/C,EAAMF,SAAA6hC,SAAAG,SAAApmC,KACfsH,KAAiBtH,KAAOsH,KAExB,MAAA++B,EAAyB/hC,EAAMI,QAAA4hC,MAC/BD,KAAA/+B,YAGA2N,EAAAxE,OAAA/L,QAAAohC,aACMxhC,EAAMI,QAAAohC,aAAA,CAAuBx+B,SAAQ,KAAAA,GAErChD,EAAMI,QAAA+gC,UAAA,CAAoBn+B,SAAQ,KAAAA,KAGxClC,QAAAmhC,GACA,OAAAA,EAAAn2B,WAAAqT,cACA3T,QAAA,YACAA,QAAA,eACAA,QAAA,YACAA,QAAA,UACAA,QAAA,WAEA1K,cAAAgV,EAAA9S,EAAA8W,GACA,MAAAnJ,EAAA1V,KACA,GAAA+H,EACA,QAAA/B,EAAA,EAAAC,EAAAyP,EAAAkB,OAAA3Q,OAAoDD,EAAAC,EAAYD,GAAA,GAChE,MAAA2S,EAAAjD,EAAAkB,OAAArJ,GAAAvH,GACAihC,EAAAhB,GAAAW,QAAAjuB,EAAA7Q,KAAA,iBACA,GAAAm/B,IAAAl/B,IAAA4Q,EAAAjR,SAAAgO,EAAAxE,OAAAgM,qBAAA,CACA,MAAAlJ,EAAA2E,EAAAnY,QACAkV,EAAA0J,QAAApL,EAAA6G,EAAAgE,SAIAnJ,EAAA0J,QAAA,EAAAvE,EAAAgE,KAKA,IAAAqoB,GAAA,CACArlC,KAAA,UACAqP,OAAA,CACA/L,QAAA,CACAuR,SAAA,EACA6vB,cAAA,EACA9lC,IAAA,WAGAoF,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAvQ,QAAA,CACAypB,KAAAqX,GAAArX,KAAA7Z,KAAAW,GACAyxB,WAAAlB,GAAAkB,WAAApyB,KAAAW,GACA8wB,mBAAAP,GAAAO,mBAAAzxB,KAAAW,GACA4wB,cAAAL,GAAAK,cAAAvxB,KAAAW,GACA0c,QAAA6T,GAAA7T,QAAArd,KAAAW,OAIArS,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA/L,QAAAuR,SACAhB,EAAAvQ,QAAAypB,QAGA/oB,UACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAA/L,QAAAuR,SACAhB,EAAAvQ,QAAAitB,WAGAvsB,gBACA,MAAA6P,EAAA1V,KACA0V,EAAAvQ,QAAAsa,aACA/J,EAAAvQ,QAAAgiC,WAAAzxB,EAAAxE,OAAA/L,QAAA1E,IAAAiV,EAAAuF,gBAMA,MAAAmsB,GAAA,CACAvhC,cACA,MAAA6P,EAAA1V,KACAqnC,EAAoB1jC,EAAQkB,SAAAC,KAAAyL,QAAA,QAC5B+2B,EAAA5xB,EAAAkB,OAAArJ,GAAAmI,EAAAuF,aAAAnT,KAAA,aACA,GAAAu/B,IAAAC,EAAA,CACA,MAAAvnB,EAAArK,EAAAS,WAAA1R,aAAsDiR,EAAAxE,OAAA2F,yBAAuCwwB,OAAQ7mC,QACrG,wBAAAuf,EAAA,OACArK,EAAA0J,QAAAW,KAGAla,UACA,MAAA6P,EAAA1V,KACA,GAAA0V,EAAAywB,eAAA1mB,aAAA/J,EAAAxE,OAAAi1B,eAAAzvB,QACA,GAAAhB,EAAAxE,OAAAi1B,eAAAI,cAAqDxhC,EAAMI,SAAYJ,EAAMI,QAAAohC,aACvExhC,EAAMI,QAAAohC,aAAA,cAAuC7wB,EAAAkB,OAAArJ,GAAAmI,EAAAuF,aAAAnT,KAAA,gBAAuD,QACrG,CACL,MAAA6Q,EAAAjD,EAAAkB,OAAArJ,GAAAmI,EAAAuF,aACAnW,EAAA6T,EAAA7Q,KAAA,cAAA6Q,EAAA7Q,KAAA,gBACMnE,EAAQkB,SAAAC,QAAA,KAGde,OACA,MAAA6P,EAAA1V,KACA,IAAA0V,EAAAxE,OAAAi1B,eAAAzvB,SAAAhB,EAAAxE,OAAA/L,SAAAuQ,EAAAxE,OAAA/L,QAAAuR,QAAA,OACAhB,EAAAywB,eAAA1mB,aAAA,EACA,MAAA3a,EAAiBnB,EAAQkB,SAAAC,KAAAyL,QAAA,QACzB,GAAAzL,EAAA,CACA,MAAA+V,EAAA,EACA,QAAA7U,EAAA,EAAAC,EAAAyP,EAAAkB,OAAA3Q,OAAoDD,EAAAC,EAAYD,GAAA,GAChE,MAAA2S,EAAAjD,EAAAkB,OAAArJ,GAAAvH,GACAuhC,EAAA5uB,EAAA7Q,KAAA,cAAA6Q,EAAA7Q,KAAA,gBACA,GAAAy/B,IAAAziC,IAAA6T,EAAAjR,SAAAgO,EAAAxE,OAAAgM,qBAAA,CACA,MAAAlJ,EAAA2E,EAAAnY,QACAkV,EAAA0J,QAAApL,EAAA6G,EAAAnF,EAAAxE,OAAA6d,oBAAA,KAIArZ,EAAAxE,OAAAi1B,eAAAqB,YACMthC,EAAEnB,GAAM1B,GAAA,aAAAqS,EAAAywB,eAAAsB,cAGd5hC,UACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAi1B,eAAAqB,YACMthC,EAAEnB,GAAMsF,IAAA,aAAAqL,EAAAywB,eAAAsB,eAId,IAAAC,GAAA,CACA7lC,KAAA,kBACAqP,OAAA,CACAi1B,eAAA,CACAzvB,SAAA,EACA6vB,cAAA,EACAiB,YAAA,IAGA3hC,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAywB,eAAA,CACA1mB,aAAA,EACAmP,KAAAwY,GAAAxY,KAAA7Z,KAAAW,GACA0c,QAAAgV,GAAAhV,QAAArd,KAAAW,GACAiyB,QAAAP,GAAAO,QAAA5yB,KAAAW,GACA+xB,YAAAL,GAAAK,YAAA1yB,KAAAW,OAIArS,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAi1B,eAAAzvB,SACAhB,EAAAywB,eAAAvX,QAGA/oB,UACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAi1B,eAAAzvB,SACAhB,EAAAywB,eAAA/T,WAGAvsB,gBACA,MAAA6P,EAAA1V,KACA0V,EAAAywB,eAAA1mB,aACA/J,EAAAywB,eAAAwB,aAQA,MAAAC,GAAA,CACA/hC,MACA,MAAA6P,EAAA1V,KACA6nC,EAAAnyB,EAAAkB,OAAArJ,GAAAmI,EAAAuF,aACA,IAAApL,EAAA6F,EAAAxE,OAAAqmB,SAAA1nB,MACAg4B,EAAA//B,KAAA,0BACA+H,EAAAg4B,EAAA//B,KAAA,yBAAA4N,EAAAxE,OAAAqmB,SAAA1nB,OAEA6F,EAAA6hB,SAAAD,QAAA5nB,GAAAuR,SAAA,KACAvL,EAAAxE,OAAAqmB,SAAAuQ,iBACApyB,EAAAxE,OAAA+L,MACAvH,EAAAwK,UACAxK,EAAA0K,UAAA1K,EAAAxE,OAAA2J,OAAA,MACAnF,EAAA4E,KAAA,aACS5E,EAAA0G,YAGA1G,EAAAxE,OAAAqmB,SAAAwQ,gBAITryB,EAAA6hB,SAAAE,QAHA/hB,EAAA0J,QAAA1J,EAAAkB,OAAA3Q,OAAA,EAAAyP,EAAAxE,OAAA2J,OAAA,MACAnF,EAAA4E,KAAA,cAJA5E,EAAA0K,UAAA1K,EAAAxE,OAAA2J,OAAA,MACAnF,EAAA4E,KAAA,aAOO5E,EAAAxE,OAAA+L,MACPvH,EAAAwK,UACAxK,EAAAuK,UAAAvK,EAAAxE,OAAA2J,OAAA,MACAnF,EAAA4E,KAAA,aACO5E,EAAA2G,MAGA3G,EAAAxE,OAAAqmB,SAAAwQ,gBAIPryB,EAAA6hB,SAAAE,QAHA/hB,EAAA0J,QAAA,EAAA1J,EAAAxE,OAAA2J,OAAA,MACAnF,EAAA4E,KAAA,cAJA5E,EAAAuK,UAAAvK,EAAAxE,OAAA2J,OAAA,MACAnF,EAAA4E,KAAA,cAOKzK,IAELhK,QACA,MAAA6P,EAAA1V,KACA,2BAAA0V,EAAA6hB,SAAAD,WACA5hB,EAAA6hB,SAAAyQ,UACAtyB,EAAA6hB,SAAAyQ,SAAA,EACAtyB,EAAA4E,KAAA,iBACA5E,EAAA6hB,SAAA0Q,OACA,KAEApiC,OACA,MAAA6P,EAAA1V,KACA,QAAA0V,EAAA6hB,SAAAyQ,UACA,qBAAAtyB,EAAA6hB,SAAAD,UAEA5hB,EAAA6hB,SAAAD,UACA3xB,aAAA+P,EAAA6hB,SAAAD,SACA5hB,EAAA6hB,SAAAD,aAAAvtB,GAEA2L,EAAA6hB,SAAAyQ,SAAA,EACAtyB,EAAA4E,KAAA,iBACA,KAEAzU,MAAAgV,GACA,MAAAnF,EAAA1V,KACA0V,EAAA6hB,SAAAyQ,UACAtyB,EAAA6hB,SAAA2Q,SACAxyB,EAAA6hB,SAAAD,SAAA3xB,aAAA+P,EAAA6hB,SAAAD,SACA5hB,EAAA6hB,SAAA2Q,QAAA,EACA,IAAArtB,GAAAnF,EAAAxE,OAAAqmB,SAAA4Q,mBAIAzyB,EAAAS,WAAA,GAAArS,iBAAA,gBAAA4R,EAAA6hB,SAAAqK,iBACAlsB,EAAAS,WAAA,GAAArS,iBAAA,sBAAA4R,EAAA6hB,SAAAqK,mBAJAlsB,EAAA6hB,SAAA2Q,QAAA,EACAxyB,EAAA6hB,SAAA0Q,WAQA,IAAAG,GAAA,CACAvmC,KAAA,WACAqP,OAAA,CACAqmB,SAAA,CACA7gB,SAAA,EACA7G,MAAA,IACAs4B,mBAAA,EACAE,sBAAA,EACAN,iBAAA,EACAD,kBAAA,IAGAjiC,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACA6hB,SAAA,CACAyQ,SAAA,EACAE,QAAA,EACAD,IAAAL,GAAAK,IAAAlzB,KAAAW,GACA2V,MAAAuc,GAAAvc,MAAAtW,KAAAW,GACA+hB,KAAAmQ,GAAAnQ,KAAA1iB,KAAAW,GACA4yB,MAAAV,GAAAU,MAAAvzB,KAAAW,GACA7P,gBAAAwD,GACAqM,MAAAmK,WAAAnK,EAAAS,YACA9M,EAAAC,SAAAtJ,OACA0V,EAAAS,WAAA,GAAApS,oBAAA,gBAAA2R,EAAA6hB,SAAAqK,iBACAlsB,EAAAS,WAAA,GAAApS,oBAAA,sBAAA2R,EAAA6hB,SAAAqK,iBACAlsB,EAAA6hB,SAAA2Q,QAAA,EACAxyB,EAAA6hB,SAAAyQ,QAGAtyB,EAAA6hB,SAAA0Q,MAFAvyB,EAAA6hB,SAAAE,aAQAp0B,GAAA,CACAwC,OACA,MAAA6P,EAAA1V,KACA0V,EAAAxE,OAAAqmB,SAAA7gB,SACAhB,EAAA6hB,SAAAlM,SAGAxlB,sBAAAgV,EAAAwE,GACA,MAAA3J,EAAA1V,KACA0V,EAAA6hB,SAAAyQ,UACA3oB,IAAA3J,EAAAxE,OAAAqmB,SAAA8Q,qBACA3yB,EAAA6hB,SAAA+Q,MAAAztB,GAEAnF,EAAA6hB,SAAAE,SAIA5xB,kBACA,MAAA6P,EAAA1V,KACA0V,EAAA6hB,SAAAyQ,UACAtyB,EAAAxE,OAAAqmB,SAAA8Q,qBACA3yB,EAAA6hB,SAAAE,OAEA/hB,EAAA6hB,SAAA+Q,UAIAziC,UACA,MAAA6P,EAAA1V,KACA0V,EAAA6hB,SAAAyQ,SACAtyB,EAAA6hB,SAAAE,UAMA,MAAA8Q,GAAA,CACA1iC,eACA,MAAA6P,EAAA1V,MACA4W,OAAWA,GAASlB,EACpB,QAAA1P,EAAA,EAAmBA,EAAA4Q,EAAA3Q,OAAmBD,GAAA,GACtC,MAAA2tB,EAAAje,EAAAkB,OAAArJ,GAAAvH,GACAktB,EAAAS,EAAA,GAAAzY,kBACA,IAAAstB,GAAAtV,EACAxd,EAAAxE,OAAAgN,mBAAAsqB,GAAA9yB,EAAA4F,WACA,IAAAmtB,EAAA,EACA/yB,EAAAI,iBACA2yB,EAAAD,EACAA,EAAA,GAEA,MAAAE,EAAAhzB,EAAAxE,OAAAy3B,WAAAC,UACAzwB,KAAAK,IAAA,EAAAL,KAAAuB,IAAAia,EAAA,GAAA3X,UAAA,GACA,EAAA7D,KAAAwS,IAAAxS,KAAAK,IAAAmb,EAAA,GAAA3X,UAAA,MACA2X,EACAnnB,IAAA,CACAyvB,QAAAyM,IAEAlgC,yBAAkCggC,QAASC,eAG3C5iC,cAAA+C,GACA,MAAA8M,EAAA1V,MACA4W,OAAWA,EAAAT,cAAqBT,EAEhC,GADAkB,EAAAjO,WAAAC,GACA8M,EAAAxE,OAAAgN,kBAAA,IAAAtV,EAAA,CACA,IAAAigC,GAAA,EACAjyB,EAAA3L,cAAA,KACA,GAAA49B,EAAA,OACA,IAAAnzB,KAAAmK,UAAA,OACAgpB,GAAA,EACAnzB,EAAAwJ,WAAA,EACA,MAAA4pB,EAAA,wCACA,QAAA9iC,EAAA,EAAuBA,EAAA8iC,EAAA7iC,OAA0BD,GAAA,EACjDmQ,EAAA1L,QAAAq+B,EAAA9iC,SAOA,IAAA+iC,GAAA,CACAlnC,KAAA,cACAqP,OAAA,CACAy3B,WAAA,CACAC,WAAA,IAGA/iC,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAizB,WAAA,CACAvqB,aAAAmqB,GAAAnqB,aAAArJ,KAAAW,GACAsF,cAAAutB,GAAAvtB,cAAAjG,KAAAW,OAIArS,GAAA,CACAwC,aACA,MAAA6P,EAAA1V,KACA,YAAA0V,EAAAxE,OAAA2I,OAAA,OACAnE,EAAAwX,WAAAtmB,QAAgC8O,EAAAxE,OAAAmc,8BAChC,MAAA0G,EAAA,CACAzb,cAAA,EACAJ,gBAAA,EACAyB,eAAA,EACAc,qBAAA,EACA/C,aAAA,EACAwG,kBAAA,GAEAxO,GAAA0C,OAAAsD,EAAAxE,OAAA6iB,GACArkB,GAAA0C,OAAAsD,EAAAwW,eAAA6H,IAEAluB,eACA,MAAA6P,EAAA1V,KACA,SAAA0V,EAAAxE,OAAA2I,QACAnE,EAAAizB,WAAAvqB,gBAEAvY,cAAA+C,GACA,MAAA8M,EAAA1V,KACA,SAAA0V,EAAAxE,OAAA2I,QACAnE,EAAAizB,WAAA3tB,cAAApS,MAKA,MAAAogC,GAAA,CACAnjC,eACA,MAAA6P,EAAA1V,MACA2V,IACAA,EAAAQ,aAAAS,SAAAjV,MAAAsnC,EAAAvnC,OAAAwnC,EAAA7yB,aAAAC,EAAAL,KAAAG,GACKV,EACLxE,EAAAwE,EAAAxE,OAAAi4B,WACArzB,EAAAJ,EAAAI,eACAU,EAAAd,EAAAe,SAAAf,EAAAxE,OAAAuF,QAAAC,QACA,IACA0yB,EADAC,EAAA,EAEAn4B,EAAAo4B,SACAxzB,GACAszB,EAAAjzB,EAAAvH,KAAA,uBACA,IAAAw6B,EAAAnjC,SACAmjC,EAA0BljC,EAAC,0CAC3BiQ,EAAA1I,OAAA27B,IAEAA,EAAA58B,IAAA,CAA2B9K,UAAYunC,UAEvCG,EAAAzzB,EAAA/G,KAAA,uBACA,IAAAw6B,EAAAnjC,SACAmjC,EAA0BljC,EAAC,0CAC3ByP,EAAAlI,OAAA27B,MAIA,QAAApjC,EAAA,EAAmBA,EAAA4Q,EAAA3Q,OAAmBD,GAAA,GACtC,MAAA2tB,EAAA/c,EAAArJ,GAAAvH,GACA,IAAAsZ,EAAAtZ,EACAwQ,IACA8I,EAAAtJ,SAAA2d,EAAA7rB,KAAA,gCAEA,IAAAyhC,EAAA,GAAAjqB,EACAkqB,EAAArxB,KAAAC,MAAAmxB,EAAA,KACAjzB,IACAizB,KACAC,EAAArxB,KAAAC,OAAAmxB,EAAA,MAEA,MAAAvtB,EAAA7D,KAAAK,IAAAL,KAAAwS,IAAAgJ,EAAA,GAAA3X,SAAA,OACA,IAAAwsB,EAAA,EACAC,EAAA,EACAgB,EAAA,EACAnqB,EAAA,OACAkpB,EAAA,GAAAgB,EAAApzB,EACAqzB,EAAA,IACOnqB,EAAA,UACPkpB,EAAA,EACAiB,EAAA,GAAAD,EAAApzB,IACOkJ,EAAA,UACPkpB,EAAApyB,EAAA,EAAAozB,EAAApzB,EACAqzB,EAAArzB,IACOkJ,EAAA,WACPkpB,GAAApyB,EACAqzB,EAAA,EAAArzB,EAAA,EAAAA,EAAAozB,GAEAlzB,IACAkyB,MAGA1yB,IACA2yB,EAAAD,EACAA,EAAA,GAGA,MAAAkB,aAAsC5zB,EAAA,GAAAyzB,iBAA8CzzB,EAAAyzB,EAAA,qBAAiDf,QAASC,QAASgB,OAMvJ,GALAztB,GAAA,GAAAA,GAAA,IACAqtB,EAAA,GAAA/pB,EAAA,GAAAtD,EACA1F,IAAA+yB,EAAA,IAAA/pB,EAAA,GAAAtD,IAEA2X,EAAAnrB,UAAAkhC,GACAx4B,EAAAy4B,aAAA,CAEA,IAAAC,EAAA9zB,EAAA6d,EAAA/kB,KAAA,6BAAA+kB,EAAA/kB,KAAA,4BACAi7B,EAAA/zB,EAAA6d,EAAA/kB,KAAA,8BAAA+kB,EAAA/kB,KAAA,+BACA,IAAAg7B,EAAA3jC,SACA2jC,EAAyB1jC,qCAAqC4P,EAAA,wBAC9D6d,EAAAlmB,OAAAm8B,IAEA,IAAAC,EAAA5jC,SACA4jC,EAAwB3jC,qCAAqC4P,EAAA,4BAC7D6d,EAAAlmB,OAAAo8B,IAEAD,EAAA3jC,SAAA2jC,EAAA,GAAAlpC,MAAAu7B,QAAA9jB,KAAAK,KAAAwD,EAAA,IACA6tB,EAAA5jC,SAAA4jC,EAAA,GAAAnpC,MAAAu7B,QAAA9jB,KAAAK,IAAAwD,EAAA,KAUA,GAPA7F,EAAA3J,IAAA,CACAs9B,uCAA8C1zB,EAAA,MAC9C2zB,oCAA2C3zB,EAAA,MAC3C4zB,mCAA0C5zB,EAAA,MAC1C6zB,+BAAsC7zB,EAAA,QAGtClF,EAAAo4B,OACA,GAAAxzB,EACAszB,EAAA5gC,8BAAoDygC,EAAA,EAAA/3B,EAAAg5B,oBAA8CjB,EAAA,2CAA0D/3B,EAAAi5B,oBACrJ,CACP,MAAAC,EAAAjyB,KAAAuB,IAAA2vB,GAAA,GAAAlxB,KAAAC,MAAAD,KAAAuB,IAAA2vB,GAAA,IACApF,EAAA,KACA9rB,KAAAkyB,IAAA,EAAAD,EAAAjyB,KAAAoP,GAAA,OACApP,KAAAmyB,IAAA,EAAAF,EAAAjyB,KAAAoP,GAAA,QAEAgjB,EAAAr5B,EAAAi5B,YACAK,EAAAt5B,EAAAi5B,YAAAlG,EACA/Q,EAAAhiB,EAAAg5B,aACAd,EAAA5gC,qBAA2C+hC,SAAcC,uBAA4BtB,EAAA,EAAAhW,SAAqCgW,EAAA,EAAAsB,wBAG1H,MAAAC,EAAqB9d,GAAOC,UAAaD,GAAOI,aAAA3W,EAAA,IAChDD,EACA3N,+BAAsCiiC,gBAAsB/0B,EAAAI,eAAA,EAAAuzB,iBAAyD3zB,EAAAI,gBAAAuzB,EAAA,UAErHxjC,cAAA+C,GACA,MAAA8M,EAAA1V,MACA2V,IAAWA,EAAAiB,UAAclB,EACzBkB,EACAjO,WAAAC,GACAgG,KAAA,gHACAjG,WAAAC,GACA8M,EAAAxE,OAAAi4B,WAAAG,SAAA5zB,EAAAI,gBACAH,EAAA/G,KAAA,uBAAAjG,WAAAC,KAKA,IAAA8hC,GAAA,CACA7oC,KAAA,cACAqP,OAAA,CACAi4B,WAAA,CACAQ,cAAA,EACAL,QAAA,EACAY,aAAA,GACAC,YAAA,MAGAtkC,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAyzB,WAAA,CACA/qB,aAAA4qB,GAAA5qB,aAAArJ,KAAAW,GACAsF,cAAAguB,GAAAhuB,cAAAjG,KAAAW,OAIArS,GAAA,CACAwC,aACA,MAAA6P,EAAA1V,KACA,YAAA0V,EAAAxE,OAAA2I,OAAA,OACAnE,EAAAwX,WAAAtmB,QAAgC8O,EAAAxE,OAAAmc,8BAChC3X,EAAAwX,WAAAtmB,QAAgC8O,EAAAxE,OAAAmc,4BAChC,MAAA0G,EAAA,CACAzb,cAAA,EACAJ,gBAAA,EACAyB,eAAA,EACAc,qBAAA,EACAsN,gBAAA,EACArQ,aAAA,EACA+B,gBAAA,EACAyE,kBAAA,GAEAxO,GAAA0C,OAAAsD,EAAAxE,OAAA6iB,GACArkB,GAAA0C,OAAAsD,EAAAwW,eAAA6H,IAEAluB,eACA,MAAA6P,EAAA1V,KACA,SAAA0V,EAAAxE,OAAA2I,QACAnE,EAAAyzB,WAAA/qB,gBAEAvY,cAAA+C,GACA,MAAA8M,EAAA1V,KACA,SAAA0V,EAAAxE,OAAA2I,QACAnE,EAAAyzB,WAAAnuB,cAAApS,MAKA,MAAA+hC,GAAA,CACA9kC,eACA,MAAA6P,EAAA1V,MACA4W,OAAWA,EAAAP,aAAAC,GAA4BZ,EACvC,QAAA1P,EAAA,EAAmBA,EAAA4Q,EAAA3Q,OAAmBD,GAAA,GACtC,MAAA2tB,EAAA/c,EAAArJ,GAAAvH,GACA,IAAAgW,EAAA2X,EAAA,GAAA3X,SACAtG,EAAAxE,OAAA05B,WAAAC,gBACA7uB,EAAA7D,KAAAK,IAAAL,KAAAwS,IAAAgJ,EAAA,GAAA3X,SAAA,QAEA,MAAAkX,EAAAS,EAAA,GAAAzY,kBACA4vB,GAAA,IAAA9uB,EACA,IAAA+uB,EAAAD,EACAE,EAAA,EACAxC,GAAAtV,EACAuV,EAAA,EAYA,GAXA/yB,EAAAI,eAKOQ,IACPy0B,OALAtC,EAAAD,EACAA,EAAA,EACAwC,GAAAD,EACAA,EAAA,GAKApX,EAAA,GAAAjzB,MAAAuqC,QAAA9yB,KAAAuB,IAAAvB,KAAAqxB,MAAAxtB,IAAApF,EAAA3Q,OAEAyP,EAAAxE,OAAA05B,WAAAjB,aAAA,CAEA,IAAAC,EAAAl0B,EAAAI,eAAA6d,EAAA/kB,KAAA,6BAAA+kB,EAAA/kB,KAAA,4BACAi7B,EAAAn0B,EAAAI,eAAA6d,EAAA/kB,KAAA,8BAAA+kB,EAAA/kB,KAAA,+BACA,IAAAg7B,EAAA3jC,SACA2jC,EAAyB1jC,qCAAqCwP,EAAAI,eAAA,wBAC9D6d,EAAAlmB,OAAAm8B,IAEA,IAAAC,EAAA5jC,SACA4jC,EAAwB3jC,qCAAqCwP,EAAAI,eAAA,4BAC7D6d,EAAAlmB,OAAAo8B,IAEAD,EAAA3jC,SAAA2jC,EAAA,GAAAlpC,MAAAu7B,QAAA9jB,KAAAK,KAAAwD,EAAA,IACA6tB,EAAA5jC,SAAA4jC,EAAA,GAAAnpC,MAAAu7B,QAAA9jB,KAAAK,IAAAwD,EAAA,IAEA2X,EACAnrB,yBAAkCggC,QAASC,qBAAsBuC,iBAAuBD,WAGxFllC,cAAA+C,GACA,MAAA8M,EAAA1V,MACA4W,OAAWA,EAAAqE,cAAA9E,cAAkCT,EAK7C,GAJAkB,EACAjO,WAAAC,GACAgG,KAAA,gHACAjG,WAAAC,GACA8M,EAAAxE,OAAAgN,kBAAA,IAAAtV,EAAA,CACA,IAAAigC,GAAA,EAEAjyB,EAAArJ,GAAA0N,GAAAhQ,cAAA,WACA,GAAA49B,EAAA,OACA,IAAAnzB,KAAAmK,UAAA,OAEAgpB,GAAA,EACAnzB,EAAAwJ,WAAA,EACA,MAAA4pB,EAAA,wCACA,QAAA9iC,EAAA,EAAuBA,EAAA8iC,EAAA7iC,OAA0BD,GAAA,EACjDmQ,EAAA1L,QAAAq+B,EAAA9iC,SAOA,IAAAklC,GAAA,CACArpC,KAAA,cACAqP,OAAA,CACA05B,WAAA,CACAjB,cAAA,EACAkB,eAAA,IAGAhlC,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAk1B,WAAA,CACAxsB,aAAAusB,GAAAvsB,aAAArJ,KAAAW,GACAsF,cAAA2vB,GAAA3vB,cAAAjG,KAAAW,OAIArS,GAAA,CACAwC,aACA,MAAA6P,EAAA1V,KACA,YAAA0V,EAAAxE,OAAA2I,OAAA,OACAnE,EAAAwX,WAAAtmB,QAAgC8O,EAAAxE,OAAAmc,8BAChC3X,EAAAwX,WAAAtmB,QAAgC8O,EAAAxE,OAAAmc,4BAChC,MAAA0G,EAAA,CACAzb,cAAA,EACAJ,gBAAA,EACAyB,eAAA,EACAc,qBAAA,EACA/C,aAAA,EACAwG,kBAAA,GAEAxO,GAAA0C,OAAAsD,EAAAxE,OAAA6iB,GACArkB,GAAA0C,OAAAsD,EAAAwW,eAAA6H,IAEAluB,eACA,MAAA6P,EAAA1V,KACA,SAAA0V,EAAAxE,OAAA2I,QACAnE,EAAAk1B,WAAAxsB,gBAEAvY,cAAA+C,GACA,MAAA8M,EAAA1V,KACA,SAAA0V,EAAAxE,OAAA2I,QACAnE,EAAAk1B,WAAA5vB,cAAApS,MAKA,MAAAuiC,GAAA,CACAtlC,eACA,MAAA6P,EAAA1V,MAEA2B,MAAAsnC,EAAAvnC,OAAAwnC,EAAAtyB,SAAAT,aAAAc,mBACKvB,EACLxE,EAAAwE,EAAAxE,OAAAk6B,gBACAt1B,EAAAJ,EAAAI,eACA4zB,EAAAh0B,EAAA4F,UACA+vB,EAAAv1B,EAAAmzB,EAAA,EAAAS,EAAAR,EAAA,EAAAQ,EACAoB,EAAAh1B,EAAA5E,EAAA45B,QAAA55B,EAAA45B,OACAxvB,EAAApK,EAAAo6B,MAEA,QAAAtlC,EAAA,EAAAC,EAAA2Q,EAAA3Q,OAA2CD,EAAAC,EAAYD,GAAA,GACvD,MAAA2tB,EAAA/c,EAAArJ,GAAAvH,GACAyR,EAAAR,EAAAjR,GACAulC,EAAA5X,EAAA,GAAAzY,kBACAswB,GAAAH,EAAAE,EAAA9zB,EAAA,GAAAA,EAAAvG,EAAAu6B,SAEA,IAAAV,EAAAj1B,EAAAg1B,EAAAU,EAAA,EACAR,EAAAl1B,EAAA,EAAAg1B,EAAAU,EAEAE,GAAApwB,EAAAnD,KAAAuB,IAAA8xB,GAEAxK,EAAAlrB,EAAA,EAAA5E,EAAAy6B,QAAA,EACA5K,EAAAjrB,EAAA5E,EAAAy6B,QAAA,IAGAxzB,KAAAuB,IAAAqnB,GAAA,OAAAA,EAAA,GACA5oB,KAAAuB,IAAAsnB,GAAA,OAAAA,EAAA,GACA7oB,KAAAuB,IAAAgyB,GAAA,OAAAA,EAAA,GACAvzB,KAAAuB,IAAAqxB,GAAA,OAAAA,EAAA,GACA5yB,KAAAuB,IAAAsxB,GAAA,OAAAA,EAAA,GAEA,MAAAY,iBAA4C7K,OAAgBC,OAAgB0K,iBAA0BV,iBAAuBD,QAI7H,GAFApX,EAAAnrB,UAAAojC,GACAjY,EAAA,GAAAjzB,MAAAuqC,OAAA,EAAA9yB,KAAAuB,IAAAvB,KAAAqxB,MAAAgC,IACAt6B,EAAAy4B,aAAA,CAEA,IAAAkC,EAAA/1B,EAAA6d,EAAA/kB,KAAA,6BAAA+kB,EAAA/kB,KAAA,4BACAk9B,EAAAh2B,EAAA6d,EAAA/kB,KAAA,8BAAA+kB,EAAA/kB,KAAA,+BACA,IAAAi9B,EAAA5lC,SACA4lC,EAA4B3lC,qCAAqC4P,EAAA,wBACjE6d,EAAAlmB,OAAAo+B,IAEA,IAAAC,EAAA7lC,SACA6lC,EAA2B5lC,qCAAqC4P,EAAA,4BAChE6d,EAAAlmB,OAAAq+B,IAEAD,EAAA5lC,SAAA4lC,EAAA,GAAAnrC,MAAAu7B,QAAAuP,EAAA,EAAAA,EAAA,GACAM,EAAA7lC,SAAA6lC,EAAA,GAAAprC,MAAAu7B,SAAAuP,EAAA,GAAAA,EAAA,IAKA,GAAQn5B,GAAOK,eAAkBL,GAAOQ,sBAAA,CACxC,MAAAk5B,EAAA51B,EAAA,GAAAzV,MACAqrC,EAAAC,qBAAgCX,YAGhCxlC,cAAA+C,GACA,MAAA8M,EAAA1V,KACA0V,EAAAkB,OACAjO,WAAAC,GACAgG,KAAA,gHACAjG,WAAAC,KAIA,IAAAqjC,GAAA,CACApqC,KAAA,mBACAqP,OAAA,CACAk6B,gBAAA,CACAN,OAAA,GACAa,QAAA,EACAL,MAAA,IACAG,SAAA,EACA9B,cAAA,IAGA9jC,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACA01B,gBAAA,CACAhtB,aAAA+sB,GAAA/sB,aAAArJ,KAAAW,GACAsF,cAAAmwB,GAAAnwB,cAAAjG,KAAAW,OAIArS,GAAA,CACAwC,aACA,MAAA6P,EAAA1V,KACA,cAAA0V,EAAAxE,OAAA2I,SAEAnE,EAAAwX,WAAAtmB,QAAgC8O,EAAAxE,OAAAmc,mCAChC3X,EAAAwX,WAAAtmB,QAAgC8O,EAAAxE,OAAAmc,4BAEhC3X,EAAAxE,OAAAuJ,qBAAA,EACA/E,EAAAwW,eAAAzR,qBAAA,IAEA5U,eACA,MAAA6P,EAAA1V,KACA,cAAA0V,EAAAxE,OAAA2I,QACAnE,EAAA01B,gBAAAhtB,gBAEAvY,cAAA+C,GACA,MAAA8M,EAAA1V,KACA,cAAA0V,EAAAxE,OAAA2I,QACAnE,EAAA01B,gBAAApwB,cAAApS,MAKA,MAAAsjC,GAAA,CACArmC,OACA,MAAA6P,EAAA1V,MACWmsC,OAAAC,GAAuB12B,EAAAxE,OAClCuC,EAAAiC,EAAAjE,YACA26B,EAAA12B,kBAAAjC,GACAiC,EAAAy2B,OAAAz2B,OAAA02B,EAAA12B,OACAhG,GAAA0C,OAAAsD,EAAAy2B,OAAAz2B,OAAAwW,eAAA,CACAzR,qBAAA,EACAsD,qBAAA,IAEArO,GAAA0C,OAAAsD,EAAAy2B,OAAAz2B,OAAAxE,OAAA,CACAuJ,qBAAA,EACAsD,qBAAA,KAEKrO,GAAAyC,SAAAi6B,EAAA12B,UACLA,EAAAy2B,OAAAz2B,OAAA,IAAAjC,EAAA/D,GAAA0C,OAAA,GAA4Dg6B,EAAA12B,OAAA,CAC5DgF,uBAAA,EACAD,qBAAA,EACAsD,qBAAA,KAEArI,EAAAy2B,OAAAE,eAAA,GAEA32B,EAAAy2B,OAAAz2B,OAAAC,IAAAzO,SAAAwO,EAAAxE,OAAAi7B,OAAAG,sBACA52B,EAAAy2B,OAAAz2B,OAAArS,GAAA,MAAAqS,EAAAy2B,OAAAI,eAEA1mC,eACA,MAAA6P,EAAA1V,KACAwsC,EAAA92B,EAAAy2B,OAAAz2B,OACA,IAAA82B,EAAA,OACA,MAAA1uB,EAAA0uB,EAAA1uB,aACAD,EAAA2uB,EAAA3uB,aACA,GAAAA,GAAwB3X,EAAC2X,GAAAnW,SAAAgO,EAAAxE,OAAAi7B,OAAAM,uBAAA,OACzB,wBAAA3uB,GAAA,OAAAA,EAAA,OACA,IAAAkD,EAMA,GAJAA,EADAwrB,EAAAt7B,OAAA+L,KACAjH,SAA8B9P,EAACsmC,EAAA3uB,cAAA/V,KAAA,+BAE/BgW,EAEApI,EAAAxE,OAAA+L,KAAA,CACA,IAAAyvB,EAAAh3B,EAAAuF,YACAvF,EAAAkB,OAAArJ,GAAAm/B,GAAAhlC,SAAAgO,EAAAxE,OAAAgM,uBACAxH,EAAAwK,UAEAxK,EAAAyK,YAAAzK,EAAAS,WAAA,GAAAlK,WACAygC,EAAAh3B,EAAAuF,aAEA,MAAAyF,EAAAhL,EAAAkB,OAAArJ,GAAAm/B,GAAAp+B,qCAA4F0S,OAAazT,GAAA,GAAA/M,QACzGqR,EAAA6D,EAAAkB,OAAArJ,GAAAm/B,GAAAx+B,qCAA4F8S,OAAazT,GAAA,GAAA/M,QACzGwgB,EAAA,qBAAAN,EAAA7O,EACA,qBAAAA,EAAA6O,EACA7O,EAAA66B,IAAAhsB,EAAA7O,EACA6O,EAEAhL,EAAA0J,QAAA4B,IAEAnb,OAAA8mC,GACA,MAAAj3B,EAAA1V,KACAwsC,EAAA92B,EAAAy2B,OAAAz2B,OACA,IAAA82B,EAAA,OAEA,MAAAl0B,EAAA,SAAAk0B,EAAAt7B,OAAAoH,cACAk0B,EAAAzrB,uBACAyrB,EAAAt7B,OAAAoH,cAEA,GAAA5C,EAAA+G,YAAA+vB,EAAA/vB,UAAA,CACA,IACAmwB,EADAC,EAAAL,EAAAvxB,YAEA,GAAAuxB,EAAAt7B,OAAA+L,KAAA,CACAuvB,EAAA51B,OAAArJ,GAAAs/B,GAAAnlC,SAAA8kC,EAAAt7B,OAAAgM,uBACAsvB,EAAAtsB,UAEAssB,EAAArsB,YAAAqsB,EAAAr2B,WAAA,GAAAlK,WACA4gC,EAAAL,EAAAvxB,aAGA,MAAA6xB,EAAAN,EAAA51B,OAAArJ,GAAAs/B,GAAAv+B,qCAAgHoH,EAAA+G,eAAiBlP,GAAA,GAAA/M,QACjIusC,EAAAP,EAAA51B,OAAArJ,GAAAs/B,GAAA3+B,qCAAgHwH,EAAA+G,eAAiBlP,GAAA,GAAA/M,QACjIosC,EAAA,qBAAAE,EAAAC,EACA,qBAAAA,EAAAD,EACAC,EAAAF,MAAAC,EAAAD,EACAE,EAAAF,IAAAC,EAAAC,EACAD,OAEAF,EAAAl3B,EAAA+G,UAEA+vB,EAAA/wB,qBAAAhV,QAAAmmC,GAAA,IACAJ,EAAAt7B,OAAAuI,eAEAmzB,EADAA,EAAAC,EACAD,EAAAz0B,KAAAC,MAAAE,EAAA,KAEAs0B,EAAAz0B,KAAAC,MAAAE,EAAA,KAESs0B,EAAAC,IACTD,IAAAt0B,EAAA,GAEAk0B,EAAAptB,QAAAwtB,EAAAD,EAAA,OAAA5iC,IAKA,IAAAijC,EAAA,EACA,MAAAC,EAAAv3B,EAAAxE,OAAAi7B,OAAAM,sBAOA,GALA/2B,EAAAxE,OAAAoH,cAAA,IAAA5C,EAAAxE,OAAAuI,iBACAuzB,EAAAt3B,EAAAxE,OAAAoH,eAGAk0B,EAAA51B,OAAApP,YAAAylC,GACAT,EAAAt7B,OAAA+L,KACA,QAAAjX,EAAA,EAAqBA,EAAAgnC,EAAsBhnC,GAAA,EAC3CwmC,EAAAr2B,WAAA1R,sCAAsEiR,EAAA+G,UAAAzW,OAAqBkB,SAAA+lC,QAG3F,QAAAjnC,EAAA,EAAqBA,EAAAgnC,EAAsBhnC,GAAA,EAC3CwmC,EAAA51B,OAAArJ,GAAAmI,EAAA+G,UAAAzW,GAAAkB,SAAA+lC,KAKA,IAAAC,GAAA,CACArrC,KAAA,SACAqP,OAAA,CACAi7B,OAAA,CACAz2B,OAAA,KACA+2B,sBAAA,4BACAH,qBAAA,4BAGAzmC,SACA,MAAA6P,EAAA1V,KACA0P,GAAA0C,OAAAsD,EAAA,CACAy2B,OAAA,CACAz2B,OAAA,KACAkZ,KAAAsd,GAAAtd,KAAA7Z,KAAAW,GACAsI,OAAAkuB,GAAAluB,OAAAjJ,KAAAW,GACA62B,aAAAL,GAAAK,aAAAx3B,KAAAW,OAIArS,GAAA,CACAwC,aACA,MAAA6P,EAAA1V,MACAmsC,OAAaA,GAASz2B,EAAAxE,OACtBi7B,KAAAz2B,SACAA,EAAAy2B,OAAAvd,OACAlZ,EAAAy2B,OAAAnuB,QAAA,KAEAnY,cACA,MAAA6P,EAAA1V,KACA0V,EAAAy2B,OAAAz2B,QACAA,EAAAy2B,OAAAnuB,UAEAnY,SACA,MAAA6P,EAAA1V,KACA0V,EAAAy2B,OAAAz2B,QACAA,EAAAy2B,OAAAnuB,UAEAnY,SACA,MAAA6P,EAAA1V,KACA0V,EAAAy2B,OAAAz2B,QACAA,EAAAy2B,OAAAnuB,UAEAnY,iBACA,MAAA6P,EAAA1V,KACA0V,EAAAy2B,OAAAz2B,QACAA,EAAAy2B,OAAAnuB,UAEAnY,cAAA+C,GACA,MAAA8M,EAAA1V,KACAwsC,EAAA92B,EAAAy2B,OAAAz2B,OACA82B,GACAA,EAAAxxB,cAAApS,IAEA/C,gBACA,MAAA6P,EAAA1V,KACAwsC,EAAA92B,EAAAy2B,OAAAz2B,OACA82B,GACA92B,EAAAy2B,OAAAE,eAAAG,GACAA,EAAApa,aAQA,MAAAld,GAAA,CACAub,GACAC,GACAE,GACAE,GACAqB,GACA2B,GACAoB,GACA4C,GACAU,GACA8C,GACAiC,GACAW,GACAyD,GACAuB,GACAsB,GACAqB,GACAqB,GACAQ,GACAU,GACAW,GACA2B,GACAQ,GACAe,GACAiB,IAGiB,qBAAN/d,GAAMha,MACfga,GAAMha,IAAOga,GAAMhgB,MAAAgG,IACnBga,GAAM3Z,cAAiB2Z,GAAMhgB,MAAAqG,eAG/B2Z,GAAMha,IAAAD,IAES,IAAAi4B,GAAA,GClzNfC,GAAA,CACAnrC,KADA,WAEA,UAGAorC,QALA,aAOAC,QAAA,CACA9pC,OADA,SACAi6B,GACAz9B,KAAAutC,QAAA3mC,KAAA,CAAAnD,KAAAg6B,MAGAv7B,SAAAC,OAAAC,EAAA,KAAAD,CAAA,GACAA,OAAAE,EAAA,KAAAF,CAAA,uBClCsVqrC,GAAA,GCQlVC,cAAYtrC,OAAAK,EAAA,KAAAL,CACdqrC,GACA5qC,EACAc,GACF,EACA,KACA,KACA,OAIA+pC,GAAShrC,QAAAC,OAAA,mBACM,IAAAgrC,GAAAD,WCYfE,GAAA,CACA9rC,KAAA,OACAI,KAFA,WAGA,OACAf,IAAA,GACAG,KAAA,IACAD,KAAA,EACAwsC,MAAA,KAGA14B,WAAA,CACAvS,WACA+qC,iBAEAxrC,SAAA,GAEAmrC,QAhBA,WAiBA,IAAAF,GAAA,qBACA5V,UAAA,EACA1c,MAAA,IACAhB,OAAA,QACAyI,YAAA,EACArF,MAAA,EACA2b,WAAA,CACAvwB,GAAA,qBACAmxB,kBAAA,uBAIAqU,YA7BA,WA6BA,IAAAC,EAAA9tC,KACA+tC,EAAA,2BACAroC,WAAA,WACAooC,EAAAE,GAAAD,IACA,KACA,IAAAnf,EAAA7oB,KAAAkoC,YAAA,WACAH,EAAA5sC,IAAA+E,QAAA8nC,EAAA9nC,OAAA,GACAioC,cAAAtf,IAEA,IAAAkf,EAAA1sC,IACA0sC,EAAA1sC,KAAA,EAEA0sC,EAAA1sC,KAAA,GAEA,MAEAksC,QAAA,CACAU,GADA,SACAG,GAAA,IAAAC,EAAApuC,KACAQ,EAAA,EACA6tC,EAAAtoC,KAAAkoC,YAAA,WACAztC,EAAA2tC,EAAAloC,OACAioC,cAAAG,IAEAD,EAAAltC,IAAAitC,EAAAG,OAAA,EAAA9tC,GACAA,MAEA,QCvF8V+tC,GAAA,GCQ1VC,cAAYrsC,OAAAK,EAAA,KAAAL,CACdosC,GACAzuC,EACAwB,GACF,EACA,KACA,KACA,OAIAktC,GAAS/rC,QAAAC,OAAA,YACM+rC,EAAA,WAAAD,uECpBf,IAAAE,EAAAC,EAAA,QAAAC,EAAAD,EAAAntC,EAAAktC,GAAuiBE,EAAG,qCCA1iB,IAAAC,EAAAF,EAAA,QAAAG,EAAAH,EAAAntC,EAAAqtC,GAAiiBC,EAAG,qCCArhB,SAAAC,EAAAp/B,EAAAlP,EAAAsH,GAYf,OAXAtH,KAAAkP,EACAxN,OAAAoR,eAAA5D,EAAAlP,EAAA,CACAsH,QACAmK,YAAA,EACA88B,cAAA,EACAC,UAAA,IAGAt/B,EAAAlP,GAAAsH,EAGA4H,ECXe,SAAAu/B,EAAA5lC,GACf,QAAAtD,EAAA,EAAiBA,EAAAgC,UAAA/B,OAAsBD,IAAA,CACvC,IAAAmpC,EAAA,MAAAnnC,UAAAhC,GAAAgC,UAAAhC,GAAA,GACAopC,EAAAjtC,OAAAoN,KAAA4/B,GAEA,oBAAAhtC,OAAAktC,wBACAD,IAAAE,OAAAntC,OAAAktC,sBAAAF,GAAArkC,OAAA,SAAAykC,GACA,OAAAptC,OAAA8P,yBAAAk9B,EAAAI,GAAAr9B,eAIAk9B,EAAA5/B,QAAA,SAAA/O,GACMsuC,EAAczlC,EAAA7I,EAAA0uC,EAAA1uC,MAIpB,OAAA6I,EAjBAqlC,EAAAa,EAAAf,EAAA,sBAAAS,8DCAA,IAAAO,EAAAd,EAAA,QAAAe,EAAAf,EAAAntC,EAAAiuC,GAAmhBC,EAAG","file":"js/chunk-438bf5de.6b8c0596.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((8),function(item,index){return _c('div',{key:item.key,staticClass:\"swiper-slide\",style:({backgroundImage: 'url(http://mziu.club/banner-0'+(index+1)+'.png)'}),attrs:{\"data-swiper-autoplay\":\"5000\"}})})),_c('div',{staticClass:\"swiper-pagination\"})]),_c('div',{attrs:{\"id\":\"chituo\"}},[_vm._m(0),_c('div',{staticClass:\"chituoen\"},[_vm._v(\"\\n        \"+_vm._s(_vm.msg)+\"\\n        \"),_c('span',{staticClass:\"animated\",class:_vm.ind === true? 'fadeIn': 'fadeOut'},[_vm._v(_vm._s(_vm.icon)+\" \")])])]),_c('team-item'),_c('work-show-item')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chituo\"},[_c('span',[_vm._v(\"炽于心\")]),_c('span',[_vm._v(\"●\")]),_c('span',[_vm._v(\"拓于行\")]),_c('div',{staticClass:\"chituo__block chituo__top\"}),_c('div',{staticClass:\"chituo__block chituo__bot\"})])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"team\"},[_c('div',{staticClass:\"team__content\"},[_vm._m(0),_c('div',{staticClass:\"team__content__box\"},_vm._l((_vm.getItemList),function(n){return _c('div',{key:n.key,staticClass:\"team__content__box__pcard\"},[_c('div',{staticClass:\"team__content__box__pcard__box\"},[_c('div',{staticClass:\"team__content__box__pcard__box__img\"},[_c('div',{staticStyle:{\"height\":\"378.53px\",\"width\":\"300px\",\"background-size\":\"100% 100%\"},style:(n.bg)}),_c('div',{staticClass:\"team__content__box__pcard__box__img__info\"},[_c('div',[_vm._v(_vm._s(n.name))]),_c('div',{staticClass:\"team__content__box__pcard__box__img__info__job\"},[_vm._v(_vm._s(n.job))])])])])])})),_vm._m(1)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"team__content__nav\"},[_c('div',{staticClass:\"team__content__nav__title\"},[_vm._v(\"\\\" 设计 · 团队 \\\"\")]),_c('div',{staticClass:\"team__content__nav__titleen\"},[_vm._v(\"\\\" DESIGN · TEAM\\\"\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"team__more\"},[_c('div',{staticClass:\"team__more__en\"},[_vm._v(\"SHOW MORE\")]),_c('div',{staticClass:\"team__more__box\"},[_c('div',{staticClass:\"team__more__cn\"},[_vm._v(\"+查看更多+\")])]),_c('div',{staticClass:\"team__more__line\"})])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"team\">\n    <div class=\"team__content\">\n      <div class=\"team__content__nav\">\n        <div class=\"team__content__nav__title\">\" 设计 · 团队 \"</div>\n        <div class=\"team__content__nav__titleen\">\" DESIGN · TEAM\"</div>\n      </div>\n      <div class=\"team__content__box\">\n        <div v-for=\"n in getItemList\" :key=\"n.key\" class=\"team__content__box__pcard\">\n          <div class=\"team__content__box__pcard__box\">\n            <div class=\"team__content__box__pcard__box__img\">\n              <!-- <img :src=\"n.img\" alt=\"\"> -->\n              <div style=\"height:378.53px;width:300px;background-size:100% 100%;\" :style=\"n.bg\"></div>\n              <div class=\"team__content__box__pcard__box__img__info\">\n                <div>{{ n.name }}</div>\n                <div class=\"team__content__box__pcard__box__img__info__job\">{{ n.job }}</div>\n              </div>\n            </div>\n            <!-- <div class=\"team__content__box__pcard__box__desc\">\n              <div>{{n.name}}</div>\n              <div>&nbsp;</div>\n              <div>{{n.job}}</div>\n              <div>{{n.desc}}</div>\n            </div> -->\n          </div>\n        </div>\n      \n      </div>\n      <div class=\"team__more\">\n        <div class=\"team__more__en\">SHOW MORE</div>\n        <div class=\"team__more__box\"><div class=\"team__more__cn\">+查看更多+</div></div>\n        <div class=\"team__more__line\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n  data () {\n    return {\n    }\n  },\n  computed: {\n    ...mapGetters(['getItemList'])\n  },\n}\n</script>\n<style lang=\"stylus\" scoped>\n.team\n  background-color rgba(239,239,239,0.8)\n  position relative\n  &__content\n    max-width 1400px\n    margin 0 auto\n    padding 30px\n    &__nav\n      text-align center\n      margin-bottom 20px\n      &__title\n        font-size 20px\n        line-height 40px\n        font-family \"microsoft YaHei\"\n        color #5a5a5a\n        margin 30px 0 20px 0\n      &__titleen\n        font-size 24px\n        font-family 'Microsoft YaHei'\n        margin-bottom 30px\n    &__box\n      display flex\n      justify-content space-between\n      &__pcard\n        display inline-block\n        &__box\n          margin 20px 0\n          display flex\n          justify-content space-between\n          &__img\n            position relative\n            overflow hidden\n            z-index 2\n            &__info\n              position absolute\n              width 100%\n              height 30px\n              line-height 40px\n              padding 10px 0\n              bottom 0\n              background-color rgba(0, 0, 0, 0.5)\n              color #ccc\n              z-index 3\n              text-align center\n              font-size 26px\n              transition height 0.5s\n              &__job\n                font-size 20px\n              &:hover\n                height 80px\n                cursor pointer\n            img\n              width 300px\n              box-shadow 0px 0px 10px #8877dd\n              vertical-align bottom\n          &__desc\n            font-size 15px\n            padding 0 80px 0 40px\n            div:nth-child(1)\n              font-size 20px\n              font-weight 600\n            div:nth-child(2)\n              font-size 16px\n            div:nth-child(3)\n              font-size 14px\n.team__more\n  width 500px\n  position relative\n  margin 50px auto\n  text-align center\n  &__en\n    font-family 'Microsoft YaHei'\n    font-size 14px\n    color #434343\n    font-weight normal\n    font-style normal\n  &__box\n    display inline-block\n    z-index 3\n    padding 0 30px\n    position relative\n    background-color rgba(239,239,239,1)\n  &__cn\n    color #3b3b3b\n    font-size 16px\n    font-family 'Microsoft YaHei'\n    border 1px solid #3b3b3b\n    padding 5px 30px\n    display inline-block\n    &:hover {\n      background-color #3b3b3b\n      color #fff\n      cursor pointer\n    }\n  &__line\n    height 1px\n    width 100%;\n    z-index 1\n    background #3b3b3b\n    position absolute\n    bottom 13px\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./teamItem.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./teamItem.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./teamItem.vue?vue&type=template&id=657988a1&scoped=true&\"\nimport script from \"./teamItem.vue?vue&type=script&lang=js&\"\nexport * from \"./teamItem.vue?vue&type=script&lang=js&\"\nimport style0 from \"./teamItem.vue?vue&type=style&index=0&id=657988a1&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"657988a1\",\n  null\n  \n)\n\ncomponent.options.__file = \"teamItem.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"max-width\":\"1400px\",\"overflow\":\"hidden\",\"margin\":\"0 auto\"}},[_c('div',{staticClass:\"wordkshow\"},[_c('el-carousel',{attrs:{\"interval\":3000,\"type\":\"card\",\"height\":\"380px\"}},_vm._l((_vm.getBuildingList),function(n){return _c('el-carousel-item',{key:n.key,attrs:{\"label\":n.title}},[_c('div',{staticClass:\"swiper-slide\",style:({backgroundImage: 'url('+n.img+')'}),on:{\"click\":function($event){_vm.gopath(n.path)}}}),_c('div',{staticClass:\"mytitle\"},[_vm._v(_vm._s(n.title))])])}))],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nimport { window, document } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.4.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: November 1, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          slideSize = parseFloat(slideStyles.getPropertyValue('width'))\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = parseFloat(slideStyles.getPropertyValue('height'))\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","<template>\n  <div style=\"max-width:1400px; overflow:hidden;margin:0 auto\">\n    <div class=\"wordkshow\">\n      <!-- <div class=\"wordkshow__title\">\n        <div class=\"wordkshow__title__text\">住宅建筑</div>\n        <div class=\"wordkshow__title__line\"></div>\n        <div>Residential building</div>\n      </div> -->\n       <el-carousel :interval=\"3000\" type=\"card\" height=\"380px\">\n        <el-carousel-item v-for=\"n in getBuildingList\" :key=\"n.key\" :label=\"n.title\">\n          <div class=\"swiper-slide\"  :style=\"{backgroundImage: 'url('+n.img+')'}\" @click=\"gopath(n.path)\">\n          </div>\n          <div class=\"mytitle\">{{n.title}}</div>\n        </el-carousel-item>\n      </el-carousel>\n    </div>\n  </div>\n</template>\n<script>\nimport { mapGetters } from 'vuex'\nimport Swiper from \"swiper\"\nexport default {\n  data () {\n    return {\n    }\n  },\n  mounted () {\n  },\n  methods: {\n    gopath (p) {\n      this.$router.push({ path: p })\n    }\n  },\n  computed: {\n    ...mapGetters(['getBuildingList'])\n  }\n}\n</script>\n<style lang=\"stylus\">\n.swiper-container\n.swiper-slide\n  -webkit-background-size 100% 100%\n  background-size 100% 100%\n.wordkshow\n  // max-width 980px\n  margin 100px auto\n  &__title\n    text-align center\n    position relative\n    margin 50px auto\n    max-width 980px\n    &__text\n      position relative\n      font-size 40px\n      margin 10px 0\n      z-index 3\n      background-color #fff\n      display inline-block\n      padding 30px 50px\n    &__line\n      position absolute\n      width 100%\n      height 2px\n      background-color #000\n      z-index 2\n      top 50%\n  .mytitle\n    position: absolute;\n    text-align: center;\n    bottom: 0px;\n    width: 100%;\n    height: 30px;\n    font-size: 16px;\n    z-index: 100;\n    line-height: 30px;\n    color: #fff;\n    background: rgba(0,0,0,0.5);\n    padding: 8px 0;\n.el-carousel__indicators--labels\n  margin-top 30px\n  text-align left\n.el-carousel__indicators--labels .el-carousel__indicator\n  padding 15px 10px\n.el-carousel__indicators--labels .el-carousel__button\n  font-size 14px\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./workShowItem.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./workShowItem.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./workShowItem.vue?vue&type=template&id=f317ad2e&\"\nimport script from \"./workShowItem.vue?vue&type=script&lang=js&\"\nexport * from \"./workShowItem.vue?vue&type=script&lang=js&\"\nimport style0 from \"./workShowItem.vue?vue&type=style&index=0&lang=stylus&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"workShowItem.vue\"\nexport default component.exports","<template>\n  <div>\n    <div class=\"swiper-container\">\n　　  <div class=\"swiper-wrapper\">\n　　　　 <div class=\"swiper-slide\" data-swiper-autoplay=\"5000\" v-for=\"(item, index) in 8\" :style=\"{backgroundImage: 'url(http://mziu.club/banner-0'+(index+1)+'.png)'}\" :key=\"item.key\"></div>\n　　　</div>\n     <!-- <div class=\"swiper-button-prev\"></div>\n     <div class=\"swiper-button-next\"></div> -->\n     <div class=\"swiper-pagination\"></div>\n　　</div>\n    <div id=\"chituo\">\n      <div class=\"chituo\">\n        <span>炽于心</span> <span>●</span> <span>拓于行</span>\n        <div class=\"chituo__block chituo__top\"></div>\n        <div class=\"chituo__block chituo__bot\"></div>\n      </div>\n      <div class=\"chituoen\">\n        {{ msg }}\n        <span class=\"animated\" :class=\"ind === true? 'fadeIn': 'fadeOut'\">{{ icon }} </span>\n        <!-- <span>Ｃｈì ｙú ｘīｎ</span>\n        <span>.</span>\n        <span>Ｔｕò ｙú ｘíｎｇ</span> -->\n      </div>\n    </div>\n    <team-item></team-item>\n    <work-show-item></work-show-item>\n  </div>\n</template>\n<script>\nimport teamItem from '../../components/teamItem'\nimport workShowItem from '../../components/workShowItem'\nimport Swiper from \"swiper\"\nexport default {\n  name: 'home',\n  data () {\n    return {\n      msg: ``,\n      icon: '_',\n      ind: true,\n      hands: ''\n    }\n  },\n  components: { //  引入组件\n    teamItem,\n    workShowItem\n  },\n  computed: {\n  },\n  mounted () {\n    var swiper = new Swiper(\".swiper-container\", {\n      autoplay: true, //  自动播放\n      speed: 1000, //  切换速度\n      effect: 'slide', //  切换效果:渐隐\n      grabCursor: true, //  鼠标经过切换为小手\n      loop: true, //  循环\n      pagination: {\n        el: '.swiper-pagination',\n        bulletActiveClass: 'my-bullet-active',\n      },\n　　})\n  },\n  beforeMount () {\n    let info = `Ｃｈì ｙú ｘīｎ . Ｔｕò ｙú ｘíｎｇ`\n    setTimeout(() => {\n      this.pt(info)\n    }, 3000);\n    var init = self.setInterval(() => { //  模拟打字机效果\n      if (this.msg.length >= info.length-7) {\n        clearInterval(init)\n      }\n      if (this.ind === true) {\n        this.ind = false\n      } else {\n        this.ind = true\n      }\n    }, 200)\n  },\n  methods: {\n    pt (t) { //  打印方法\n      let index = 0\n      var int = self.setInterval(() => {\n        if (index > t.length) { //  判断当前的索引大于文字的长度\n          clearInterval(int)\n        } else {\n          this.msg = t.substr(0, index)\n          index++\n        }\n      }, 150)\n    }\n  }\n}\n</script>\n<style lang=\"stylus\">\n\n.swiper-pagination-bullet\n  width 16px\n  height 16px\n  margin 0 5px\n  opacity 0.5\n.my-bullet-active\n  background-color #ececea\n  opacity 1\n.swiper-container\n  height 908px\n.swiper-slide\n  -webkit-background-size 100% 100%\n  background-size 100% 100%\n.swiper2\n  height 170px\n  overflow visible\n  // width 100%\n#chituo //  炽于心，拓于行\n  margin 120px auto\n  text-align center\n  font-family 'Franklin Gothic Medium'\n.chituoen\n  margin-top 50px\n  font-size 30px\n  text-shadow 1px 0px 0px #000\n  font-family 'monospace'\n  // span:nth-child(2)\n  //   margin 0 20px\n  //   font-size 30px\n.chituo\n  width 400px\n  padding 30px 0\n  display inline-block\n  border 3px solid #000\n  position relative\n  z-index 2\n  &__block\n    position absolute\n    width 80%\n    height 60px\n    background-color #fff\n    z-index 3\n  &__top\n    top -4px\n    left -4px\n  &__bot\n    bottom -4px\n    right -4px\n  span\n    position relative\n    z-index 4\n    letter-spacing 2px\n    font-size 40px\n  // span:nth-child(1)\n  span:nth-child(2)\n    margin 0 20px\n    font-size 30px\n  // span:nth-child(3)\n.wordkshow\n  // max-width 980px\n  margin 100px auto\n  &__title\n    text-align center\n    position relative\n    margin 50px auto\n    max-width 980px\n    &__text\n      position relative\n      font-size 40px\n      margin 10px 0\n      z-index 3\n      background-color #fff\n      display inline-block\n      padding 30px 50px\n    &__line\n      position absolute\n      width 100%\n      height 2px\n      background-color #000\n      z-index 2\n      top 50%\n  .mytitle\n    position absolute\n    text-align center\n    bottom -40px\n    width 100%\n    height 20px \n    font-size 16px\n    z-index 100\n    color #000\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2dafd192&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=stylus&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"index.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./teamItem.vue?vue&type=style&index=0&id=657988a1&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./teamItem.vue?vue&type=style&index=0&id=657988a1&lang=stylus&scoped=true&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=stylus&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=stylus&\"","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./workShowItem.vue?vue&type=style&index=0&lang=stylus&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./workShowItem.vue?vue&type=style&index=0&lang=stylus&\""],"sourceRoot":""}